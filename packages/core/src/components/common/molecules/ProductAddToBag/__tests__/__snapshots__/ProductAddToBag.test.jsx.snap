// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductAddToBagVanilla should render correctly should match snapshot 1`] = `
<form
  className=""
  noValidate={true}
>
  <Styled(Row)
    className="edit-form-css"
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 10,
          "medium": 10,
          "small": 10,
        }
      }
    >
      <div
        className="select-value-wrapper"
      >
        <div
          className="color-selector"
        >
          <Field
            colorFitsSizesMap={
              Immutable.List [
                Immutable.Map {
                  "categoryEntity": "Girl:School Uniforms",
                  "fits": Immutable.List [
                    Immutable.Map {
                      "fitName": "regular",
                      "isDefault": true,
                      "maxAvailable": 1.7976931348623157e+308,
                      "sizes": Immutable.List [
                        Immutable.Map {
                          "variantId": "00193511074322",
                          "maxAvailable": 739,
                          "variantNo": "3000935007",
                          "position": 0,
                          "listPrice": 12.95,
                          "sizeName": "XS (4)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1281998",
                        },
                        Immutable.Map {
                          "variantId": "00193511074339",
                          "maxAvailable": 6771,
                          "variantNo": "3000935008",
                          "position": 1,
                          "listPrice": 12.95,
                          "sizeName": "S (5/6)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1282327",
                        },
                        Immutable.Map {
                          "variantId": "00193511074346",
                          "maxAvailable": 12920,
                          "variantNo": "3000935009",
                          "position": 2,
                          "listPrice": 12.95,
                          "sizeName": "M (7/8)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1281700",
                        },
                        Immutable.Map {
                          "variantId": "00193511074353",
                          "maxAvailable": 9331,
                          "variantNo": "3000935010",
                          "position": 3,
                          "listPrice": 12.95,
                          "sizeName": "L (10/12)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1281815",
                        },
                        Immutable.Map {
                          "variantId": "00193511074360",
                          "maxAvailable": 4381,
                          "variantNo": "3000935011",
                          "position": 4,
                          "listPrice": 12.95,
                          "sizeName": "XL (14)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1281870",
                        },
                        Immutable.Map {
                          "variantId": "00193511074377",
                          "maxAvailable": 3473,
                          "variantNo": "3000935012",
                          "position": 5,
                          "listPrice": 12.95,
                          "sizeName": "XXL (16)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1281922",
                        },
                      ],
                    },
                    Immutable.Map {
                      "fitName": "plus",
                      "isDefault": false,
                      "maxAvailable": 1.7976931348623157e+308,
                      "sizes": Immutable.List [
                        Immutable.Map {
                          "variantId": "00193511079488",
                          "maxAvailable": 1037,
                          "variantNo": "3000936026",
                          "position": 0,
                          "listPrice": 12.95,
                          "sizeName": "L(10P-12P)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1225288",
                        },
                        Immutable.Map {
                          "variantId": "00193511079495",
                          "maxAvailable": 1231,
                          "variantNo": "3000936027",
                          "position": 1,
                          "listPrice": 12.95,
                          "sizeName": "XL(14P)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1225289",
                        },
                        Immutable.Map {
                          "variantId": "00193511079471",
                          "maxAvailable": 2345,
                          "variantNo": "3000936025",
                          "position": 2,
                          "listPrice": 12.95,
                          "sizeName": "XXL (16P)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1225287",
                        },
                      ],
                    },
                  ],
                  "color": Immutable.Map {
                    "name": "TIDAL",
                    "imagePath": "/wcsstore/GlobalSAS/images/tcp/products/swatches/3000935_IV.jpg",
                    "family": "BLUE",
                  },
                  "maxAvailable": 42228,
                  "imageName": "3000935_IV",
                  "colorProductId": "1281598",
                  "favoritedCount": 0,
                  "name": null,
                  "listPrice": 12.95,
                  "offerPrice": 12.95,
                  "unbxdId": null,
                  "maxAvailableBoss": 0,
                  "pdpUrl": "/us/p/3000935_IV",
                  "colorDisplayId": "3000935_IV",
                  "miscInfo": Immutable.Map {
                    "isBopisEligible": false,
                    "isBossEligible": true,
                    "badge1": Immutable.Map {
                      "defaultBadge": "ONLINE EXCLUSIVE",
                    },
                    "badge2": "",
                    "isClearance": "",
                    "hasOnModelAltImages": "",
                    "videoUrl": "",
                    "keepAlive": false,
                  },
                  "hasFits": true,
                },
              ]
            }
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gqjmRU",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  .color-chips-selector-container {
    .inline-error-message {
      white-space: normal;
    }
  }

  .color-chips-selector-items-list {
    position: relative;
    width: 100%;
    margin-top: ",
                    [Function],
                    ";
    cursor: auto;
  }

  .color-chips-selector-item {
    width: 30px;
    height: 30px;
    padding: 0px;
    display: inline-block;
    vertical-align: middle;
    margin: 5px 16px 5px 0;
    border-radius: 50%;
    line-height: 25px;
    position: relative;

    .input-radio-title {
      line-height: 0px;
      position: absolute;
      top: 0;
    }

    /* First color's chip */
    &:first-of-type {
      margin-left: 0px;
    }

    .input-radio-icon-unchecked,
    .input-radio-icon-checked {
      top: auto;
      width: 30px;
      height: 30px;
      vertical-align: middle;

      input[type='radio'] {
        left: 0px;
        z-index: 1;
        width: 100%;
        height: 100%;
        cursor: pointer;
        -webkit-appearance: none;
      }

      input[type='radio']:focus {
        border-radius: 15px;
        box-shadow: 0 0 0 2pt #87cefa;
        margin-top: -2px;
        margin-left: -3px;
        width: 30px;
        height: 30px;
        outline: 0;
      }

      &:before,
      &:after {
        display: none;
      }

      @media ",
                    [Function],
                    " {
        width: 23px;
        height: 23px;
      }
    }

    /* Container of title name and image */
    .color-title-container {
      display: inline-block;
    }

    /* Color name */
    .color-name {
      font-size: 0;
    }

    /* Image color of item */
    .color-image {
      border-radius: 50%;
      position: relative;
      width: 30px;
      height: 30px;
      cursor: pointer;

      @media ",
                    [Function],
                    " {
        width: 23px;
        height: 23px;
      }
    }

    /* When the input is checked, the image color has black border (selected) */
    .input-radio-icon-checked + .input-radio-title .color-image {
      border: 2px solid ",
                    [Function],
                    ";
      width: 26px;
      height: 26px;

      @media ",
                    [Function],
                    " {
        width: 19px;
        height: 19px;
      }
    }

    @media ",
                    [Function],
                    " {
      width: 23px;
      height: 23px;
    }
  }
",
                    ";
",
                  ],
                },
                "displayName": "Styled(ProductColorChipsSelector)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gqjmRU",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            dataLocator="addnewaddress-state"
            id="color"
            name="color"
            onChange={[MockFunction]}
            title=":"
            width={87}
          />
        </div>
        <div
          className="size-selector"
        >
          <Field
            className="size-field"
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-VigVT",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  .size-and-fit-detail-container {
    .size-and-fit-detail-title-msg {
      font-size: ",
                    [Function],
                    "px;
      font-weight: ",
                    [Function],
                    ";
      margin-left: 25px;
      vertical-align: middle;
    }
  }

  .size-and-fit-detail-items-list {
    margin-top: ",
                    [Function],
                    ";
    width: calc(100% + 10px);
    position: relative;
    left: -5px;
  }

  /* Radio Button for size */
  .size-and-fit-detail-item {
    padding: 0px;
    margin: 5px;
    cursor: pointer;

    .input-radio-title {
      padding: 5px ",
                    [Function],
                    ";
      border: solid 1px #e3e3e3;
      display: inline-block;
      text-transform: capitalize;
      font-size: ",
                    [Function],
                    "px;
      border-radius: 6px;
      margin-bottom: ",
                    [Function],
                    ";
    }

    &.item-disabled-option .input-radio-title {
      color: #e3e3e3;
      cursor: initial;
    }

    .input-radio-icon-unchecked,
    .input-radio-icon-checked {
      width: auto;
      height: auto;
      top: auto;
      position: absolute;
      vertical-align: middle;

      input {
        -webkit-appearance: none;
      }

      &:before,
      &:after {
        display: none;
      }
    }

    .input-radio-icon-checked + .input-radio-title {
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
      border: solid 1px ",
                    [Function],
                    ";
    }
  }
",
                    ";
",
                  ],
                },
                "displayName": "Styled(ProductSizeSelector)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-VigVT",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            dataLocator="addnewaddress-state"
            id="size"
            name="Size"
            onChange={[MockFunction]}
            sizesMap={
              Immutable.List [
                Immutable.Map {
                  "displayName": "XS (4)",
                  "id": "XS (4)",
                  "maxAvailable": 739,
                },
              ]
            }
            title=":"
            width={49}
          />
        </div>
        <div
          className="qty-selector"
        >
          <Field
            component={[Function]}
            dataLocator="addnewaddress-state"
            id="quantity"
            name="Quantity"
            options={1}
            width={32}
          />
        </div>
      </div>
    </Styled(Col)>
  </Styled(Row)>
</form>
`;

exports[`ProductAddToBagVanilla should render correctly should match snapshot with error messages 1`] = `
<form
  className=""
  noValidate={true}
>
  <Styled(Row)
    className="edit-form-css"
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 10,
          "medium": 10,
          "small": 10,
        }
      }
    >
      <div
        className="select-value-wrapper"
      >
        <div
          className="color-selector"
        >
          <Field
            colorFitsSizesMap={
              Immutable.List [
                Immutable.Map {
                  "categoryEntity": "Girl:School Uniforms",
                  "fits": Immutable.List [
                    Immutable.Map {
                      "fitName": "regular",
                      "isDefault": true,
                      "maxAvailable": 1.7976931348623157e+308,
                      "sizes": Immutable.List [
                        Immutable.Map {
                          "variantId": "00193511074322",
                          "maxAvailable": 739,
                          "variantNo": "3000935007",
                          "position": 0,
                          "listPrice": 12.95,
                          "sizeName": "XS (4)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1281998",
                        },
                        Immutable.Map {
                          "variantId": "00193511074339",
                          "maxAvailable": 6771,
                          "variantNo": "3000935008",
                          "position": 1,
                          "listPrice": 12.95,
                          "sizeName": "S (5/6)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1282327",
                        },
                        Immutable.Map {
                          "variantId": "00193511074346",
                          "maxAvailable": 12920,
                          "variantNo": "3000935009",
                          "position": 2,
                          "listPrice": 12.95,
                          "sizeName": "M (7/8)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1281700",
                        },
                        Immutable.Map {
                          "variantId": "00193511074353",
                          "maxAvailable": 9331,
                          "variantNo": "3000935010",
                          "position": 3,
                          "listPrice": 12.95,
                          "sizeName": "L (10/12)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1281815",
                        },
                        Immutable.Map {
                          "variantId": "00193511074360",
                          "maxAvailable": 4381,
                          "variantNo": "3000935011",
                          "position": 4,
                          "listPrice": 12.95,
                          "sizeName": "XL (14)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1281870",
                        },
                        Immutable.Map {
                          "variantId": "00193511074377",
                          "maxAvailable": 3473,
                          "variantNo": "3000935012",
                          "position": 5,
                          "listPrice": 12.95,
                          "sizeName": "XXL (16)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1281922",
                        },
                      ],
                    },
                    Immutable.Map {
                      "fitName": "plus",
                      "isDefault": false,
                      "maxAvailable": 1.7976931348623157e+308,
                      "sizes": Immutable.List [
                        Immutable.Map {
                          "variantId": "00193511079488",
                          "maxAvailable": 1037,
                          "variantNo": "3000936026",
                          "position": 0,
                          "listPrice": 12.95,
                          "sizeName": "L(10P-12P)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1225288",
                        },
                        Immutable.Map {
                          "variantId": "00193511079495",
                          "maxAvailable": 1231,
                          "variantNo": "3000936027",
                          "position": 1,
                          "listPrice": 12.95,
                          "sizeName": "XL(14P)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1225289",
                        },
                        Immutable.Map {
                          "variantId": "00193511079471",
                          "maxAvailable": 2345,
                          "variantNo": "3000936025",
                          "position": 2,
                          "listPrice": 12.95,
                          "sizeName": "XXL (16P)",
                          "offerPrice": 12.95,
                          "maxAvailableBoss": 0,
                          "skuId": "1225287",
                        },
                      ],
                    },
                  ],
                  "color": Immutable.Map {
                    "name": "TIDAL",
                    "imagePath": "/wcsstore/GlobalSAS/images/tcp/products/swatches/3000935_IV.jpg",
                    "family": "BLUE",
                  },
                  "maxAvailable": 42228,
                  "imageName": "3000935_IV",
                  "colorProductId": "1281598",
                  "favoritedCount": 0,
                  "name": null,
                  "listPrice": 12.95,
                  "offerPrice": 12.95,
                  "unbxdId": null,
                  "maxAvailableBoss": 0,
                  "pdpUrl": "/us/p/3000935_IV",
                  "colorDisplayId": "3000935_IV",
                  "miscInfo": Immutable.Map {
                    "isBopisEligible": false,
                    "isBossEligible": true,
                    "badge1": Immutable.Map {
                      "defaultBadge": "ONLINE EXCLUSIVE",
                    },
                    "badge2": "",
                    "isClearance": "",
                    "hasOnModelAltImages": "",
                    "videoUrl": "",
                    "keepAlive": false,
                  },
                  "hasFits": true,
                },
              ]
            }
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gqjmRU",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  .color-chips-selector-container {
    .inline-error-message {
      white-space: normal;
    }
  }

  .color-chips-selector-items-list {
    position: relative;
    width: 100%;
    margin-top: ",
                    [Function],
                    ";
    cursor: auto;
  }

  .color-chips-selector-item {
    width: 30px;
    height: 30px;
    padding: 0px;
    display: inline-block;
    vertical-align: middle;
    margin: 5px 16px 5px 0;
    border-radius: 50%;
    line-height: 25px;
    position: relative;

    .input-radio-title {
      line-height: 0px;
      position: absolute;
      top: 0;
    }

    /* First color's chip */
    &:first-of-type {
      margin-left: 0px;
    }

    .input-radio-icon-unchecked,
    .input-radio-icon-checked {
      top: auto;
      width: 30px;
      height: 30px;
      vertical-align: middle;

      input[type='radio'] {
        left: 0px;
        z-index: 1;
        width: 100%;
        height: 100%;
        cursor: pointer;
        -webkit-appearance: none;
      }

      input[type='radio']:focus {
        border-radius: 15px;
        box-shadow: 0 0 0 2pt #87cefa;
        margin-top: -2px;
        margin-left: -3px;
        width: 30px;
        height: 30px;
        outline: 0;
      }

      &:before,
      &:after {
        display: none;
      }

      @media ",
                    [Function],
                    " {
        width: 23px;
        height: 23px;
      }
    }

    /* Container of title name and image */
    .color-title-container {
      display: inline-block;
    }

    /* Color name */
    .color-name {
      font-size: 0;
    }

    /* Image color of item */
    .color-image {
      border-radius: 50%;
      position: relative;
      width: 30px;
      height: 30px;
      cursor: pointer;

      @media ",
                    [Function],
                    " {
        width: 23px;
        height: 23px;
      }
    }

    /* When the input is checked, the image color has black border (selected) */
    .input-radio-icon-checked + .input-radio-title .color-image {
      border: 2px solid ",
                    [Function],
                    ";
      width: 26px;
      height: 26px;

      @media ",
                    [Function],
                    " {
        width: 19px;
        height: 19px;
      }
    }

    @media ",
                    [Function],
                    " {
      width: 23px;
      height: 23px;
    }
  }
",
                    ";
",
                  ],
                },
                "displayName": "Styled(ProductColorChipsSelector)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gqjmRU",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            dataLocator="addnewaddress-state"
            id="color"
            name="color"
            onChange={[MockFunction]}
            title=":"
            width={87}
          />
        </div>
        <div
          className="size-selector"
        >
          <Field
            className="size-field-error"
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-VigVT",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  .size-and-fit-detail-container {
    .size-and-fit-detail-title-msg {
      font-size: ",
                    [Function],
                    "px;
      font-weight: ",
                    [Function],
                    ";
      margin-left: 25px;
      vertical-align: middle;
    }
  }

  .size-and-fit-detail-items-list {
    margin-top: ",
                    [Function],
                    ";
    width: calc(100% + 10px);
    position: relative;
    left: -5px;
  }

  /* Radio Button for size */
  .size-and-fit-detail-item {
    padding: 0px;
    margin: 5px;
    cursor: pointer;

    .input-radio-title {
      padding: 5px ",
                    [Function],
                    ";
      border: solid 1px #e3e3e3;
      display: inline-block;
      text-transform: capitalize;
      font-size: ",
                    [Function],
                    "px;
      border-radius: 6px;
      margin-bottom: ",
                    [Function],
                    ";
    }

    &.item-disabled-option .input-radio-title {
      color: #e3e3e3;
      cursor: initial;
    }

    .input-radio-icon-unchecked,
    .input-radio-icon-checked {
      width: auto;
      height: auto;
      top: auto;
      position: absolute;
      vertical-align: middle;

      input {
        -webkit-appearance: none;
      }

      &:before,
      &:after {
        display: none;
      }
    }

    .input-radio-icon-checked + .input-radio-title {
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
      border: solid 1px ",
                    [Function],
                    ";
    }
  }
",
                    ";
",
                  ],
                },
                "displayName": "Styled(ProductSizeSelector)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-VigVT",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            dataLocator="addnewaddress-state"
            id="size"
            name="Size"
            onChange={[MockFunction]}
            sizesMap={
              Immutable.List [
                Immutable.Map {
                  "displayName": "XS (4)",
                  "id": "XS (4)",
                  "maxAvailable": 739,
                },
              ]
            }
            title=":"
            width={49}
          />
          <Styled(BodyCopy)
            className="size-error"
            color="text.primary"
            component="div"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            <Styled(Image)
              alt="Error"
              className="error-image"
              data-locator="productcustomizeform-error-icon"
              src="/static/images/alert-triangle.png"
            />
            <Styled(BodyCopy)
              className="size-error-message"
              color="text.primary"
              component="div"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            />
          </Styled(BodyCopy)>
        </div>
        <div
          className="qty-selector"
        >
          <Field
            component={[Function]}
            dataLocator="addnewaddress-state"
            id="quantity"
            name="Quantity"
            options={1}
            width={32}
          />
        </div>
      </div>
    </Styled(Col)>
  </Styled(Row)>
</form>
`;
