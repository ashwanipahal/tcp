// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProductAddToBagVanilla should render correctly should match snapshot 1`] = `
<form
  className=""
  noValidate={true}
>
  <Styled(Row)
    className="edit-form-css"
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 10,
          "medium": 10,
          "small": 10,
        }
      }
    >
      <div
        className="select-value-wrapper"
      >
        <div
          className="size-selector"
        >
          <Field
            className="size-field"
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kAzzGY",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  .size-and-fit-detail-container {
    .size-and-fit-detail-title-msg {
      font-size: ",
                    [Function],
                    "px;
      font-weight: ",
                    [Function],
                    ";
      margin-left: 25px;
      vertical-align: middle;
      font-family: ",
                    [Function],
                    ";
    }
  }

  .size-and-fit-detail-items-list {
    margin-top: ",
                    [Function],
                    ";
    width: calc(100% + 10px);
    position: relative;
    left: -5px;
    font-family: ",
                    [Function],
                    ";
  }

  /* Radio Button for size */
  .size-and-fit-detail-item {
    padding: 0px;
    margin: 5px;
    cursor: pointer;

    .input-radio-title {
      padding: 5px ",
                    [Function],
                    ";
      border: solid 1px #e3e3e3;
      display: inline-block;
      text-transform: capitalize;
      font-size: ",
                    [Function],
                    "px;
      border-radius: 6px;
      margin-bottom: ",
                    [Function],
                    ";
      text-align: center;
      width: 54px;
    }

    &.item-disabled-option .input-radio-title {
      color: #e3e3e3;
      cursor: initial;
    }

    .input-radio-icon-unchecked,
    .input-radio-icon-checked {
      width: auto;
      height: auto;
      top: auto;
      position: absolute;
      vertical-align: middle;

      input {
        -webkit-appearance: none;
        display: none;
      }

      &:before,
      &:after {
        display: none;
      }
    }

    .input-radio-icon-checked + .input-radio-title {
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
      border: solid 1px ",
                    [Function],
                    ";
      font-weight: ",
                    [Function],
                    ";
    }
  }
",
                    ";
",
                  ],
                },
                "displayName": "Styled(ProductSizeSelector)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kAzzGY",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            dataLocator="addnewaddress-state"
            id="size"
            name="Size"
            onChange={[MockFunction]}
            sizesMap={
              Immutable.List [
                Immutable.Map {
                  "displayName": "XS (4)",
                  "id": "XS (4)",
                  "maxAvailable": 739,
                },
              ]
            }
            title="Size:"
            width={49}
          />
        </div>
        <div
          className="qty-selector"
        >
          <Field
            component={[Function]}
            dataLocator="addnewaddress-state"
            id="quantity"
            name="Quantity"
            options={1}
            width={32}
          />
        </div>
      </div>
      <Measure
        name="controls_visible"
      />
    </Styled(Col)>
  </Styled(Row)>
</form>
`;

exports[`ProductAddToBagVanilla should render correctly should match snapshot with error messages 1`] = `
<form
  className=""
  noValidate={true}
>
  <Styled(Row)
    className="edit-form-css"
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 10,
          "medium": 10,
          "small": 10,
        }
      }
    >
      <div
        className="select-value-wrapper"
      >
        <div
          className="size-selector"
        >
          <Field
            className="size-field-error"
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-kAzzGY",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  .size-and-fit-detail-container {
    .size-and-fit-detail-title-msg {
      font-size: ",
                    [Function],
                    "px;
      font-weight: ",
                    [Function],
                    ";
      margin-left: 25px;
      vertical-align: middle;
      font-family: ",
                    [Function],
                    ";
    }
  }

  .size-and-fit-detail-items-list {
    margin-top: ",
                    [Function],
                    ";
    width: calc(100% + 10px);
    position: relative;
    left: -5px;
    font-family: ",
                    [Function],
                    ";
  }

  /* Radio Button for size */
  .size-and-fit-detail-item {
    padding: 0px;
    margin: 5px;
    cursor: pointer;

    .input-radio-title {
      padding: 5px ",
                    [Function],
                    ";
      border: solid 1px #e3e3e3;
      display: inline-block;
      text-transform: capitalize;
      font-size: ",
                    [Function],
                    "px;
      border-radius: 6px;
      margin-bottom: ",
                    [Function],
                    ";
      text-align: center;
      width: 54px;
    }

    &.item-disabled-option .input-radio-title {
      color: #e3e3e3;
      cursor: initial;
    }

    .input-radio-icon-unchecked,
    .input-radio-icon-checked {
      width: auto;
      height: auto;
      top: auto;
      position: absolute;
      vertical-align: middle;

      input {
        -webkit-appearance: none;
        display: none;
      }

      &:before,
      &:after {
        display: none;
      }
    }

    .input-radio-icon-checked + .input-radio-title {
      background: ",
                    [Function],
                    ";
      color: ",
                    [Function],
                    ";
      border: solid 1px ",
                    [Function],
                    ";
      font-weight: ",
                    [Function],
                    ";
    }
  }
",
                    ";
",
                  ],
                },
                "displayName": "Styled(ProductSizeSelector)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-kAzzGY",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            dataLocator="addnewaddress-state"
            id="size"
            name="Size"
            onChange={[MockFunction]}
            sizesMap={
              Immutable.List [
                Immutable.Map {
                  "displayName": "XS (4)",
                  "id": "XS (4)",
                  "maxAvailable": 739,
                },
              ]
            }
            title="Size:"
            width={49}
          />
          <Styled(BodyCopy)
            className="size-error"
            color="text.primary"
            component="div"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            <Styled(Image)
              alt="Error"
              className="error-image"
              data-locator="productcustomizeform-error-icon"
              src="/static/images/alert-triangle.png"
            />
            <Styled(BodyCopy)
              className="size-error-message"
              color="text.primary"
              component="div"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            />
          </Styled(BodyCopy)>
        </div>
        <div
          className="qty-selector"
        >
          <Field
            component={[Function]}
            dataLocator="addnewaddress-state"
            id="quantity"
            name="Quantity"
            options={1}
            width={32}
          />
        </div>
      </div>
      <Measure
        name="controls_visible"
      />
    </Styled(Col)>
  </Styled(Row)>
</form>
`;
