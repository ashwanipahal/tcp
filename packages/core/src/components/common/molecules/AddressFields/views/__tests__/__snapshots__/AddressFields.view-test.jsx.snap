// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddressFields component should render correctly 1`] = `
<div
  className=""
>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-firstname"
        enableSuccessCheck={false}
        id="address.firstName"
        name="firstName"
        type="text"
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-lastname"
        enableSuccessCheck={false}
        id="address.lastName"
        name="lastName"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={[Function]}
        componentRestrictions={
          Object {
            "country": Array [
              undefined,
            ],
          }
        }
        dataLocator="addnewaddress-addressl1"
        enableSuccessCheck={false}
        id="address.addressLine1"
        name="addressLine1"
        onPlaceSelected={[Function]}
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-addressl2"
        enableSuccessCheck={false}
        id="address.addressLine2"
        name="addressLine2"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-city"
        enableSuccessCheck={false}
        id="address.city"
        name="city"
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 3,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;
  height: 70px;

  .select__input {
    appearance: none;
    background: url(",
                "/static/images/carrot-small-down.png",
                ") no-repeat right 0px bottom 6px;
    border: 0;
    border-bottom: 1px solid ",
                [Function],
                ";
    ",
                [Function],
                ";
    border-radius: 0;
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    margin: 0;
    margin-bottom: ",
                [Function],
                ";
    outline: 0;
    padding: ",
                "26px",
                " 0 ",
                [Function],
                ";
    width: 100%;

    ",
                [Function],
                ";
  }

  .select__label {
    font-size: ",
                [Function],
                "px;
    font-weight: ",
                [Function],
                ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  .SelectBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }

  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-state"
        enableSuccessCheck={false}
        id="address.state"
        name="state"
        onChange={[Function]}
        options={
          Array [
            Object {
              "displayName": "AL",
              "fullName": "Alabama",
              "id": "AL",
            },
            Object {
              "displayName": "AK",
              "fullName": "Alaska",
              "id": "AK",
            },
            Object {
              "displayName": "AS",
              "fullName": "American Samoa",
              "id": "AS",
            },
            Object {
              "displayName": "AZ",
              "fullName": "Arizona",
              "id": "AZ",
            },
            Object {
              "displayName": "AR",
              "fullName": "Arkansas",
              "id": "AR",
            },
            Object {
              "displayName": "AA",
              "fullName": "",
              "id": "AA",
            },
            Object {
              "displayName": "AE",
              "fullName": "",
              "id": "AE",
            },
            Object {
              "displayName": "AP",
              "fullName": "",
              "id": "AP",
            },
            Object {
              "displayName": "CA",
              "fullName": "California",
              "id": "CA",
            },
            Object {
              "displayName": "CO",
              "fullName": "Colorado",
              "id": "CO",
            },
            Object {
              "displayName": "CT",
              "fullName": "Connecticut",
              "id": "CT",
            },
            Object {
              "displayName": "DE",
              "fullName": "Delaware",
              "id": "DE",
            },
            Object {
              "displayName": "DC",
              "fullName": "Dist. of Columbia",
              "id": "DC",
            },
            Object {
              "displayName": "FM",
              "fullName": "",
              "id": "FM",
            },
            Object {
              "displayName": "FL",
              "fullName": "Florida",
              "id": "FL",
            },
            Object {
              "displayName": "GA",
              "fullName": "Georgia",
              "id": "GA",
            },
            Object {
              "displayName": "GU",
              "fullName": "Guam",
              "id": "GU",
            },
            Object {
              "displayName": "HI",
              "fullName": "Hawaii",
              "id": "HI",
            },
            Object {
              "displayName": "ID",
              "fullName": "Idaho",
              "id": "ID",
            },
            Object {
              "displayName": "IL",
              "fullName": "Illinois",
              "id": "IL",
            },
            Object {
              "displayName": "IN",
              "fullName": "Indiana",
              "id": "IN",
            },
            Object {
              "displayName": "IA",
              "fullName": "Iowa",
              "id": "IA",
            },
            Object {
              "displayName": "KS",
              "fullName": "Kansas",
              "id": "KS",
            },
            Object {
              "displayName": "KY",
              "fullName": "Kentucky",
              "id": "KY",
            },
            Object {
              "displayName": "LA",
              "fullName": "Louisiana",
              "id": "LA",
            },
            Object {
              "displayName": "ME",
              "fullName": "Maine",
              "id": "ME",
            },
            Object {
              "displayName": "MH",
              "fullName": "Marshall Islands",
              "id": "MH",
            },
            Object {
              "displayName": "MD",
              "fullName": "Maryland",
              "id": "MD",
            },
            Object {
              "displayName": "MA",
              "fullName": "Massachusetts",
              "id": "MA",
            },
            Object {
              "displayName": "MI",
              "fullName": "Michigan",
              "id": "MI",
            },
            Object {
              "displayName": "MN",
              "fullName": "Minnesota",
              "id": "MN",
            },
            Object {
              "displayName": "MS",
              "fullName": "Mississippi",
              "id": "MS",
            },
            Object {
              "displayName": "MO",
              "fullName": "Missouri",
              "id": "MO",
            },
            Object {
              "displayName": "MT",
              "fullName": "Montana",
              "id": "MT",
            },
            Object {
              "displayName": "NE",
              "fullName": "Nebraska",
              "id": "NE",
            },
            Object {
              "displayName": "NV",
              "fullName": "Nevada",
              "id": "NV",
            },
            Object {
              "displayName": "NH",
              "fullName": "New Hampshire",
              "id": "NH",
            },
            Object {
              "displayName": "NJ",
              "fullName": "New Jersey",
              "id": "NJ",
            },
            Object {
              "displayName": "NM",
              "fullName": "New Mexico",
              "id": "NM",
            },
            Object {
              "displayName": "NY",
              "fullName": "New York",
              "id": "NY",
            },
            Object {
              "displayName": "NC",
              "fullName": "North Carolina",
              "id": "NC",
            },
            Object {
              "displayName": "ND",
              "fullName": "North Dakota",
              "id": "ND",
            },
            Object {
              "displayName": "MP",
              "fullName": "Northern Marianas",
              "id": "MP",
            },
            Object {
              "displayName": "OH",
              "fullName": "Ohio",
              "id": "OH",
            },
            Object {
              "displayName": "OK",
              "fullName": "Oklahoma",
              "id": "OK",
            },
            Object {
              "displayName": "OR",
              "fullName": "Oregon",
              "id": "OR",
            },
            Object {
              "displayName": "PW",
              "fullName": "Palau",
              "id": "PW",
            },
            Object {
              "displayName": "PA",
              "fullName": "Pennsylvania",
              "id": "PA",
            },
            Object {
              "displayName": "PR",
              "fullName": "Puerto Rico",
              "id": "PR",
            },
            Object {
              "displayName": "RI",
              "fullName": "Rhode Island",
              "id": "RI",
            },
            Object {
              "displayName": "SC",
              "fullName": "South Carolina",
              "id": "SC",
            },
            Object {
              "displayName": "SD",
              "fullName": "South Dakota",
              "id": "SD",
            },
            Object {
              "displayName": "TN",
              "fullName": "Tennessee",
              "id": "TN",
            },
            Object {
              "displayName": "TX",
              "fullName": "Texas",
              "id": "TX",
            },
            Object {
              "displayName": "UT",
              "fullName": "Utah",
              "id": "UT",
            },
            Object {
              "displayName": "VT",
              "fullName": "Vermont",
              "id": "VT",
            },
            Object {
              "displayName": "VI",
              "fullName": "Virginia",
              "id": "VI",
            },
            Object {
              "displayName": "VA",
              "fullName": "Virgin Islands",
              "id": "VA",
            },
            Object {
              "displayName": "WA",
              "fullName": "Washington",
              "id": "WA",
            },
            Object {
              "displayName": "WV",
              "fullName": "West Virginia",
              "id": "WV",
            },
            Object {
              "displayName": "WI",
              "fullName": "Wisconsin",
              "id": "WI",
            },
            Object {
              "displayName": "WY",
              "fullName": "Wyoming",
              "id": "WY",
            },
          ]
        }
      />
    </Styled(Col)>
    <Styled(Col)
      className=""
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 3,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-zipcode"
        enableSuccessCheck={false}
        id="address.zipCode"
        maxLength={5}
        name="zipCode"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;
  height: 70px;

  .select__input {
    appearance: none;
    background: url(",
                "/static/images/carrot-small-down.png",
                ") no-repeat right 0px bottom 6px;
    border: 0;
    border-bottom: 1px solid ",
                [Function],
                ";
    ",
                [Function],
                ";
    border-radius: 0;
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    margin: 0;
    margin-bottom: ",
                [Function],
                ";
    outline: 0;
    padding: ",
                "26px",
                " 0 ",
                [Function],
                ";
    width: 100%;

    ",
                [Function],
                ";
  }

  .select__label {
    font-size: ",
                [Function],
                "px;
    font-weight: ",
                [Function],
                ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  .SelectBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }

  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-country"
        enableSuccessCheck={false}
        id="address.country"
        name="country"
        onChange={[Function]}
        options={
          Array [
            Object {
              "displayName": "United States",
              "id": "US",
            },
            Object {
              "displayName": "Canada",
              "id": "CA",
            },
          ]
        }
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-phnumber"
        enableSuccessCheck={false}
        id="address.phoneNumber"
        name="phoneNumber"
        type="tel"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    className="elem-mb-XL"
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 4,
        }
      }
      offsetLeft={
        Object {
          "small": 1,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  display: inline-flex;
  align-items: ",
                [Function],
                ";

  & .CheckBox__input {
    flex: 0 0 auto;
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    height: ",
                "25px",
                ";
    width: ",
                "25px",
                ";
    margin: 0;
    margin-right: ",
                [Function],
                ";
  }

  & .CheckBox__input:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:before {
    background: ",
                [Function],
                ";
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:after {
    transform: rotate(225deg);
    content: '';
    border: 2px solid ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    border-right: 0;
    border-bottom: 0;
    left: 10px;
    top: 5px;
    position: absolute;
  }

  & .CheckBox__text {
    width: calc(100% - 25px);
  }

  & .disabled {
    opacity: ",
                [Function],
                ";
  }

  & .Checkbox__error {
    display: flex;
    flex-direction: row;
  }
  & .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 15px;
    width: 15px;
    margin-right: 4px;
    margin-top: 2px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(InputCheckbox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-setdefaddress"
        disabled={false}
        name="primary"
      />
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`AddressFields component should render correctly without phoneNumber and  1`] = `
<div
  className=""
>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-firstname"
        enableSuccessCheck={false}
        id="address.firstName"
        name="firstName"
        type="text"
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-lastname"
        enableSuccessCheck={false}
        id="address.lastName"
        name="lastName"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={[Function]}
        componentRestrictions={
          Object {
            "country": Array [
              undefined,
            ],
          }
        }
        dataLocator="addnewaddress-addressl1"
        enableSuccessCheck={false}
        id="address.addressLine1"
        name="addressLine1"
        onPlaceSelected={[Function]}
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-addressl2"
        enableSuccessCheck={false}
        id="address.addressLine2"
        name="addressLine2"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-city"
        enableSuccessCheck={false}
        id="address.city"
        name="city"
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 3,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;
  height: 70px;

  .select__input {
    appearance: none;
    background: url(",
                "/static/images/carrot-small-down.png",
                ") no-repeat right 0px bottom 6px;
    border: 0;
    border-bottom: 1px solid ",
                [Function],
                ";
    ",
                [Function],
                ";
    border-radius: 0;
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    margin: 0;
    margin-bottom: ",
                [Function],
                ";
    outline: 0;
    padding: ",
                "26px",
                " 0 ",
                [Function],
                ";
    width: 100%;

    ",
                [Function],
                ";
  }

  .select__label {
    font-size: ",
                [Function],
                "px;
    font-weight: ",
                [Function],
                ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  .SelectBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }

  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-state"
        enableSuccessCheck={false}
        id="address.state"
        name="state"
        onChange={[Function]}
        options={
          Array [
            Object {
              "displayName": "AL",
              "fullName": "Alabama",
              "id": "AL",
            },
            Object {
              "displayName": "AK",
              "fullName": "Alaska",
              "id": "AK",
            },
            Object {
              "displayName": "AS",
              "fullName": "American Samoa",
              "id": "AS",
            },
            Object {
              "displayName": "AZ",
              "fullName": "Arizona",
              "id": "AZ",
            },
            Object {
              "displayName": "AR",
              "fullName": "Arkansas",
              "id": "AR",
            },
            Object {
              "displayName": "AA",
              "fullName": "",
              "id": "AA",
            },
            Object {
              "displayName": "AE",
              "fullName": "",
              "id": "AE",
            },
            Object {
              "displayName": "AP",
              "fullName": "",
              "id": "AP",
            },
            Object {
              "displayName": "CA",
              "fullName": "California",
              "id": "CA",
            },
            Object {
              "displayName": "CO",
              "fullName": "Colorado",
              "id": "CO",
            },
            Object {
              "displayName": "CT",
              "fullName": "Connecticut",
              "id": "CT",
            },
            Object {
              "displayName": "DE",
              "fullName": "Delaware",
              "id": "DE",
            },
            Object {
              "displayName": "DC",
              "fullName": "Dist. of Columbia",
              "id": "DC",
            },
            Object {
              "displayName": "FM",
              "fullName": "",
              "id": "FM",
            },
            Object {
              "displayName": "FL",
              "fullName": "Florida",
              "id": "FL",
            },
            Object {
              "displayName": "GA",
              "fullName": "Georgia",
              "id": "GA",
            },
            Object {
              "displayName": "GU",
              "fullName": "Guam",
              "id": "GU",
            },
            Object {
              "displayName": "HI",
              "fullName": "Hawaii",
              "id": "HI",
            },
            Object {
              "displayName": "ID",
              "fullName": "Idaho",
              "id": "ID",
            },
            Object {
              "displayName": "IL",
              "fullName": "Illinois",
              "id": "IL",
            },
            Object {
              "displayName": "IN",
              "fullName": "Indiana",
              "id": "IN",
            },
            Object {
              "displayName": "IA",
              "fullName": "Iowa",
              "id": "IA",
            },
            Object {
              "displayName": "KS",
              "fullName": "Kansas",
              "id": "KS",
            },
            Object {
              "displayName": "KY",
              "fullName": "Kentucky",
              "id": "KY",
            },
            Object {
              "displayName": "LA",
              "fullName": "Louisiana",
              "id": "LA",
            },
            Object {
              "displayName": "ME",
              "fullName": "Maine",
              "id": "ME",
            },
            Object {
              "displayName": "MH",
              "fullName": "Marshall Islands",
              "id": "MH",
            },
            Object {
              "displayName": "MD",
              "fullName": "Maryland",
              "id": "MD",
            },
            Object {
              "displayName": "MA",
              "fullName": "Massachusetts",
              "id": "MA",
            },
            Object {
              "displayName": "MI",
              "fullName": "Michigan",
              "id": "MI",
            },
            Object {
              "displayName": "MN",
              "fullName": "Minnesota",
              "id": "MN",
            },
            Object {
              "displayName": "MS",
              "fullName": "Mississippi",
              "id": "MS",
            },
            Object {
              "displayName": "MO",
              "fullName": "Missouri",
              "id": "MO",
            },
            Object {
              "displayName": "MT",
              "fullName": "Montana",
              "id": "MT",
            },
            Object {
              "displayName": "NE",
              "fullName": "Nebraska",
              "id": "NE",
            },
            Object {
              "displayName": "NV",
              "fullName": "Nevada",
              "id": "NV",
            },
            Object {
              "displayName": "NH",
              "fullName": "New Hampshire",
              "id": "NH",
            },
            Object {
              "displayName": "NJ",
              "fullName": "New Jersey",
              "id": "NJ",
            },
            Object {
              "displayName": "NM",
              "fullName": "New Mexico",
              "id": "NM",
            },
            Object {
              "displayName": "NY",
              "fullName": "New York",
              "id": "NY",
            },
            Object {
              "displayName": "NC",
              "fullName": "North Carolina",
              "id": "NC",
            },
            Object {
              "displayName": "ND",
              "fullName": "North Dakota",
              "id": "ND",
            },
            Object {
              "displayName": "MP",
              "fullName": "Northern Marianas",
              "id": "MP",
            },
            Object {
              "displayName": "OH",
              "fullName": "Ohio",
              "id": "OH",
            },
            Object {
              "displayName": "OK",
              "fullName": "Oklahoma",
              "id": "OK",
            },
            Object {
              "displayName": "OR",
              "fullName": "Oregon",
              "id": "OR",
            },
            Object {
              "displayName": "PW",
              "fullName": "Palau",
              "id": "PW",
            },
            Object {
              "displayName": "PA",
              "fullName": "Pennsylvania",
              "id": "PA",
            },
            Object {
              "displayName": "PR",
              "fullName": "Puerto Rico",
              "id": "PR",
            },
            Object {
              "displayName": "RI",
              "fullName": "Rhode Island",
              "id": "RI",
            },
            Object {
              "displayName": "SC",
              "fullName": "South Carolina",
              "id": "SC",
            },
            Object {
              "displayName": "SD",
              "fullName": "South Dakota",
              "id": "SD",
            },
            Object {
              "displayName": "TN",
              "fullName": "Tennessee",
              "id": "TN",
            },
            Object {
              "displayName": "TX",
              "fullName": "Texas",
              "id": "TX",
            },
            Object {
              "displayName": "UT",
              "fullName": "Utah",
              "id": "UT",
            },
            Object {
              "displayName": "VT",
              "fullName": "Vermont",
              "id": "VT",
            },
            Object {
              "displayName": "VI",
              "fullName": "Virginia",
              "id": "VI",
            },
            Object {
              "displayName": "VA",
              "fullName": "Virgin Islands",
              "id": "VA",
            },
            Object {
              "displayName": "WA",
              "fullName": "Washington",
              "id": "WA",
            },
            Object {
              "displayName": "WV",
              "fullName": "West Virginia",
              "id": "WV",
            },
            Object {
              "displayName": "WI",
              "fullName": "Wisconsin",
              "id": "WI",
            },
            Object {
              "displayName": "WY",
              "fullName": "Wyoming",
              "id": "WY",
            },
          ]
        }
      />
    </Styled(Col)>
    <Styled(Col)
      className=""
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 3,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-zipcode"
        enableSuccessCheck={false}
        id="address.zipCode"
        maxLength={5}
        name="zipCode"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;
  height: 70px;

  .select__input {
    appearance: none;
    background: url(",
                "/static/images/carrot-small-down.png",
                ") no-repeat right 0px bottom 6px;
    border: 0;
    border-bottom: 1px solid ",
                [Function],
                ";
    ",
                [Function],
                ";
    border-radius: 0;
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    margin: 0;
    margin-bottom: ",
                [Function],
                ";
    outline: 0;
    padding: ",
                "26px",
                " 0 ",
                [Function],
                ";
    width: 100%;

    ",
                [Function],
                ";
  }

  .select__label {
    font-size: ",
                [Function],
                "px;
    font-weight: ",
                [Function],
                ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  .SelectBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }

  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-country"
        enableSuccessCheck={false}
        id="address.country"
        name="country"
        onChange={[Function]}
        options={
          Array [
            Object {
              "displayName": "United States",
              "id": "US",
            },
            Object {
              "displayName": "Canada",
              "id": "CA",
            },
          ]
        }
      />
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`AddressFields component should render correctly without phoneNumber and variation secondary and country US 1`] = `
<div
  className=""
>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-firstname"
        enableSuccessCheck={false}
        id="address.firstName"
        name="firstName"
        type="text"
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-lastname"
        enableSuccessCheck={false}
        id="address.lastName"
        name="lastName"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={[Function]}
        componentRestrictions={
          Object {
            "country": Array [
              "US",
            ],
          }
        }
        dataLocator="addnewaddress-addressl1"
        enableSuccessCheck={false}
        id="address.addressLine1"
        name="addressLine1"
        onPlaceSelected={[Function]}
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-addressl2"
        enableSuccessCheck={false}
        id="address.addressLine2"
        name="addressLine2"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-city"
        enableSuccessCheck={false}
        id="address.city"
        name="city"
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 3,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;
  height: 70px;

  .select__input {
    appearance: none;
    background: url(",
                "/static/images/carrot-small-down.png",
                ") no-repeat right 0px bottom 6px;
    border: 0;
    border-bottom: 1px solid ",
                [Function],
                ";
    ",
                [Function],
                ";
    border-radius: 0;
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    margin: 0;
    margin-bottom: ",
                [Function],
                ";
    outline: 0;
    padding: ",
                "26px",
                " 0 ",
                [Function],
                ";
    width: 100%;

    ",
                [Function],
                ";
  }

  .select__label {
    font-size: ",
                [Function],
                "px;
    font-weight: ",
                [Function],
                ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  .SelectBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }

  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-state"
        enableSuccessCheck={false}
        id="address.state"
        name="state"
        onChange={[Function]}
        options={
          Array [
            Object {
              "displayName": "AL",
              "fullName": "Alabama",
              "id": "AL",
            },
            Object {
              "displayName": "AK",
              "fullName": "Alaska",
              "id": "AK",
            },
            Object {
              "displayName": "AS",
              "fullName": "American Samoa",
              "id": "AS",
            },
            Object {
              "displayName": "AZ",
              "fullName": "Arizona",
              "id": "AZ",
            },
            Object {
              "displayName": "AR",
              "fullName": "Arkansas",
              "id": "AR",
            },
            Object {
              "displayName": "AA",
              "fullName": "",
              "id": "AA",
            },
            Object {
              "displayName": "AE",
              "fullName": "",
              "id": "AE",
            },
            Object {
              "displayName": "AP",
              "fullName": "",
              "id": "AP",
            },
            Object {
              "displayName": "CA",
              "fullName": "California",
              "id": "CA",
            },
            Object {
              "displayName": "CO",
              "fullName": "Colorado",
              "id": "CO",
            },
            Object {
              "displayName": "CT",
              "fullName": "Connecticut",
              "id": "CT",
            },
            Object {
              "displayName": "DE",
              "fullName": "Delaware",
              "id": "DE",
            },
            Object {
              "displayName": "DC",
              "fullName": "Dist. of Columbia",
              "id": "DC",
            },
            Object {
              "displayName": "FM",
              "fullName": "",
              "id": "FM",
            },
            Object {
              "displayName": "FL",
              "fullName": "Florida",
              "id": "FL",
            },
            Object {
              "displayName": "GA",
              "fullName": "Georgia",
              "id": "GA",
            },
            Object {
              "displayName": "GU",
              "fullName": "Guam",
              "id": "GU",
            },
            Object {
              "displayName": "HI",
              "fullName": "Hawaii",
              "id": "HI",
            },
            Object {
              "displayName": "ID",
              "fullName": "Idaho",
              "id": "ID",
            },
            Object {
              "displayName": "IL",
              "fullName": "Illinois",
              "id": "IL",
            },
            Object {
              "displayName": "IN",
              "fullName": "Indiana",
              "id": "IN",
            },
            Object {
              "displayName": "IA",
              "fullName": "Iowa",
              "id": "IA",
            },
            Object {
              "displayName": "KS",
              "fullName": "Kansas",
              "id": "KS",
            },
            Object {
              "displayName": "KY",
              "fullName": "Kentucky",
              "id": "KY",
            },
            Object {
              "displayName": "LA",
              "fullName": "Louisiana",
              "id": "LA",
            },
            Object {
              "displayName": "ME",
              "fullName": "Maine",
              "id": "ME",
            },
            Object {
              "displayName": "MH",
              "fullName": "Marshall Islands",
              "id": "MH",
            },
            Object {
              "displayName": "MD",
              "fullName": "Maryland",
              "id": "MD",
            },
            Object {
              "displayName": "MA",
              "fullName": "Massachusetts",
              "id": "MA",
            },
            Object {
              "displayName": "MI",
              "fullName": "Michigan",
              "id": "MI",
            },
            Object {
              "displayName": "MN",
              "fullName": "Minnesota",
              "id": "MN",
            },
            Object {
              "displayName": "MS",
              "fullName": "Mississippi",
              "id": "MS",
            },
            Object {
              "displayName": "MO",
              "fullName": "Missouri",
              "id": "MO",
            },
            Object {
              "displayName": "MT",
              "fullName": "Montana",
              "id": "MT",
            },
            Object {
              "displayName": "NE",
              "fullName": "Nebraska",
              "id": "NE",
            },
            Object {
              "displayName": "NV",
              "fullName": "Nevada",
              "id": "NV",
            },
            Object {
              "displayName": "NH",
              "fullName": "New Hampshire",
              "id": "NH",
            },
            Object {
              "displayName": "NJ",
              "fullName": "New Jersey",
              "id": "NJ",
            },
            Object {
              "displayName": "NM",
              "fullName": "New Mexico",
              "id": "NM",
            },
            Object {
              "displayName": "NY",
              "fullName": "New York",
              "id": "NY",
            },
            Object {
              "displayName": "NC",
              "fullName": "North Carolina",
              "id": "NC",
            },
            Object {
              "displayName": "ND",
              "fullName": "North Dakota",
              "id": "ND",
            },
            Object {
              "displayName": "MP",
              "fullName": "Northern Marianas",
              "id": "MP",
            },
            Object {
              "displayName": "OH",
              "fullName": "Ohio",
              "id": "OH",
            },
            Object {
              "displayName": "OK",
              "fullName": "Oklahoma",
              "id": "OK",
            },
            Object {
              "displayName": "OR",
              "fullName": "Oregon",
              "id": "OR",
            },
            Object {
              "displayName": "PW",
              "fullName": "Palau",
              "id": "PW",
            },
            Object {
              "displayName": "PA",
              "fullName": "Pennsylvania",
              "id": "PA",
            },
            Object {
              "displayName": "PR",
              "fullName": "Puerto Rico",
              "id": "PR",
            },
            Object {
              "displayName": "RI",
              "fullName": "Rhode Island",
              "id": "RI",
            },
            Object {
              "displayName": "SC",
              "fullName": "South Carolina",
              "id": "SC",
            },
            Object {
              "displayName": "SD",
              "fullName": "South Dakota",
              "id": "SD",
            },
            Object {
              "displayName": "TN",
              "fullName": "Tennessee",
              "id": "TN",
            },
            Object {
              "displayName": "TX",
              "fullName": "Texas",
              "id": "TX",
            },
            Object {
              "displayName": "UT",
              "fullName": "Utah",
              "id": "UT",
            },
            Object {
              "displayName": "VT",
              "fullName": "Vermont",
              "id": "VT",
            },
            Object {
              "displayName": "VI",
              "fullName": "Virginia",
              "id": "VI",
            },
            Object {
              "displayName": "VA",
              "fullName": "Virgin Islands",
              "id": "VA",
            },
            Object {
              "displayName": "WA",
              "fullName": "Washington",
              "id": "WA",
            },
            Object {
              "displayName": "WV",
              "fullName": "West Virginia",
              "id": "WV",
            },
            Object {
              "displayName": "WI",
              "fullName": "Wisconsin",
              "id": "WI",
            },
            Object {
              "displayName": "WY",
              "fullName": "Wyoming",
              "id": "WY",
            },
          ]
        }
      />
    </Styled(Col)>
    <Styled(Col)
      className=""
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 3,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-zipcode"
        enableSuccessCheck={false}
        id="address.zipCode"
        maxLength={5}
        name="zipCode"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;
  height: 70px;

  .select__input {
    appearance: none;
    background: url(",
                "/static/images/carrot-small-down.png",
                ") no-repeat right 0px bottom 6px;
    border: 0;
    border-bottom: 1px solid ",
                [Function],
                ";
    ",
                [Function],
                ";
    border-radius: 0;
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    margin: 0;
    margin-bottom: ",
                [Function],
                ";
    outline: 0;
    padding: ",
                "26px",
                " 0 ",
                [Function],
                ";
    width: 100%;

    ",
                [Function],
                ";
  }

  .select__label {
    font-size: ",
                [Function],
                "px;
    font-weight: ",
                [Function],
                ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  .SelectBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }

  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-country"
        enableSuccessCheck={false}
        id="address.country"
        name="country"
        onChange={[Function]}
        options={
          Array [
            Object {
              "displayName": "United States",
              "id": "US",
            },
            Object {
              "displayName": "Canada",
              "id": "CA",
            },
          ]
        }
      />
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`AddressFields component should render correctly without phoneNumber and variation secondary and country ca 1`] = `
<div
  className=""
>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 8,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-firstname"
        enableSuccessCheck={false}
        id="address.firstName"
        name="firstName"
        type="text"
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 8,
          "small": 6,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-lastname"
        enableSuccessCheck={false}
        id="address.lastName"
        name="lastName"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 8,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={[Function]}
        componentRestrictions={
          Object {
            "country": Array [
              "CA",
            ],
          }
        }
        dataLocator="addnewaddress-addressl1"
        enableSuccessCheck={false}
        id="address.addressLine1"
        name="addressLine1"
        onPlaceSelected={[Function]}
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 8,
          "small": 6,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-addressl2"
        enableSuccessCheck={false}
        id="address.addressLine2"
        name="addressLine2"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 3,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-city"
        enableSuccessCheck={false}
        id="address.city"
        name="city"
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 3,
          "medium": 4,
          "small": 3,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;
  height: 70px;

  .select__input {
    appearance: none;
    background: url(",
                "/static/images/carrot-small-down.png",
                ") no-repeat right 0px bottom 6px;
    border: 0;
    border-bottom: 1px solid ",
                [Function],
                ";
    ",
                [Function],
                ";
    border-radius: 0;
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    margin: 0;
    margin-bottom: ",
                [Function],
                ";
    outline: 0;
    padding: ",
                "26px",
                " 0 ",
                [Function],
                ";
    width: 100%;

    ",
                [Function],
                ";
  }

  .select__label {
    font-size: ",
                [Function],
                "px;
    font-weight: ",
                [Function],
                ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  .SelectBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }

  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-state"
        enableSuccessCheck={false}
        id="address.state"
        name="state"
        onChange={[Function]}
        options={
          Array [
            Object {
              "displayName": "BC",
              "fullName": "British Columbia",
              "id": "BC",
            },
            Object {
              "displayName": "ON",
              "fullName": "Ontario",
              "id": "ON",
            },
            Object {
              "displayName": "NL",
              "fullName": "Newfoundland and Labrador",
              "id": "NL",
            },
            Object {
              "displayName": "NS",
              "fullName": "Nova Scotia",
              "id": "NS",
            },
            Object {
              "displayName": "PE",
              "fullName": "Prince Edward Island",
              "id": "PE",
            },
            Object {
              "displayName": "NB",
              "fullName": "New Brunswick",
              "id": "NB",
            },
            Object {
              "displayName": "QC",
              "fullName": "Quebec",
              "id": "QC",
            },
            Object {
              "displayName": "MB",
              "fullName": "Manitoba",
              "id": "MB",
            },
            Object {
              "displayName": "SK",
              "fullName": "Saskatchewan",
              "id": "SK",
            },
            Object {
              "displayName": "AB",
              "fullName": "Alberta",
              "id": "AB",
            },
            Object {
              "displayName": "NT",
              "fullName": "Northwest Territories",
              "id": "NT",
            },
            Object {
              "displayName": "NU",
              "fullName": "Nunavut",
              "id": "NU",
            },
            Object {
              "displayName": "YT",
              "fullName": "Yukon",
              "id": "YT",
            },
          ]
        }
      />
    </Styled(Col)>
    <Styled(Col)
      className="zip-code"
      colSize={
        Object {
          "large": 3,
          "medium": 4,
          "small": 3,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-zipcode"
        enableSuccessCheck={false}
        id="address.zipCode"
        maxLength={6}
        name="zipCode"
      />
    </Styled(Col)>
    <Styled(Col)
      className="country-selector"
      colSize={
        Object {
          "large": 3,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;
  height: 70px;

  .select__input {
    appearance: none;
    background: url(",
                "/static/images/carrot-small-down.png",
                ") no-repeat right 0px bottom 6px;
    border: 0;
    border-bottom: 1px solid ",
                [Function],
                ";
    ",
                [Function],
                ";
    border-radius: 0;
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    margin: 0;
    margin-bottom: ",
                [Function],
                ";
    outline: 0;
    padding: ",
                "26px",
                " 0 ",
                [Function],
                ";
    width: 100%;

    ",
                [Function],
                ";
  }

  .select__label {
    font-size: ",
                [Function],
                "px;
    font-weight: ",
                [Function],
                ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  .SelectBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }

  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-country"
        disabled={true}
        enableSuccessCheck={false}
        id="address.country"
        name="country"
        onChange={[Function]}
        options={
          Array [
            Object {
              "displayName": "United States",
              "id": "US",
            },
            Object {
              "displayName": "Canada",
              "id": "CA",
            },
          ]
        }
      />
      <Styled(Anchor)
        anchorVariation="primary"
        className="change-country-link"
        dataLocator="shipping internationally"
        fontSizeVariation="small"
        href="#"
        noLink={true}
        target="_self"
        underline={true}
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 8,
          "small": 6,
        }
      }
    >
      <Field
        className="address-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="addnewaddress-phnumber"
        enableSuccessCheck={false}
        id="address.phoneNumber"
        name="phoneNumber"
        type="tel"
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 8,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="email-address-field"
        enableSuccessCheck={false}
        id="address.emailAddress"
        name="emailAddress"
        placeholder="Email (For Order Updates)"
      />
    </Styled(Col)>
  </Styled(Row)>
</div>
`;
