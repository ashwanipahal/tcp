// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Address component should renders correctly 1`] = `
<StyledComponent
  address={
    Object {
      "addressLine": Array [
        "addressline 1",
        "addressline 2",
      ],
      "city": "test city",
      "country": "test country",
      "firstName": "test",
      "lastName": "test",
      "phone1": "1234567890",
      "state": "test state",
      "zipCode": "111-111",
    }
  }
  className="sample-class"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htpNat",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  .addressLine {
    @media ",
          [Function],
          " {
      ",
          [Function],
          "
    }
  }
  ",
          [Function],
          ";
",
          ";
",
        ],
      },
      "displayName": "Styled(Address)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htpNat",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;

exports[`Address component should renders correctly when optional fields are not present 1`] = `
<StyledComponent
  address={
    Object {
      "addressLine": Array [
        "addressline 1",
        "addressline 2",
      ],
      "city": "test city",
      "firstName": "test",
      "lastName": "test",
      "state": "test state",
      "zipCode": "111-111",
    }
  }
  className="sample-class"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htpNat",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  .addressLine {
    @media ",
          [Function],
          " {
      ",
          [Function],
          "
    }
  }
  ",
          [Function],
          ";
",
          ";
",
        ],
      },
      "displayName": "Styled(Address)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htpNat",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
/>
`;
