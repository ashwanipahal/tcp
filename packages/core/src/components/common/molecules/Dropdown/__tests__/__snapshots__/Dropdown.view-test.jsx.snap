// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown component should renders correctly 1`] = `
<StyledComponent
  active="Active title"
  activeComponent="activeClassValue"
  className="sample-class"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htpNat",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  .dropdownUlBorder {
    border: 1px solid ",
          [Function],
          ";
    background-color: ",
          [Function],
          ";
  }

  .customSelectTitle {
    border: 1px solid ",
          [Function],
          ";
    background-color: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    padding: ",
          [Function],
          ";
    cursor: pointer;
    position: relative;
  }

  .customSelectTitleImg {
    background: url(",
          "/static/images/carrot-small-down.png",
          ") no-repeat right center;
    position: absolute;
    right: ",
          [Function],
          ";
    height: ",
          [Function],
          ";
    width: 100%;
    top: ",
          [Function],
          ";
  }

  .customSelectTitleUpImg {
    background: url(",
          "/static/images/carrot-small-up.png",
          ") no-repeat right center;
    position: absolute;
    right: ",
          [Function],
          ";
    height: ",
          [Function],
          ";
    width: 100%;
    top: ",
          [Function],
          ";
  }

  .dropDownLists {
    padding: ",
          [Function],
          ";
    cursor: pointer;
  }

  .dropDownSelect {
    position: absolute;
    left: 0;
    width: 99%;
    z-index: 1;
    overflow: auto;
  }

  .dropdownUpperDiv {
    position: relative;
    text-align: center;
  }

  .dropdownActiveClass {
    background-color: ",
          [Function],
          ";
    position: relative;
  }

  li:hover {
    background: ",
          [Function],
          ";
  }
",
          ";
",
        ],
      },
      "displayName": "Styled(Dropdown)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htpNat",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  options={
    Object {
      "content": <div>
        <p>
          Test 1
        </p>
      </div>,
      "title": "Test 1",
      "value": "1",
    }
  }
/>
`;

exports[`Dropdown component should renders correctly when optional fields are not present 1`] = `
<StyledComponent
  className="sample-class"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htpNat",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  .dropdownUlBorder {
    border: 1px solid ",
          [Function],
          ";
    background-color: ",
          [Function],
          ";
  }

  .customSelectTitle {
    border: 1px solid ",
          [Function],
          ";
    background-color: ",
          [Function],
          ";
    margin-top: ",
          [Function],
          ";
    padding: ",
          [Function],
          ";
    cursor: pointer;
    position: relative;
  }

  .customSelectTitleImg {
    background: url(",
          "/static/images/carrot-small-down.png",
          ") no-repeat right center;
    position: absolute;
    right: ",
          [Function],
          ";
    height: ",
          [Function],
          ";
    width: 100%;
    top: ",
          [Function],
          ";
  }

  .customSelectTitleUpImg {
    background: url(",
          "/static/images/carrot-small-up.png",
          ") no-repeat right center;
    position: absolute;
    right: ",
          [Function],
          ";
    height: ",
          [Function],
          ";
    width: 100%;
    top: ",
          [Function],
          ";
  }

  .dropDownLists {
    padding: ",
          [Function],
          ";
    cursor: pointer;
  }

  .dropDownSelect {
    position: absolute;
    left: 0;
    width: 99%;
    z-index: 1;
    overflow: auto;
  }

  .dropdownUpperDiv {
    position: relative;
    text-align: center;
  }

  .dropdownActiveClass {
    background-color: ",
          [Function],
          ";
    position: relative;
  }

  li:hover {
    background: ",
          [Function],
          ";
  }
",
          ";
",
        ],
      },
      "displayName": "Styled(Dropdown)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htpNat",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  options={
    Object {
      "content": <div>
        <p>
          Test 1
        </p>
      </div>,
      "title": "Test 1",
      "value": "1",
    }
  }
/>
`;
