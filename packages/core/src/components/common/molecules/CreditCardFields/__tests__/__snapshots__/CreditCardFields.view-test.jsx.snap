// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreditCardFields component should renders correctly when cardNumberWrapper is true 1`] = `
<Styled(Row)
  className=""
  fullBleed={true}
  syncErrors={null}
>
  <Styled(Col)>
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)>
        <Field
          cardType=""
          cardTypeImgUrl=""
          className="field"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-kgoBCf",
                "isStatic": false,
                "rules": Array [
                  "
  ",
                  "
  position: relative;

  img {
    position: absolute;
    top: 0;
    right: 0;
    width: ",
                  [Function],
                  ";
    border: 1px solid ",
                  [Function],
                  ";
    border-radius: ",
                  [Function],
                  ";
  }
",
                  ";
",
                ],
              },
              "displayName": "Styled(CreditCardNumber)",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-kgoBCf",
              "target": [Function],
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            }
          }
          dataLocator="cardNbrTxtBox"
          enableSuccessCheck={false}
          id="cardNumber"
          isPLCCEnabled={true}
          name="cardNumber"
          normalize={[Function]}
          onFocus={[Function]}
          placeholder=""
          type="tel"
        />
      </Styled(Col)>
    </Styled(Row)>
  </Styled(Col)>
</Styled(Row)>
`;

exports[`CreditCardFields component should renders correctly when isExpirationRequired is false 1`] = `
<Styled(Row)
  className=""
  fullBleed={true}
  syncErrors={null}
>
  <Styled(Col)>
    <Field
      cardType=""
      cardTypeImgUrl=""
      className="field"
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-kgoBCf",
            "isStatic": false,
            "rules": Array [
              "
  ",
              "
  position: relative;

  img {
    position: absolute;
    top: 0;
    right: 0;
    width: ",
              [Function],
              ";
    border: 1px solid ",
              [Function],
              ";
    border-radius: ",
              [Function],
              ";
  }
",
              ";
",
            ],
          },
          "displayName": "Styled(CreditCardNumber)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-kgoBCf",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      dataLocator="cardNbrTxtBox"
      enableSuccessCheck={false}
      id="cardNumber"
      isPLCCEnabled={true}
      name="cardNumber"
      normalize={[Function]}
      onFocus={[Function]}
      placeholder=""
      type="tel"
    />
  </Styled(Col)>
</Styled(Row)>
`;

exports[`CreditCardFields component should renders correctly when isExpirationRequired is true 1`] = `
<Styled(Row)
  className=""
  fullBleed={true}
  syncErrors={null}
>
  <Styled(Col)
    colSize={
      Object {
        "large": 6,
        "medium": 8,
        "small": 6,
      }
    }
  >
    <Field
      cardType=""
      cardTypeImgUrl=""
      className="field"
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-kgoBCf",
            "isStatic": false,
            "rules": Array [
              "
  ",
              "
  position: relative;

  img {
    position: absolute;
    top: 0;
    right: 0;
    width: ",
              [Function],
              ";
    border: 1px solid ",
              [Function],
              ";
    border-radius: ",
              [Function],
              ";
  }
",
              ";
",
            ],
          },
          "displayName": "Styled(CreditCardNumber)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-kgoBCf",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      dataLocator="cardNbrTxtBox"
      enableSuccessCheck={false}
      id="cardNumber"
      isPLCCEnabled={true}
      name="cardNumber"
      normalize={[Function]}
      onFocus={[Function]}
      placeholder=""
      type="tel"
    />
  </Styled(Col)>
  <Styled(Col)
    colSize={
      Object {
        "large": 2,
        "medium": 3,
        "small": 2,
      }
    }
  >
    <Field
      className="field"
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-gqjmRU",
            "isStatic": false,
            "rules": Array [
              "
  ",
              "
  position: relative;
  display: block;
  height: 70px;

  .select__input {
    appearance: none;
    background: url(",
              "/static/images/carrot-small-down.png",
              ") no-repeat right 0px bottom
      ",
              [Function],
              ";
    border: 0;
    border-bottom: 1px solid ",
              [Function],
              ";
    ",
              [Function],
              ";
    border-radius: 0;
    color: ",
              [Function],
              ";
    margin: 0;
    margin-bottom: ",
              [Function],
              ";
    outline: 0;
    padding: ",
              "26px",
              " 0 ",
              [Function],
              ";
    width: 100%;

    ",
              [Function],
              ";

    ",
              [Function],
              ";
  }

  .select__label {
    font-size: ",
              [Function],
              "px;
    font-weight: ",
              [Function],
              ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  .SelectBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
              [Function],
              ";
  }

  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }

  ",
              [Function],
              ";
",
              ";
",
            ],
          },
          "displayName": "Styled(SelectBox)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-gqjmRU",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      dataLocator="expMonthDropDown"
      enableSuccessCheck={false}
      id="expMonth"
      name="expMonth"
      options={
        Array [
          Object {
            "displayName": "Jan",
            "id": "1",
          },
          Object {
            "displayName": "Feb",
            "id": "2",
          },
          Object {
            "displayName": "Mar",
            "id": "3",
          },
          Object {
            "displayName": "Apr",
            "id": "4",
          },
          Object {
            "displayName": "May",
            "id": "5",
          },
          Object {
            "displayName": "Jun",
            "id": "6",
          },
          Object {
            "displayName": "Jul",
            "id": "7",
          },
          Object {
            "displayName": "Aug",
            "id": "8",
          },
          Object {
            "displayName": "Sep",
            "id": "9",
          },
          Object {
            "displayName": "Oct",
            "id": "10",
          },
          Object {
            "displayName": "Nov",
            "id": "11",
          },
          Object {
            "displayName": "Dec",
            "id": "12",
          },
        ]
      }
      placeholder=""
      title=""
    />
  </Styled(Col)>
  <Styled(Col)
    className="exp-year-field"
    colSize={
      Object {
        "large": 2,
        "medium": 3,
        "small": 2,
      }
    }
  >
    <Field
      className="field"
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-gqjmRU",
            "isStatic": false,
            "rules": Array [
              "
  ",
              "
  position: relative;
  display: block;
  height: 70px;

  .select__input {
    appearance: none;
    background: url(",
              "/static/images/carrot-small-down.png",
              ") no-repeat right 0px bottom
      ",
              [Function],
              ";
    border: 0;
    border-bottom: 1px solid ",
              [Function],
              ";
    ",
              [Function],
              ";
    border-radius: 0;
    color: ",
              [Function],
              ";
    margin: 0;
    margin-bottom: ",
              [Function],
              ";
    outline: 0;
    padding: ",
              "26px",
              " 0 ",
              [Function],
              ";
    width: 100%;

    ",
              [Function],
              ";

    ",
              [Function],
              ";
  }

  .select__label {
    font-size: ",
              [Function],
              "px;
    font-weight: ",
              [Function],
              ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  .SelectBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
              [Function],
              ";
  }

  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }

  ",
              [Function],
              ";
",
              ";
",
            ],
          },
          "displayName": "Styled(SelectBox)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-gqjmRU",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      dataLocator="expYearDropDown"
      enableSuccessCheck={false}
      id="expYear"
      name="expYear"
      options={
        Array [
          Object {
            "displayName": "2019",
            "id": "2019",
          },
          Object {
            "displayName": "2020",
            "id": "2020",
          },
          Object {
            "displayName": "2021",
            "id": "2021",
          },
          Object {
            "displayName": "2022",
            "id": "2022",
          },
          Object {
            "displayName": "2023",
            "id": "2023",
          },
          Object {
            "displayName": "2024",
            "id": "2024",
          },
          Object {
            "displayName": "2025",
            "id": "2025",
          },
          Object {
            "displayName": "2026",
            "id": "2026",
          },
          Object {
            "displayName": "2027",
            "id": "2027",
          },
          Object {
            "displayName": "2028",
            "id": "2028",
          },
          Object {
            "displayName": "2029",
            "id": "2029",
          },
        ]
      }
      placeholder=""
      title=""
    />
  </Styled(Col)>
  <Styled(Col)
    className="cvv-field"
    colSize={
      Object {
        "large": 2,
        "medium": 2,
        "small": 2,
      }
    }
  >
    <Field
      autoComplete="off"
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iwsKbI",
            "isStatic": false,
            "rules": Array [
              "
  ",
              "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
              [Function],
              "px;
    padding: 0;
    position: absolute;
    top: ",
              [Function],
              ";
    ",
              [Function],
              "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
              [Function],
              "px;
    color: ",
              [Function],
              ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";

    ",
              [Function],
              "

    ",
              [Function],
              ";

    &:focus + .TextBox__label {
      font-size: ",
              [Function],
              "px;
      font-weight: ",
              [Function],
              ";
      top: ",
              [Function],
              ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
              [Function],
              ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
              [Function],
              ";
    width: 15px;
    height: 8px;
    margin-left: ",
              [Function],
              ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
              [Function],
              ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
              [Function],
              ";
      bottom: 0;
    }
  }

  ",
              [Function],
              ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
              [Function],
              ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
              ";
",
            ],
          },
          "displayName": "Styled(TextBox)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iwsKbI",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      dataLocator="cvvTxtBox"
      enableSuccessCheck={false}
      id="cvvCode"
      maxLength="4"
      name="cvvCode"
      placeholder=""
      type="tel"
    />
    <Field
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-iwsKbI",
            "isStatic": false,
            "rules": Array [
              "
  ",
              "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
              [Function],
              "px;
    padding: 0;
    position: absolute;
    top: ",
              [Function],
              ";
    ",
              [Function],
              "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
              [Function],
              "px;
    color: ",
              [Function],
              ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
              [Function],
              ";
    padding-bottom: ",
              [Function],
              ";
    margin-bottom: ",
              [Function],
              ";
    padding-top: ",
              [Function],
              ";

    ",
              [Function],
              "

    ",
              [Function],
              ";

    &:focus + .TextBox__label {
      font-size: ",
              [Function],
              "px;
      font-weight: ",
              [Function],
              ";
      top: ",
              [Function],
              ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
              [Function],
              ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
              [Function],
              ";
    width: 15px;
    height: 8px;
    margin-left: ",
              [Function],
              ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
              [Function],
              ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
              [Function],
              ";
      bottom: 0;
    }
  }

  ",
              [Function],
              ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
              [Function],
              ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
              ";
",
            ],
          },
          "displayName": "Styled(TextBox)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-iwsKbI",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      id="cardType"
      name="cardType"
      type="hidden"
    />
    <span
      className="cvv-icon"
    />
  </Styled(Col)>
</Styled(Row)>
`;
