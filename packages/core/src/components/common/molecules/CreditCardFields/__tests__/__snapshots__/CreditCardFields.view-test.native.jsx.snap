// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreditCardFields native Component CreditCardFields to render correctly  1`] = `
<Styled(View)>
  <Styled(View)>
    <Field
      cameraIcon={false}
      cardType=""
      cardTypeImgUrl=""
      component={[Function]}
      customStyle={
        Object {
          "height": 72,
        }
      }
      dataLocator="cardNbrTxtBox"
      enableSuccessCheck={false}
      id="cardNumber"
      isPLCCEnabled={true}
      keyboardType="numeric"
      label=""
      name="cardNumber"
      onCardFocus={[Function]}
      val=""
    />
  </Styled(View)>
  <Styled(View)
    showCvv={true}
  >
    <Styled(View)>
      <Field
        component={[Function]}
        dataLocator="expMonthDropDown"
        heading=""
        name="expMonth"
        onValueChange={[Function]}
        placeholder=""
      />
    </Styled(View)>
    <Styled(View)>
      <Field
        component={[Function]}
        heading=""
        name="expYear"
        onValueChange={[Function]}
        placeholder=""
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(Text) />
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "ariaLabel": "input",
              "autoCapitalize": "sentences",
              "dataLocator": "input-field",
              "enableSuccessCheck": false,
              "id": "input",
              "keyboardType": "default",
              "label": "input",
              "marginBottom": true,
              "meta": Object {
                "error": "",
                "touched": "",
              },
              "onChangeText": [Function],
              "secureTextEntry": false,
              "showErrorIcon": true,
              "showSuccessCheck": false,
              "successText": "",
              "type": "text",
            },
            "attrs": Array [],
            "displayName": "Styled(TextBox)",
            "inlineStyle": InlineStyle {
              "rules": Array [
                "
    ",
                "
  ",
                [Function],
                ";
",
                ";
  ",
              ],
            },
            "render": [Function],
            "styledComponentId": "StyledNativeComponent",
            "target": [Function],
            "withComponent": [Function],
          }
        }
        customStyle={
          Object {
            "height": 72,
          }
        }
        dataLocator="cvvTxtBox"
        id="cvvCode"
        keyboardType="numeric"
        label=""
        name="cvvCode"
        type="text"
      />
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "ariaLabel": "input",
              "autoCapitalize": "sentences",
              "dataLocator": "input-field",
              "enableSuccessCheck": false,
              "id": "input",
              "keyboardType": "default",
              "label": "input",
              "marginBottom": true,
              "meta": Object {
                "error": "",
                "touched": "",
              },
              "onChangeText": [Function],
              "secureTextEntry": false,
              "showErrorIcon": true,
              "showSuccessCheck": false,
              "successText": "",
              "type": "text",
            },
            "attrs": Array [],
            "displayName": "Styled(TextBox)",
            "inlineStyle": InlineStyle {
              "rules": Array [
                "
    ",
                "
  ",
                [Function],
                ";
",
                ";
  ",
              ],
            },
            "render": [Function],
            "styledComponentId": "StyledNativeComponent",
            "target": [Function],
            "withComponent": [Function],
          }
        }
        id="cardType"
        name="cardType"
        type="hidden"
      />
      <Styled(View) />
    </Styled(View)>
  </Styled(View)>
</Styled(View)>
`;

exports[`CreditCardFields native Component CreditCardFields to render correctly  2`] = `
<Styled(View)>
  <Styled(View)>
    <Field
      cameraIcon={true}
      cardType={null}
      cardTypeImgUrl=""
      component={[Function]}
      customStyle={
        Object {
          "height": 72,
        }
      }
      dataLocator="cardNbrTxtBox"
      enableSuccessCheck={false}
      id="cardNumber"
      isEdit={true}
      isPLCCEnabled={true}
      keyboardType="numeric"
      label=""
      name="cardNumber"
      onCardFocus={[Function]}
      val=""
    />
    <Styled(TouchableOpacity)
      onPress={[Function]}
    >
      <Styled(CustomIcon)
        accessibilityLabel=""
        color="gray.900"
        dataLocator="pdp_fast_shipping_icon"
        iconFontName="FontAwesome"
        isButton={false}
        isDisabled={false}
        margins={null}
        name="camera"
        onPress={[Function]}
        size="fs25"
      />
    </Styled(TouchableOpacity)>
  </Styled(View)>
  <Styled(View)
    showCvv={true}
  >
    <Styled(View)>
      <Field
        component={[Function]}
        dataLocator="expMonthDropDown"
        heading=""
        name="expMonth"
        onValueChange={[Function]}
        placeholder=""
      />
    </Styled(View)>
    <Styled(View)>
      <Field
        component={[Function]}
        heading=""
        name="expYear"
        onValueChange={[Function]}
        placeholder=""
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(Text) />
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "ariaLabel": "input",
              "autoCapitalize": "sentences",
              "dataLocator": "input-field",
              "enableSuccessCheck": false,
              "id": "input",
              "keyboardType": "default",
              "label": "input",
              "marginBottom": true,
              "meta": Object {
                "error": "",
                "touched": "",
              },
              "onChangeText": [Function],
              "secureTextEntry": false,
              "showErrorIcon": true,
              "showSuccessCheck": false,
              "successText": "",
              "type": "text",
            },
            "attrs": Array [],
            "displayName": "Styled(TextBox)",
            "inlineStyle": InlineStyle {
              "rules": Array [
                "
    ",
                "
  ",
                [Function],
                ";
",
                ";
  ",
              ],
            },
            "render": [Function],
            "styledComponentId": "StyledNativeComponent",
            "target": [Function],
            "withComponent": [Function],
          }
        }
        customStyle={
          Object {
            "height": 72,
          }
        }
        dataLocator="cvvTxtBox"
        id="cvvCode"
        keyboardType="numeric"
        label=""
        name="cvvCode"
        type="text"
      />
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "ariaLabel": "input",
              "autoCapitalize": "sentences",
              "dataLocator": "input-field",
              "enableSuccessCheck": false,
              "id": "input",
              "keyboardType": "default",
              "label": "input",
              "marginBottom": true,
              "meta": Object {
                "error": "",
                "touched": "",
              },
              "onChangeText": [Function],
              "secureTextEntry": false,
              "showErrorIcon": true,
              "showSuccessCheck": false,
              "successText": "",
              "type": "text",
            },
            "attrs": Array [],
            "displayName": "Styled(TextBox)",
            "inlineStyle": InlineStyle {
              "rules": Array [
                "
    ",
                "
  ",
                [Function],
                ";
",
                ";
  ",
              ],
            },
            "render": [Function],
            "styledComponentId": "StyledNativeComponent",
            "target": [Function],
            "withComponent": [Function],
          }
        }
        id="cardType"
        name="cardType"
        type="hidden"
      />
      <Styled(View) />
    </Styled(View)>
  </Styled(View)>
</Styled(View)>
`;
