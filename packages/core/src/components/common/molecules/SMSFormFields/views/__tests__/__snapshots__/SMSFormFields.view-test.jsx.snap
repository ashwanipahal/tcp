// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SMSFormFields should render correctly with isOrderUpdateChecked as false 1`] = `
<div
  className=""
>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 5,
          "medium": 8,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  display: inline-flex;
  align-items: ",
                [Function],
                ";

  & .CheckBox__input {
    flex: 0 0 auto;
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    height: ",
                "25px",
                ";
    width: ",
                "25px",
                ";
    margin: 0;
    margin-right: ",
                [Function],
                ";
  }

  & .CheckBox__input:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:before {
    background: ",
                [Function],
                ";
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:after {
    transform: rotate(225deg);
    content: '';
    border: 2px solid ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    border-right: 0;
    border-bottom: 0;
    left: 10px;
    top: 5px;
    position: absolute;
  }

  & .CheckBox__text {
    width: calc(100% - 25px);
  }

  & .disabled {
    opacity: ",
                [Function],
                ";
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(InputCheckbox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="hide-show-checkbox"
        enableSuccessCheck={false}
        name="sendOrderUpdate"
        onChange={[Function]}
      >
        <Styled(BodyCopy)
          className={null}
          color="text.primary"
          component="p"
          fontFamily="secondary"
          fontSize={
            Array [
              "fs14",
              "fs16",
              "fs16",
            ]
          }
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={Object {}}
          textAlign="left"
        />
      </Field>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`SMSFormFields should render correctly with isOrderUpdateChecked as true 1`] = `
<div
  className=""
>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 5,
          "medium": 8,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  display: inline-flex;
  align-items: ",
                [Function],
                ";

  & .CheckBox__input {
    flex: 0 0 auto;
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    height: ",
                "25px",
                ";
    width: ",
                "25px",
                ";
    margin: 0;
    margin-right: ",
                [Function],
                ";
  }

  & .CheckBox__input:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:before {
    background: ",
                [Function],
                ";
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:after {
    transform: rotate(225deg);
    content: '';
    border: 2px solid ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    border-right: 0;
    border-bottom: 0;
    left: 10px;
    top: 5px;
    position: absolute;
  }

  & .CheckBox__text {
    width: calc(100% - 25px);
  }

  & .disabled {
    opacity: ",
                [Function],
                ";
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(InputCheckbox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="hide-show-checkbox"
        enableSuccessCheck={false}
        name="sendOrderUpdate"
        onChange={[Function]}
      >
        <Styled(BodyCopy)
          className={null}
          color="text.primary"
          component="p"
          fontFamily="secondary"
          fontSize={
            Array [
              "fs14",
              "fs16",
              "fs16",
            ]
          }
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={Object {}}
          textAlign="left"
        />
      </Field>
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)>
    <Styled(Col)
      className="phone-field-wrapper"
      colSize={
        Object {
          "large": 5,
          "medium": 8,
          "small": 5,
        }
      }
    >
      <span
        className="phone-prefix"
      >
         +1 
      </span>
      <Field
        className="phone-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="phone-number-field"
        enableSuccessCheck={false}
        id=".phoneNumber"
        maxLength={50}
        name="phoneNumber"
        type="tel"
      />
    </Styled(Col)>
    <Styled(Row)>
      <Styled(Col)
        colSize={
          Object {
            "large": 5,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Styled(BodyCopy)
          className={null}
          color="text.primary"
          component="p"
          fontFamily="primary"
          fontSize="fs10"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={Object {}}
          textAlign="left"
        />
        <Styled(Anchor)
          anchorVariation="primary"
          fontSizeVariation="small"
          href="#"
          noLink={true}
          noUnderline={true}
          target="_blank"
        />
      </Styled(Col)>
    </Styled(Row)>
  </Styled(Row)>
</div>
`;

exports[`SMSFormFields should render correctly with isOrderUpdateChecked as true aand dispatch is passed 1`] = `
<div
  className=""
>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 5,
          "medium": 8,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  display: inline-flex;
  align-items: ",
                [Function],
                ";

  & .CheckBox__input {
    flex: 0 0 auto;
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    height: ",
                "25px",
                ";
    width: ",
                "25px",
                ";
    margin: 0;
    margin-right: ",
                [Function],
                ";
  }

  & .CheckBox__input:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:before {
    background: ",
                [Function],
                ";
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:after {
    transform: rotate(225deg);
    content: '';
    border: 2px solid ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    border-right: 0;
    border-bottom: 0;
    left: 10px;
    top: 5px;
    position: absolute;
  }

  & .CheckBox__text {
    width: calc(100% - 25px);
  }

  & .disabled {
    opacity: ",
                [Function],
                ";
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(InputCheckbox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="hide-show-checkbox"
        enableSuccessCheck={false}
        name="sendOrderUpdate"
        onChange={[Function]}
      >
        <Styled(BodyCopy)
          className={null}
          color="text.primary"
          component="p"
          fontFamily="secondary"
          fontSize={
            Array [
              "fs14",
              "fs16",
              "fs16",
            ]
          }
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={Object {}}
          textAlign="left"
        />
      </Field>
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)>
    <Styled(Col)
      className="phone-field-wrapper"
      colSize={
        Object {
          "large": 5,
          "medium": 8,
          "small": 5,
        }
      }
    >
      <span
        className="phone-prefix"
      >
         +1 
      </span>
      <Field
        className="phone-field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="phone-number-field"
        enableSuccessCheck={false}
        id=".phoneNumber"
        maxLength={50}
        name="phoneNumber"
        type="tel"
      />
    </Styled(Col)>
    <Styled(Row)>
      <Styled(Col)
        colSize={
          Object {
            "large": 5,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Styled(BodyCopy)
          className={null}
          color="text.primary"
          component="p"
          fontFamily="primary"
          fontSize="fs10"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={Object {}}
          textAlign="left"
        />
        <Styled(Anchor)
          anchorVariation="primary"
          fontSizeVariation="small"
          href="#"
          noLink={true}
          noUnderline={true}
          target="_blank"
        />
      </Styled(Col)>
    </Styled(Row)>
  </Styled(Row)>
</div>
`;
