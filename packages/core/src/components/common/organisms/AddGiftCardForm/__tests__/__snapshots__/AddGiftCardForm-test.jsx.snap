// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Add gift card form component should render component correctly 1`] = `
<form>
  <Styled(Row)
    className="elem-mb-MED"
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 4,
          "medium": 4,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        className="giftCardNumber"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="gift-card-cardnumberfield"
        id="giftCardNumber"
        maxLength={50}
        name="giftCardNumber"
        onChange={[Function]}
        placeholder="lbl_payment_giftCardNoPlaceholder"
        type="tel"
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="gift-card-pinnumberfield"
        id="cardPin"
        name="cardPin"
        onChange={[Function]}
        placeholder="lbl_payment_giftCardPinPlaceholder"
        type="tel"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    className="card__row"
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 7,
          "medium": 8,
          "small": 6,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
    >
      <div
        className="card__msgWrapper"
      >
        <Styled(BodyCopy)
          className="card__msg--bold elem-mb-XS"
          color="text.primary"
          component="p"
          dataLocator="git-card-headertext"
          fontFamily="primary"
          fontSize={12}
          fontWeight="bold"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          tag="p"
          textAlign="left"
        >
          lbl_payment_giftCardMessageHeading
        </Styled(BodyCopy)>
        <Styled(BodyCopy)
          className="card__msg"
          color="text.primary"
          component="p"
          dataLocator="git-card-messagetext"
          fontFamily="primary"
          fontSize={12}
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          tag="p"
          textAlign="left"
        >
          lbl_payment_giftCardMessageDescription
        </Styled(BodyCopy)>
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="card__btn"
      colSize={
        Object {
          "large": 2,
          "medium": 3,
          "small": 4,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
      offsetLeft={
        Object {
          "large": 1,
          "medium": 1,
          "small": 1,
        }
      }
      offsetRight={
        Object {
          "large": 0,
          "medium": 1,
          "small": 1,
        }
      }
    >
      <Styled(Button)
        buttonVariation="fixed-width"
        data-locator="gift-card-cancelbtn"
        onClick={[Function]}
        type="button"
      >
        lbl_payment_cancelCard
      </Styled(Button)>
    </Styled(Col)>
    <Styled(Col)
      className="card__btn--medium"
      colSize={
        Object {
          "large": 2,
          "medium": 3,
          "small": 4,
        }
      }
      ignoreGutter={
        Object {
          "small": true,
        }
      }
      offsetLeft={
        Object {
          "large": 0,
          "medium": 0,
          "small": 1,
        }
      }
      offsetRight={
        Object {
          "large": 0,
          "medium": 0,
          "small": 1,
        }
      }
    >
      <Styled(Button)
        buttonVariation="fixed-width"
        data-locator="gift-card-addcardbtn"
        fill="BLUE"
        type="submit"
      >
        lbl_payment_addCard
      </Styled(Button)>
    </Styled(Col)>
  </Styled(Row)>
</form>
`;
