// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BonusPointsAvailabilityVanilla should render correctly available_today 1`] = `
<div
  className=""
>
  <Styled(Col)
    className="hide-in-large-up"
    colSize={
      Object {
        "large": 12,
        "medium": 8,
        "small": 6,
      }
    }
    ignoreGutter={
      Object {
        "medium": true,
        "small": true,
      }
    }
  >
    <Styled(CollapsibleContainer)
      body={
        <React.Fragment>
          <React.Fragment>
            <ForwardRef
              className="apply-any-day-msg"
              color="text.primary"
              component="p"
              data-locator="msgtextinbold"
              fontFamily="secondary"
              fontSize={
                Array [
                  "fs14",
                  "fs10",
                  "fs16",
                ]
              }
              fontWeight="extrabold"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="center"
            >
              lbl_bonusPoints_applyAnyDay
            </ForwardRef>
            <ForwardRef
              className="availability-msg"
              color="text.primary"
              component="p"
              data-locator="infomsg"
              fontFamily="secondary"
              fontSize={
                Array [
                  "fs12",
                  "fs12",
                  "fs16",
                ]
              }
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="center"
            >
              lbl_bonusPoints_msg
            </ForwardRef>
          </React.Fragment>
          <ForwardRef
            fullBleed={true}
          >
            <ForwardRef
              colSize={
                Object {
                  "large": 12,
                  "medium": 8,
                  "small": 6,
                }
              }
            >
              <ForwardRef
                bonusDayAvailableToday={0}
                bonusPoints={
                  Array [
                    Object {
                      "buttonText": "lbl_bonusPoints_ctaApply",
                      "dataLocator": "availabletodaybtn",
                      "disabled": false,
                    },
                  ]
                }
                className="availability-msg"
                enableApplyCta={false}
                getBonusDaysData={[Function]}
                labels={
                  Object {
                    "placeRewards": Object {
                      "lbl_bonus_points_apply_any_day": "",
                      "lbl_bonus_points_msg": "",
                      "lbl_common_applied_to_order": "",
                      "lbl_common_details": "",
                      "lbl_place_rewards_bonus": "",
                      "lbl_place_rewards_day": "",
                      "lbl_place_rewards_points": "",
                    },
                  }
                }
                orderDetails={Object {}}
              />
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            anchorVariation="primary"
            className="details-link"
            dataLocator="detailslink"
            fontSizeVariation="medium"
            href="#"
            onClick={[Function]}
            underline={true}
          >
            lbl_bonusPoints_details
          </ForwardRef>
        </React.Fragment>
      }
      className=""
      defaultOpen={true}
      header={
        <div
          className="elem-mb-SM"
          data-locator="bonuspointsdayhdr"
        >
          <ForwardRef
            className="elem-mr-XS"
            color="orange.800"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsBonus
          </ForwardRef>
          <ForwardRef
            className="elem-mr-XS"
            color="primary.main"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsPoints
          </ForwardRef>
          <ForwardRef
            className={null}
            color="pink.500"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsDay
          </ForwardRef>
        </div>
      }
      iconLocator="arrowicon"
    />
  </Styled(Col)>
  <div
    className="hide-in-medium-down"
  >
    <div
      className="elem-mb-SM"
      data-locator="bonuspointsdayhdr"
    >
      <Styled(BodyCopy)
        className="elem-mr-XS"
        color="orange.800"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsBonus
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className="elem-mr-XS"
        color="primary.main"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsPoints
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className={null}
        color="pink.500"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsDay
      </Styled(BodyCopy)>
    </div>
    <Styled(BodyCopy)
      className="apply-any-day-msg"
      color="text.primary"
      component="p"
      data-locator="msgtextinbold"
      fontFamily="secondary"
      fontSize={
        Array [
          "fs14",
          "fs10",
          "fs16",
        ]
      }
      fontWeight="extrabold"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      lbl_bonusPoints_applyAnyDay
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="availability-msg"
      color="text.primary"
      component="p"
      data-locator="infomsg"
      fontFamily="secondary"
      fontSize={
        Array [
          "fs12",
          "fs12",
          "fs16",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      lbl_bonusPoints_msg
    </Styled(BodyCopy)>
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 12,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Styled(BonusPointsAvailability)
          bonusDayAvailableToday={0}
          bonusPoints={
            Array [
              Object {
                "buttonText": "lbl_bonusPoints_ctaApply",
                "dataLocator": "availabletodaybtn",
                "disabled": false,
              },
            ]
          }
          className="availability-msg"
          enableApplyCta={false}
          getBonusDaysData={[Function]}
          labels={
            Object {
              "placeRewards": Object {
                "lbl_bonus_points_apply_any_day": "",
                "lbl_bonus_points_msg": "",
                "lbl_common_applied_to_order": "",
                "lbl_common_details": "",
                "lbl_place_rewards_bonus": "",
                "lbl_place_rewards_day": "",
                "lbl_place_rewards_points": "",
              },
            }
          }
          orderDetails={Object {}}
        />
      </Styled(Col)>
    </Styled(Row)>
    <Styled(Anchor)
      anchorVariation="primary"
      className="details-link"
      dataLocator="detailslink"
      fontSizeVariation="medium"
      href="#"
      onClick={[Function]}
      underline={true}
    >
      lbl_bonusPoints_details
    </Styled(Anchor)>
  </div>
</div>
`;

exports[`BonusPointsAvailabilityVanilla should render correctly with applied to bag bonus point days 1`] = `
<div
  className=""
>
  <Styled(Col)
    className="hide-in-large-up"
    colSize={
      Object {
        "large": 12,
        "medium": 8,
        "small": 6,
      }
    }
    ignoreGutter={
      Object {
        "medium": true,
        "small": true,
      }
    }
  >
    <Styled(CollapsibleContainer)
      body={
        <React.Fragment>
          <React.Fragment>
            <ForwardRef
              className="apply-any-day-msg"
              color="text.primary"
              component="p"
              data-locator="msgtextinbold"
              fontFamily="secondary"
              fontSize={
                Array [
                  "fs14",
                  "fs10",
                  "fs16",
                ]
              }
              fontWeight="extrabold"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="center"
            >
              lbl_bonusPoints_applyAnyDay
            </ForwardRef>
            <ForwardRef
              className="availability-msg"
              color="text.primary"
              component="p"
              data-locator="infomsg"
              fontFamily="secondary"
              fontSize={
                Array [
                  "fs12",
                  "fs12",
                  "fs16",
                ]
              }
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="center"
            >
              lbl_bonusPoints_msg
            </ForwardRef>
          </React.Fragment>
          <ForwardRef
            fullBleed={true}
          >
            <ForwardRef
              colSize={
                Object {
                  "large": 12,
                  "medium": 8,
                  "small": 6,
                }
              }
            >
              <ForwardRef
                bonusDayAvailableToday={1}
                bonusPoints={
                  Array [
                    Object {
                      "buttonText": "lbl_bonusPoints_usedOn ",
                      "dataLocator": "usedonbtn",
                      "disabled": true,
                    },
                    Object {
                      "buttonText": "lbl_bonusPoints_ctaApplied",
                      "dataLocator": "appliedtoorderbtn",
                      "disabled": false,
                    },
                    Object {
                      "buttonText": "lbl_bonusPoints_futureUse",
                      "dataLocator": "availableforfutureusebtn",
                      "disabled": true,
                    },
                  ]
                }
                className="availability-msg"
                enableApplyCta={false}
                getBonusDaysData={[Function]}
                labels={
                  Object {
                    "placeRewards": Object {
                      "lbl_bonus_points_apply_any_day": "",
                      "lbl_bonus_points_msg": "",
                      "lbl_common_applied_to_order": "",
                      "lbl_common_details": "",
                      "lbl_place_rewards_bonus": "",
                      "lbl_place_rewards_day": "",
                      "lbl_place_rewards_points": "",
                    },
                  }
                }
                orderDetails={Object {}}
              />
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            anchorVariation="primary"
            className="details-link"
            dataLocator="detailslink"
            fontSizeVariation="medium"
            href="#"
            onClick={[Function]}
            underline={true}
          >
            lbl_bonusPoints_details
          </ForwardRef>
        </React.Fragment>
      }
      className=""
      defaultOpen={true}
      header={
        <div
          className="elem-mb-SM"
          data-locator="bonuspointsdayhdr"
        >
          <ForwardRef
            className="elem-mr-XS"
            color="orange.800"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsBonus
          </ForwardRef>
          <ForwardRef
            className="elem-mr-XS"
            color="primary.main"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsPoints
          </ForwardRef>
          <ForwardRef
            className={null}
            color="pink.500"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsDay
          </ForwardRef>
        </div>
      }
      iconLocator="arrowicon"
    />
  </Styled(Col)>
  <div
    className="hide-in-medium-down"
  >
    <div
      className="elem-mb-SM"
      data-locator="bonuspointsdayhdr"
    >
      <Styled(BodyCopy)
        className="elem-mr-XS"
        color="orange.800"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsBonus
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className="elem-mr-XS"
        color="primary.main"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsPoints
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className={null}
        color="pink.500"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsDay
      </Styled(BodyCopy)>
    </div>
    <Styled(BodyCopy)
      className="apply-any-day-msg"
      color="text.primary"
      component="p"
      data-locator="msgtextinbold"
      fontFamily="secondary"
      fontSize={
        Array [
          "fs14",
          "fs10",
          "fs16",
        ]
      }
      fontWeight="extrabold"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      lbl_bonusPoints_applyAnyDay
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="availability-msg"
      color="text.primary"
      component="p"
      data-locator="infomsg"
      fontFamily="secondary"
      fontSize={
        Array [
          "fs12",
          "fs12",
          "fs16",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      lbl_bonusPoints_msg
    </Styled(BodyCopy)>
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 12,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Styled(BonusPointsAvailability)
          bonusDayAvailableToday={1}
          bonusPoints={
            Array [
              Object {
                "buttonText": "lbl_bonusPoints_usedOn ",
                "dataLocator": "usedonbtn",
                "disabled": true,
              },
              Object {
                "buttonText": "lbl_bonusPoints_ctaApplied",
                "dataLocator": "appliedtoorderbtn",
                "disabled": false,
              },
              Object {
                "buttonText": "lbl_bonusPoints_futureUse",
                "dataLocator": "availableforfutureusebtn",
                "disabled": true,
              },
            ]
          }
          className="availability-msg"
          enableApplyCta={false}
          getBonusDaysData={[Function]}
          labels={
            Object {
              "placeRewards": Object {
                "lbl_bonus_points_apply_any_day": "",
                "lbl_bonus_points_msg": "",
                "lbl_common_applied_to_order": "",
                "lbl_common_details": "",
                "lbl_place_rewards_bonus": "",
                "lbl_place_rewards_day": "",
                "lbl_place_rewards_points": "",
              },
            }
          }
          orderDetails={Object {}}
        />
      </Styled(Col)>
    </Styled(Row)>
    <Styled(Anchor)
      anchorVariation="primary"
      className="details-link"
      dataLocator="detailslink"
      fontSizeVariation="medium"
      href="#"
      onClick={[Function]}
      underline={true}
    >
      lbl_bonusPoints_details
    </Styled(Anchor)>
  </div>
</div>
`;

exports[`BonusPointsAvailabilityVanilla should render correctly with future Use 1`] = `
<div
  className=""
>
  <Styled(Col)
    className="hide-in-large-up"
    colSize={
      Object {
        "large": 12,
        "medium": 8,
        "small": 6,
      }
    }
    ignoreGutter={
      Object {
        "medium": true,
        "small": true,
      }
    }
  >
    <Styled(CollapsibleContainer)
      body={
        <React.Fragment>
          <React.Fragment>
            <ForwardRef
              className="apply-any-day-msg"
              color="text.primary"
              component="p"
              data-locator="msgtextinbold"
              fontFamily="secondary"
              fontSize={
                Array [
                  "fs14",
                  "fs10",
                  "fs16",
                ]
              }
              fontWeight="extrabold"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="center"
            >
              lbl_bonusPoints_applyAnyDay
            </ForwardRef>
            <ForwardRef
              className="availability-msg"
              color="text.primary"
              component="p"
              data-locator="infomsg"
              fontFamily="secondary"
              fontSize={
                Array [
                  "fs12",
                  "fs12",
                  "fs16",
                ]
              }
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="center"
            >
              lbl_bonusPoints_msg
            </ForwardRef>
          </React.Fragment>
          <ForwardRef
            fullBleed={true}
          >
            <ForwardRef
              colSize={
                Object {
                  "large": 12,
                  "medium": 8,
                  "small": 6,
                }
              }
            >
              <ForwardRef
                bonusDayAvailableToday={0}
                bonusPoints={
                  Array [
                    Object {
                      "buttonText": "lbl_bonusPoints_usedOn ",
                      "dataLocator": "usedonbtn",
                      "disabled": true,
                    },
                    Object {
                      "buttonText": "lbl_bonusPoints_ctaApply",
                      "dataLocator": "availabletodaybtn",
                      "disabled": false,
                    },
                    Object {
                      "buttonText": "lbl_bonusPoints_futureUse",
                      "dataLocator": "availableforfutureusebtn",
                      "disabled": true,
                    },
                  ]
                }
                className="availability-msg"
                enableApplyCta={false}
                getBonusDaysData={[Function]}
                labels={
                  Object {
                    "placeRewards": Object {
                      "lbl_bonus_points_apply_any_day": "",
                      "lbl_bonus_points_msg": "",
                      "lbl_common_applied_to_order": "",
                      "lbl_common_details": "",
                      "lbl_place_rewards_bonus": "",
                      "lbl_place_rewards_day": "",
                      "lbl_place_rewards_points": "",
                    },
                  }
                }
                orderDetails={Object {}}
              />
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            anchorVariation="primary"
            className="details-link"
            dataLocator="detailslink"
            fontSizeVariation="medium"
            href="#"
            onClick={[Function]}
            underline={true}
          >
            lbl_bonusPoints_details
          </ForwardRef>
        </React.Fragment>
      }
      className=""
      defaultOpen={true}
      header={
        <div
          className="elem-mb-SM"
          data-locator="bonuspointsdayhdr"
        >
          <ForwardRef
            className="elem-mr-XS"
            color="orange.800"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsBonus
          </ForwardRef>
          <ForwardRef
            className="elem-mr-XS"
            color="primary.main"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsPoints
          </ForwardRef>
          <ForwardRef
            className={null}
            color="pink.500"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsDay
          </ForwardRef>
        </div>
      }
      iconLocator="arrowicon"
    />
  </Styled(Col)>
  <div
    className="hide-in-medium-down"
  >
    <div
      className="elem-mb-SM"
      data-locator="bonuspointsdayhdr"
    >
      <Styled(BodyCopy)
        className="elem-mr-XS"
        color="orange.800"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsBonus
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className="elem-mr-XS"
        color="primary.main"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsPoints
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className={null}
        color="pink.500"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsDay
      </Styled(BodyCopy)>
    </div>
    <Styled(BodyCopy)
      className="apply-any-day-msg"
      color="text.primary"
      component="p"
      data-locator="msgtextinbold"
      fontFamily="secondary"
      fontSize={
        Array [
          "fs14",
          "fs10",
          "fs16",
        ]
      }
      fontWeight="extrabold"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      lbl_bonusPoints_applyAnyDay
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="availability-msg"
      color="text.primary"
      component="p"
      data-locator="infomsg"
      fontFamily="secondary"
      fontSize={
        Array [
          "fs12",
          "fs12",
          "fs16",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      lbl_bonusPoints_msg
    </Styled(BodyCopy)>
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 12,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Styled(BonusPointsAvailability)
          bonusDayAvailableToday={0}
          bonusPoints={
            Array [
              Object {
                "buttonText": "lbl_bonusPoints_usedOn ",
                "dataLocator": "usedonbtn",
                "disabled": true,
              },
              Object {
                "buttonText": "lbl_bonusPoints_ctaApply",
                "dataLocator": "availabletodaybtn",
                "disabled": false,
              },
              Object {
                "buttonText": "lbl_bonusPoints_futureUse",
                "dataLocator": "availableforfutureusebtn",
                "disabled": true,
              },
            ]
          }
          className="availability-msg"
          enableApplyCta={false}
          getBonusDaysData={[Function]}
          labels={
            Object {
              "placeRewards": Object {
                "lbl_bonus_points_apply_any_day": "",
                "lbl_bonus_points_msg": "",
                "lbl_common_applied_to_order": "",
                "lbl_common_details": "",
                "lbl_place_rewards_bonus": "",
                "lbl_place_rewards_day": "",
                "lbl_place_rewards_points": "",
              },
            }
          }
          orderDetails={Object {}}
        />
      </Styled(Col)>
    </Styled(Row)>
    <Styled(Anchor)
      anchorVariation="primary"
      className="details-link"
      dataLocator="detailslink"
      fontSizeVariation="medium"
      href="#"
      onClick={[Function]}
      underline={true}
    >
      lbl_bonusPoints_details
    </Styled(Anchor)>
  </div>
</div>
`;

exports[`BonusPointsAvailabilityVanilla should render correctly with futureDisabled 1`] = `
<div
  className=""
>
  <Styled(Col)
    className="hide-in-large-up"
    colSize={
      Object {
        "large": 12,
        "medium": 8,
        "small": 6,
      }
    }
    ignoreGutter={
      Object {
        "medium": true,
        "small": true,
      }
    }
  >
    <Styled(CollapsibleContainer)
      body={
        <React.Fragment>
          <React.Fragment>
            <ForwardRef
              className="apply-any-day-msg"
              color="text.primary"
              component="p"
              data-locator="msgtextinbold"
              fontFamily="secondary"
              fontSize={
                Array [
                  "fs14",
                  "fs10",
                  "fs16",
                ]
              }
              fontWeight="extrabold"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="center"
            >
              lbl_bonusPoints_applyAnyDay
            </ForwardRef>
            <ForwardRef
              className="availability-msg"
              color="text.primary"
              component="p"
              data-locator="infomsg"
              fontFamily="secondary"
              fontSize={
                Array [
                  "fs12",
                  "fs12",
                  "fs16",
                ]
              }
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="center"
            >
              lbl_bonusPoints_msg
            </ForwardRef>
          </React.Fragment>
          <ForwardRef
            fullBleed={true}
          >
            <ForwardRef
              colSize={
                Object {
                  "large": 12,
                  "medium": 8,
                  "small": 6,
                }
              }
            >
              <ForwardRef
                bonusDayAvailableToday={0}
                bonusPoints={
                  Array [
                    Object {
                      "buttonText": "lbl_bonusPoints_usedOn 15/7",
                      "dataLocator": "usedonbtn",
                      "disabled": true,
                    },
                    Object {
                      "buttonText": "lbl_bonusPoints_ctaApply",
                      "dataLocator": "availabletodaybtn",
                      "disabled": false,
                    },
                    Object {
                      "buttonText": "lbl_bonusPoints_futureUse",
                      "dataLocator": "availableforfutureusebtn",
                      "disabled": true,
                    },
                  ]
                }
                className="availability-msg"
                enableApplyCta={false}
                getBonusDaysData={[Function]}
                labels={
                  Object {
                    "placeRewards": Object {
                      "lbl_bonus_points_apply_any_day": "",
                      "lbl_bonus_points_msg": "",
                      "lbl_common_applied_to_order": "",
                      "lbl_common_details": "",
                      "lbl_place_rewards_bonus": "",
                      "lbl_place_rewards_day": "",
                      "lbl_place_rewards_points": "",
                    },
                  }
                }
                orderDetails={Object {}}
              />
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            anchorVariation="primary"
            className="details-link"
            dataLocator="detailslink"
            fontSizeVariation="medium"
            href="#"
            onClick={[Function]}
            underline={true}
          >
            lbl_bonusPoints_details
          </ForwardRef>
        </React.Fragment>
      }
      className=""
      defaultOpen={true}
      header={
        <div
          className="elem-mb-SM"
          data-locator="bonuspointsdayhdr"
        >
          <ForwardRef
            className="elem-mr-XS"
            color="orange.800"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsBonus
          </ForwardRef>
          <ForwardRef
            className="elem-mr-XS"
            color="primary.main"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsPoints
          </ForwardRef>
          <ForwardRef
            className={null}
            color="pink.500"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsDay
          </ForwardRef>
        </div>
      }
      iconLocator="arrowicon"
    />
  </Styled(Col)>
  <div
    className="hide-in-medium-down"
  >
    <div
      className="elem-mb-SM"
      data-locator="bonuspointsdayhdr"
    >
      <Styled(BodyCopy)
        className="elem-mr-XS"
        color="orange.800"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsBonus
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className="elem-mr-XS"
        color="primary.main"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsPoints
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className={null}
        color="pink.500"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsDay
      </Styled(BodyCopy)>
    </div>
    <Styled(BodyCopy)
      className="apply-any-day-msg"
      color="text.primary"
      component="p"
      data-locator="msgtextinbold"
      fontFamily="secondary"
      fontSize={
        Array [
          "fs14",
          "fs10",
          "fs16",
        ]
      }
      fontWeight="extrabold"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      lbl_bonusPoints_applyAnyDay
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="availability-msg"
      color="text.primary"
      component="p"
      data-locator="infomsg"
      fontFamily="secondary"
      fontSize={
        Array [
          "fs12",
          "fs12",
          "fs16",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      lbl_bonusPoints_msg
    </Styled(BodyCopy)>
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 12,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Styled(BonusPointsAvailability)
          bonusDayAvailableToday={0}
          bonusPoints={
            Array [
              Object {
                "buttonText": "lbl_bonusPoints_usedOn 15/7",
                "dataLocator": "usedonbtn",
                "disabled": true,
              },
              Object {
                "buttonText": "lbl_bonusPoints_ctaApply",
                "dataLocator": "availabletodaybtn",
                "disabled": false,
              },
              Object {
                "buttonText": "lbl_bonusPoints_futureUse",
                "dataLocator": "availableforfutureusebtn",
                "disabled": true,
              },
            ]
          }
          className="availability-msg"
          enableApplyCta={false}
          getBonusDaysData={[Function]}
          labels={
            Object {
              "placeRewards": Object {
                "lbl_bonus_points_apply_any_day": "",
                "lbl_bonus_points_msg": "",
                "lbl_common_applied_to_order": "",
                "lbl_common_details": "",
                "lbl_place_rewards_bonus": "",
                "lbl_place_rewards_day": "",
                "lbl_place_rewards_points": "",
              },
            }
          }
          orderDetails={Object {}}
        />
      </Styled(Col)>
    </Styled(Row)>
    <Styled(Anchor)
      anchorVariation="primary"
      className="details-link"
      dataLocator="detailslink"
      fontSizeVariation="medium"
      href="#"
      onClick={[Function]}
      underline={true}
    >
      lbl_bonusPoints_details
    </Styled(Anchor)>
  </div>
</div>
`;

exports[`BonusPointsAvailabilityVanilla should render correctly with isUsed 1`] = `
<div
  className=""
>
  <Styled(Col)
    className="hide-in-large-up"
    colSize={
      Object {
        "large": 12,
        "medium": 8,
        "small": 6,
      }
    }
    ignoreGutter={
      Object {
        "medium": true,
        "small": true,
      }
    }
  >
    <Styled(CollapsibleContainer)
      body={
        <React.Fragment>
          <ForwardRef
            className="availability-msg"
            color="text.primary"
            component="p"
            data-locator="infomsg"
            fontFamily="secondary"
            fontSize={
              Array [
                "fs12",
                "fs12",
                "fs16",
              ]
            }
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="center"
          >
            lbl_bonusPoints_myRewardsUsedAll
          </ForwardRef>
          <ForwardRef
            fullBleed={true}
          >
            <ForwardRef
              colSize={
                Object {
                  "large": 12,
                  "medium": 8,
                  "small": 6,
                }
              }
            >
              <ForwardRef
                bonusDayAvailableToday={0}
                bonusPoints={
                  Array [
                    Object {
                      "buttonText": "lbl_bonusPoints_usedOn ",
                      "dataLocator": "usedonbtn",
                      "disabled": true,
                    },
                  ]
                }
                className="availability-msg"
                enableApplyCta={false}
                getBonusDaysData={[Function]}
                labels={
                  Object {
                    "placeRewards": Object {
                      "lbl_bonus_points_apply_any_day": "",
                      "lbl_bonus_points_msg": "",
                      "lbl_common_applied_to_order": "",
                      "lbl_common_details": "",
                      "lbl_place_rewards_bonus": "",
                      "lbl_place_rewards_day": "",
                      "lbl_place_rewards_points": "",
                    },
                  }
                }
                orderDetails={Object {}}
              />
            </ForwardRef>
          </ForwardRef>
          <ForwardRef
            anchorVariation="primary"
            className="details-link"
            dataLocator="detailslink"
            fontSizeVariation="medium"
            href="#"
            onClick={[Function]}
            underline={true}
          >
            lbl_bonusPoints_details
          </ForwardRef>
        </React.Fragment>
      }
      className=""
      defaultOpen={true}
      header={
        <div
          className="elem-mb-SM"
          data-locator="bonuspointsdayhdr"
        >
          <ForwardRef
            className="elem-mr-XS"
            color="orange.800"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsBonus
          </ForwardRef>
          <ForwardRef
            className="elem-mr-XS"
            color="primary.main"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsPoints
          </ForwardRef>
          <ForwardRef
            className={null}
            color="pink.500"
            component="h2"
            fontFamily="primary"
            fontSize={
              Array [
                "fs16",
                "fs13",
                "fs18",
              ]
            }
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            lbl_bonusPoints_placeRewardsDay
          </ForwardRef>
        </div>
      }
      iconLocator="arrowicon"
    />
  </Styled(Col)>
  <div
    className="hide-in-medium-down"
  >
    <div
      className="elem-mb-SM"
      data-locator="bonuspointsdayhdr"
    >
      <Styled(BodyCopy)
        className="elem-mr-XS"
        color="orange.800"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsBonus
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className="elem-mr-XS"
        color="primary.main"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsPoints
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className={null}
        color="pink.500"
        component="h2"
        fontFamily="primary"
        fontSize={
          Array [
            "fs16",
            "fs13",
            "fs18",
          ]
        }
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        lbl_bonusPoints_placeRewardsDay
      </Styled(BodyCopy)>
    </div>
    <Styled(BodyCopy)
      className="availability-msg"
      color="text.primary"
      component="p"
      data-locator="infomsg"
      fontFamily="secondary"
      fontSize={
        Array [
          "fs12",
          "fs12",
          "fs16",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      lbl_bonusPoints_myRewardsUsedAll
    </Styled(BodyCopy)>
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 12,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Styled(BonusPointsAvailability)
          bonusDayAvailableToday={0}
          bonusPoints={
            Array [
              Object {
                "buttonText": "lbl_bonusPoints_usedOn ",
                "dataLocator": "usedonbtn",
                "disabled": true,
              },
            ]
          }
          className="availability-msg"
          enableApplyCta={false}
          getBonusDaysData={[Function]}
          labels={
            Object {
              "placeRewards": Object {
                "lbl_bonus_points_apply_any_day": "",
                "lbl_bonus_points_msg": "",
                "lbl_common_applied_to_order": "",
                "lbl_common_details": "",
                "lbl_place_rewards_bonus": "",
                "lbl_place_rewards_day": "",
                "lbl_place_rewards_points": "",
              },
            }
          }
          orderDetails={Object {}}
        />
      </Styled(Col)>
    </Styled(Row)>
    <Styled(Anchor)
      anchorVariation="primary"
      className="details-link"
      dataLocator="detailslink"
      fontSizeVariation="medium"
      href="#"
      onClick={[Function]}
      underline={true}
    >
      lbl_bonusPoints_details
    </Styled(Anchor)>
  </div>
</div>
`;
