// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Anchor component renders correctly 1`] = `
<StyledNativeComponent
  className="sample-anchor"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "displayName": "Styled(Anchor)",
      "inlineStyle": InlineStyle {
        "rules": Array [
          "
  ",
          "
  background: ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
",
          ";
",
        ],
      },
      "render": [Function],
      "styledComponentId": "StyledNativeComponent",
      "target": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
>
  Random anchor
</StyledNativeComponent>
`;

exports[`Anchor component renders correctly with nolink variation 1`] = `
<StyledNativeComponent
  className="sample-anchor-nolink"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "displayName": "Styled(Anchor)",
      "inlineStyle": InlineStyle {
        "rules": Array [
          "
  ",
          "
  background: ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";

  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";
",
          ";
",
        ],
      },
      "render": [Function],
      "styledComponentId": "StyledNativeComponent",
      "target": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  noLink={true}
>
  Random anchor with no link component
</StyledNativeComponent>
`;
