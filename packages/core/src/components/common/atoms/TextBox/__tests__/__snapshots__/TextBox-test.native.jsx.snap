// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Textbox component render enableSuccessCheck on validation fail 1`] = `
<View>
  <View>
    <View>
      <Styled(Text)
        isFocused="foo"
      >
        input
      </Styled(Text)>
      <Styled(TextInput)
        aria-label="input"
        className="TextBox__input"
        data-locator="input-field"
        enableSuccessCheck={false}
        error="food"
        id="input"
        keyboardType="default"
        onBlur={[Function]}
        onEndEditing={[Function]}
        onFocus={[Function]}
        others={
          Object {
            "ariaLabel": "input",
            "dataLocator": "input-field",
            "enableSuccessCheck": false,
            "id": "input",
            "keyboardType": "default",
            "label": "input",
            "secureTextEntry": false,
            "showSuccessCheck": false,
            "successText": "",
          }
        }
        returnKeyType="next"
        secureTextEntry={false}
        type="text"
        value="foo"
      />
    </View>
  </View>
</View>
`;

exports[`Textbox component render enableSuccessCheck on validation true 1`] = `
<View>
  <View>
    <View>
      <Styled(Text)
        isFocused="foo"
      >
        input
      </Styled(Text)>
      <Styled(TextInput)
        aria-label="input"
        className="TextBox__input"
        data-locator="input-field"
        enableSuccessCheck={true}
        error=""
        id="input"
        keyboardType="default"
        onBlur={[Function]}
        onEndEditing={[Function]}
        onFocus={[Function]}
        others={
          Object {
            "ariaLabel": "input",
            "dataLocator": "input-field",
            "enableSuccessCheck": true,
            "id": "input",
            "keyboardType": "default",
            "label": "input",
            "secureTextEntry": false,
            "showSuccessCheck": false,
            "successText": "",
          }
        }
        returnKeyType="next"
        secureTextEntry={false}
        type="text"
        value="foo"
      />
      <Styled(View)>
        <Styled(ImageComp)
          height="12px"
          source={
            Object {
              "testUri": "../../../../core/src/assets/success-icon.png",
            }
          }
          width="15px"
        />
      </Styled(View)>
    </View>
    <Styled(View)
      marginBottom={true}
    />
  </View>
</View>
`;

exports[`Textbox component renders correctly 1`] = `
<View>
  <View>
    <View>
      <Styled(Text)
        isFocused="foo"
      >
        input
      </Styled(Text)>
      <Styled(TextInput)
        aria-label="input"
        className="TextBox__input"
        data-locator="input-field"
        enableSuccessCheck={false}
        error=""
        id="input"
        keyboardType="default"
        onBlur={[Function]}
        onEndEditing={[Function]}
        onFocus={[Function]}
        others={
          Object {
            "ariaLabel": "input",
            "dataLocator": "input-field",
            "enableSuccessCheck": false,
            "id": "input",
            "keyboardType": "default",
            "label": "input",
            "secureTextEntry": false,
            "showSuccessCheck": false,
            "successText": "",
          }
        }
        returnKeyType="next"
        secureTextEntry={false}
        type="text"
        value="foo"
      />
    </View>
    <Styled(View)
      marginBottom={true}
    />
  </View>
</View>
`;

exports[`Textbox component renders correctly hidden textbox 1`] = `
<View>
  <View>
    <Styled(View)>
      <View>
        <Styled(Text)
          isFocused="foo"
        >
          input
        </Styled(Text)>
        <Styled(TextInput)
          aria-label="input"
          ariaLabel="input"
          className="TextBox__input"
          data-locator="input-field"
          dataLocator="input-field"
          enableSuccessCheck={false}
          error=""
          id="input"
          keyboardType="default"
          label="input"
          onBlur={[Function]}
          onEndEditing={[Function]}
          onFocus={[Function]}
          returnKeyType="next"
          secureTextEntry={false}
          showSuccessCheck={false}
          successText=""
          type="hidden"
          value="foo"
        />
      </View>
    </Styled(View)>
  </View>
</View>
`;
