// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactInformationFormWrapper component should renders correctly 1`] = `
<Styled(BodyCopy)
  className={null}
  color="text.primary"
  component="div"
  fontFamily="primary"
  fontSize={12}
  fontWeight="regular"
  letterSpacing="normal"
  lineHeight="normal"
  textAlign="left"
>
  <form>
    <Styled(Grid)>
      <CreditCardPageHeader
        labels={
          Object {
            "plcc_form_checkbox_text": "checkbox",
            "plcc_form_nothanks": "no thanks",
            "plcc_form_submit_button": "submit",
          }
        }
      />
      <Styled(Row)
        className="rewards_card_rules"
        fullBleed={true}
      >
        <ReviewCreditCardInformation
          creditCardHeader="header"
        />
      </Styled(Row)>
      <Styled(Row)
        fullBleed={true}
      >
        <Styled(Col)
          className="prescreen_code_link_container"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
          data-locator="Prescreen_code_link"
          key="Prescreen_code_link"
        >
          <PrescreenCode
            labels={
              Object {
                "plcc_form_checkbox_text": "checkbox",
                "plcc_form_nothanks": "no thanks",
                "plcc_form_submit_button": "submit",
              }
            }
          />
        </Styled(Col)>
      </Styled(Row)>
      <ContactInformationFormWrapper
        dispatch={[MockFunction]}
        labels={
          Object {
            "plcc_form_checkbox_text": "checkbox",
            "plcc_form_nothanks": "no thanks",
            "plcc_form_submit_button": "submit",
          }
        }
      />
      <Styled(Row)
        fullBleed={true}
      >
        <Styled(Col)
          className="contact_information_container"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
          key="container_contact_info"
        >
          <ContactInformation
            contactInfo="contact info"
          />
        </Styled(Col)>
      </Styled(Row)>
      <PersonalInformationFormWrapper
        labels={
          Object {
            "plcc_form_checkbox_text": "checkbox",
            "plcc_form_nothanks": "no thanks",
            "plcc_form_submit_button": "submit",
          }
        }
      />
      <Styled(Row)
        fullBleed={true}
      >
        <Styled(Col)
          className="account_information_container"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
          key="container_account_info"
        >
          <AccountInformations
            classifiedDisclaimer="account"
          />
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        fullBleed={true}
      >
        <Styled(Col)
          className="electronic_consent_container"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
          key="container_electronic_consent"
        >
          <ElectronicConsent
            electronicConsent="consent"
          />
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        fullBleed={true}
      >
        <Styled(Col)
          className="plcc_agreements_container"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
          key="container_plcc_agreement"
        >
          <PLCCAgreements
            labels={
              Object {
                "plcc_form_checkbox_text": "checkbox",
                "plcc_form_nothanks": "no thanks",
                "plcc_form_submit_button": "submit",
              }
            }
          />
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        fullBleed={true}
      >
        <Styled(Col)
          className="plcc_iAgree_container"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
          key="container_checkbox"
        >
          <Field
            className="iAgree_terms_conditions"
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gZMcBi",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  display: inline-flex;
  align-items: ",
                    [Function],
                    ";

  & .CheckBox__input {
    flex: 0 0 auto;
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    height: ",
                    "25px",
                    ";
    width: ",
                    "25px",
                    ";
    margin: 0;
    margin-right: ",
                    [Function],
                    ";
  }

  & .CheckBox__input:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    border: 1px solid ",
                    [Function],
                    ";
  }

  & .CheckBox__input:checked:before {
    background: ",
                    [Function],
                    ";
    border: 1px solid ",
                    [Function],
                    ";
  }

  & .CheckBox__input:checked:after {
    transform: rotate(225deg);
    content: '';
    border: 2px solid ",
                    [Function],
                    ";
    font-size: ",
                    [Function],
                    "px;
    width: ",
                    [Function],
                    ";
    height: 10px;
    border-right: 0;
    border-bottom: 0;
    left: 10px;
    top: 5px;
    position: absolute;
  }

  & .CheckBox__text {
    width: calc(100% - 25px);
  }

  & .disabled {
    opacity: ",
                    [Function],
                    ";
  }

  & .Checkbox__error {
    display: flex;
    flex-direction: row;
  }
  & .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 15px;
    width: 15px;
    margin-right: 4px;
    margin-top: 2px;
  }

  & .potential {
    margin: 2px;
  }
",
                    ";
",
                  ],
                },
                "displayName": "Styled(InputCheckbox)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gZMcBi",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            dataLocator="plcc_T&C_checkbox"
            disabled={false}
            name="iAgree"
          >
            checkbox
          </Field>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(BodyCopy)
        className="underprogress_application"
        color="text.primary"
        component="p"
        fontFamily="secondary"
        fontSize="fs16"
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        textAlign="left"
      >
        <Styled(Row)
          className="submit_plcc_form"
          fullBleed={true}
        >
          <Styled(Col)
            className="submit_button_plcc_form_container"
            colSize={
              Object {
                "large": 4,
                "medium": 4,
                "small": 6,
              }
            }
            ignoreGutter={
              Object {
                "small": true,
              }
            }
          >
            <Styled(Button)
              buttonVariation="fixed-width"
              className="submit_button_plcc_form"
              data-locator="plcc_submit_btn"
              fill="BLUE"
              type="submit"
            >
              submit
            </Styled(Button)>
          </Styled(Col)>
        </Styled(Row)>
        <Styled(Row)
          className="no_thanks_link_wrapper"
        >
          <Styled(Col)
            aria-label="no_thanks_link"
            className="no_thanks_link"
            colSize={
              Object {
                "large": 4,
                "medium": 8,
                "small": 6,
              }
            }
            data-locator="plcc_no_thanks"
            ignoreGutter={
              Object {
                "small": true,
              }
            }
          >
            <Styled(BodyCopy)
              className={null}
              color="text.primary"
              component="div"
              fontFamily="secondary"
              fontSize={12}
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              onClick={[Function]}
              textAlign="center"
            >
              no thanks
            </Styled(BodyCopy)>
          </Styled(Col)>
        </Styled(Row)>
      </Styled(BodyCopy)>
    </Styled(Grid)>
  </form>
</Styled(BodyCopy)>
`;
