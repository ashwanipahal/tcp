// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContactInformationFormWrapper component should renders correctly 1`] = `
<styled.div>
  <Styled(Heading)
    className="title"
    color="black"
    component={null}
    dataLocator=""
    fontFamily="secondary"
    fontSize="fs16"
    fontWeight="semibold"
    tabIndex="0"
    textAlign="left"
    variant="h2"
  >
    contact information
  </Styled(Heading)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      className="contact_information_form columnWrapper"
      colSize={
        Object {
          "large": 5,
          "medium": 4,
          "small": 6,
        }
      }
      key="contact_information_form"
    >
      <Styled(Row)
        fullBleed={true}
      >
        <Styled(Col)
          className="contact_information_form"
          colSize={
            Object {
              "large": 10,
              "medium": 6,
              "small": 4,
            }
          }
          key="contact_information_form_First Name"
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                    [Function],
                    "px;
    padding: 0;
    position: absolute;
    top: ",
                    [Function],
                    ";
    ",
                    [Function],
                    "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                    [Function],
                    "px;
    color: ",
                    [Function],
                    ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";

    ",
                    [Function],
                    "

    ",
                    [Function],
                    ";

    &:focus + .TextBox__label {
      font-size: ",
                    [Function],
                    "px;
      font-weight: ",
                    [Function],
                    ";
      top: ",
                    [Function],
                    ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                    [Function],
                    ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                    [Function],
                    ";
    width: 15px;
    height: 8px;
    margin-left: ",
                    [Function],
                    ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                    [Function],
                    ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                    [Function],
                    ";
      bottom: 0;
    }
  }

  ",
                    [Function],
                    ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                    [Function],
                    ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                    ";
",
                  ],
                },
                "displayName": "Styled(TextBox)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            data-locator="plcc_first_name"
            id="firstName"
            maxLength="15"
            name="firstName"
            placeholder="First Name"
            title="First Name"
          />
        </Styled(Col)>
        <Styled(Col)
          className="contact_information_form"
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
          key="contact_information_form_M.I."
        >
          <Field
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                    [Function],
                    "px;
    padding: 0;
    position: absolute;
    top: ",
                    [Function],
                    ";
    ",
                    [Function],
                    "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                    [Function],
                    "px;
    color: ",
                    [Function],
                    ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";

    ",
                    [Function],
                    "

    ",
                    [Function],
                    ";

    &:focus + .TextBox__label {
      font-size: ",
                    [Function],
                    "px;
      font-weight: ",
                    [Function],
                    ";
      top: ",
                    [Function],
                    ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                    [Function],
                    ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                    [Function],
                    ";
    width: 15px;
    height: 8px;
    margin-left: ",
                    [Function],
                    ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                    [Function],
                    ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                    [Function],
                    ";
      bottom: 0;
    }
  }

  ",
                    [Function],
                    ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                    [Function],
                    ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                    ";
",
                  ],
                },
                "displayName": "Styled(TextBox)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            data-locator="plcc_middle_name"
            id="middleNameInitial"
            maxLength="15"
            name="middleNameInitial"
            placeholder="M.I."
            title="M.I."
          />
        </Styled(Col)>
      </Styled(Row)>
    </Styled(Col)>
    <Styled(Col)
      className="contact_information_form columnWrapper"
      colSize={
        Object {
          "large": 5,
          "medium": 4,
          "small": 6,
        }
      }
      key="contact_information_form_Last Name"
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gzVnrw",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gzVnrw",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        data-locator="plcc_last_name"
        id="lastName"
        maxLength="15"
        name="lastName"
        placeholder="Last Name"
        title="Last Name"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      className="contact_information_form columnWrapper"
      colSize={
        Object {
          "large": 5,
          "medium": 4,
          "small": 6,
        }
      }
      key="contact_information_form"
    >
      <Field
        className="field"
        component={[Function]}
        componentRestrictions={
          Object {
            "country": Array [
              undefined,
            ],
          }
        }
        dataLocator="plcc_address_1"
        id="addressLine1"
        maxLength="30"
        name="addressLine1"
        onPlaceSelected={[Function]}
        placeholder="Address Line 1"
      />
    </Styled(Col)>
    <Styled(Col)
      className="contact_information_form columnWrapper"
      colSize={
        Object {
          "large": 5,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        className="field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gzVnrw",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gzVnrw",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="plcc_address_2"
        id="addressLine2"
        name="addressLine2"
        placeholder="Address Line 2"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    className="fieldWrapper"
    fullBleed={true}
  >
    <Styled(Col)
      className="contact_information_form columnWrapper"
      colSize={
        Object {
          "large": 5,
          "medium": 4,
          "small": 6,
        }
      }
      key="container_city"
    >
      <Field
        className="field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gzVnrw",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gzVnrw",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="plcc_city"
        id="city"
        name="city"
        placeholder="city"
      />
    </Styled(Col)>
    <Styled(Col)
      className="columnWrapper"
      colSize={
        Object {
          "large": 5,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Styled(Row)
        fullBleed={true}
      >
        <Styled(Col)
          className="contact_information_form"
          colSize={
            Object {
              "large": 6,
              "medium": 4,
              "small": 3,
            }
          }
          key="container_state"
        >
          <Styled(BodyCopy)
            className="free_dropdown_label columnWrapper"
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="extrabold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            state
          </Styled(BodyCopy)>
          <Field
            className="field"
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-dnqmqq",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  position: relative;
  display: block;
  height: 70px;

  .select__input {
    appearance: none;
    background: url(",
                    "/static/images/carrot-small-down.png",
                    ") no-repeat right 0px bottom
      ",
                    [Function],
                    ";
    border: 0;
    border-bottom: 1px solid ",
                    [Function],
                    ";
    ",
                    [Function],
                    ";
    border-radius: 0;
    color: ",
                    [Function],
                    ";
    font-size: ",
                    [Function],
                    ";
    margin: 0;
    margin-bottom: ",
                    [Function],
                    ";
    outline: 0;
    padding: ",
                    "26px",
                    " 0 ",
                    [Function],
                    ";
    width: 100%;

    ",
                    [Function],
                    ";
  }

  .select__label {
    font-size: ",
                    [Function],
                    "px;
    font-weight: ",
                    [Function],
                    ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  .SelectBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                    [Function],
                    ";
  }

  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }

  ",
                    [Function],
                    ";
",
                    ";
",
                  ],
                },
                "displayName": "Styled(SelectBox)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-dnqmqq",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            dataLocator="plcc_state"
            id="state"
            name="statewocountry"
            options={
              Array [
                Object {
                  "displayName": "BC",
                  "fullName": "British Columbia",
                  "id": "BC",
                },
                Object {
                  "displayName": "ON",
                  "fullName": "Ontario",
                  "id": "ON",
                },
                Object {
                  "displayName": "NL",
                  "fullName": "Newfoundland and Labrador",
                  "id": "NL",
                },
                Object {
                  "displayName": "NS",
                  "fullName": "Nova Scotia",
                  "id": "NS",
                },
                Object {
                  "displayName": "PE",
                  "fullName": "Prince Edward Island",
                  "id": "PE",
                },
                Object {
                  "displayName": "NB",
                  "fullName": "New Brunswick",
                  "id": "NB",
                },
                Object {
                  "displayName": "QC",
                  "fullName": "Quebec",
                  "id": "QC",
                },
                Object {
                  "displayName": "MB",
                  "fullName": "Manitoba",
                  "id": "MB",
                },
                Object {
                  "displayName": "SK",
                  "fullName": "Saskatchewan",
                  "id": "SK",
                },
                Object {
                  "displayName": "AB",
                  "fullName": "Alberta",
                  "id": "AB",
                },
                Object {
                  "displayName": "NT",
                  "fullName": "Northwest Territories",
                  "id": "NT",
                },
                Object {
                  "displayName": "NU",
                  "fullName": "Nunavut",
                  "id": "NU",
                },
                Object {
                  "displayName": "YT",
                  "fullName": "Yukon",
                  "id": "YT",
                },
              ]
            }
            placeholder="state select"
          />
        </Styled(Col)>
        <Styled(Col)
          className="contact_information_form"
          colSize={
            Object {
              "large": 6,
              "medium": 4,
              "small": 3,
            }
          }
          key="container_zip"
        >
          <Field
            className="field"
            component={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-gzVnrw",
                  "isStatic": false,
                  "rules": Array [
                    "
  ",
                    "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                    [Function],
                    "px;
    padding: 0;
    position: absolute;
    top: ",
                    [Function],
                    ";
    ",
                    [Function],
                    "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                    [Function],
                    "px;
    color: ",
                    [Function],
                    ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                    [Function],
                    ";
    padding-bottom: ",
                    [Function],
                    ";
    margin-bottom: ",
                    [Function],
                    ";
    padding-top: ",
                    [Function],
                    ";

    ",
                    [Function],
                    "

    ",
                    [Function],
                    ";

    &:focus + .TextBox__label {
      font-size: ",
                    [Function],
                    "px;
      font-weight: ",
                    [Function],
                    ";
      top: ",
                    [Function],
                    ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                    [Function],
                    ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                    [Function],
                    ";
    width: 15px;
    height: 8px;
    margin-left: ",
                    [Function],
                    ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                    [Function],
                    ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                    [Function],
                    ";
      bottom: 0;
    }
  }

  ",
                    [Function],
                    ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                    [Function],
                    ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                    ";
",
                  ],
                },
                "displayName": "Styled(TextBox)",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-gzVnrw",
                "target": [Function],
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            dataLocator="plcc_zip_code"
            id="zipCode"
            maxLength={5}
            name="noCountryZip"
            placeholder="zipcode"
          />
        </Styled(Col)>
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      className="contact_information_form columnWrapper"
      colSize={
        Object {
          "large": 5,
          "medium": 4,
          "small": 6,
        }
      }
      key="container_phone"
    >
      <Field
        className="field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gzVnrw",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gzVnrw",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="plc_mobile_no"
        id="phoneNumber"
        name="phoneNumberWithAlt"
        placeholder="mobile phone"
        type="tel"
      />
    </Styled(Col)>
    <Styled(Col)
      className="contact_information_form columnWrapper"
      colSize={
        Object {
          "large": 5,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        className="field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gzVnrw",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gzVnrw",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="plcc_alt_mobile_no"
        id="alternatePhone"
        name="altPhoneNumber"
        placeholder="alternate phone"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      className="prescreen_code_link_container contact_information_form columnWrapper"
      colSize={
        Object {
          "large": 5,
          "medium": 4,
          "small": 6,
        }
      }
      data-locator="Prescreen_code_link"
      key="Prescreen_code_link"
    >
      <Field
        className="field"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gzVnrw",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gzVnrw",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="plcc_email"
        id="emailAddress"
        name="emailAddress"
        placeholder="email"
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(BodyCopy)
    className="columnWrapper plcc_min_phone"
    color="text.primary"
    component="p"
    fontFamily="secondary"
    fontSize="fs10"
    fontWeight="regular"
    id="plcc_min_phone"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="left"
  >
    min phone
  </Styled(BodyCopy)>
</styled.div>
`;
