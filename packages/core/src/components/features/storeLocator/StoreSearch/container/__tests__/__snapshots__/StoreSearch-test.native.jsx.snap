// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StoreSearch component StoreSearch component renders correctly props 1`] = `
<Styled(View)>
  <Styled(View)>
    <Styled(BodyCopy)
      color="#1a1a1a"
      fontSize="fs16"
      fontWeight="extrabold"
      mobilefontFamily="primary"
      text="Find a Store"
    />
  </Styled(View)>
  <Styled(Anchor)
    accessibilityLabel=""
    anchorVariation=""
    customStyle={Object {}}
    locator=""
    onPress={null}
    text=""
    visible={false}
  >
    <Styled(View)>
      <Styled(ImageComp)
        alt=""
        height="16px"
        host=""
        source={
          Object {
            "testUri": "../../../../core/src/assets/icon-marker.png",
          }
        }
        url=""
        width="16px"
      />
      <Styled(View)>
        <Styled(BodyCopy)
          color="#1a1a1a"
          fontSize="fs12"
          fontWeight="regular"
          mobilefontFamily="primary"
          text="Use my current location"
        />
      </Styled(View)>
    </Styled(View)>
  </Styled(Anchor)>
  <Styled(View)>
    <Field
      component={[Function]}
      componentRestrictions={
        Object {
          "country": Array [
            "US",
          ],
        }
      }
      dataLocator="addnewaddress-addressl1"
      headerTitle="ZIP or city, state"
    />
    <Styled(View)>
      <Styled(Anchor)
        accessibilityLabel=""
        anchorVariation=""
        customStyle={Object {}}
        locator=""
        onPress={[Function]}
        text=""
        visible={false}
      >
        <Styled(ImageComp)
          alt=""
          height="25px"
          host=""
          source={
            Object {
              "testUri": "../../../../core/src/assets/icon-mag-glass.png",
            }
          }
          url=""
          width="25px"
        />
      </Styled(Anchor)>
    </Styled(View)>
    <ErrorMessage
      className=""
      error="you have an error in the component"
      errorId="storeSearch_geoLocation"
      formName=""
      isShowingMessage="you have an error in the component"
      withoutErrorDataAttribute={true}
    />
  </Styled(View)>
  <Styled(View)>
    <FlatList
      data={
        Array [
          Object {
            "dataLocator": "gymboree-store-option",
            "name": "gymboreeStoreOption",
            "storeLabel": "Gymboree",
          },
          Object {
            "dataLocator": "only-outlet-option",
            "name": "outletOption",
            "storeLabel": "Only Outlet Stores",
          },
        ]
      }
      disableVirtualization={false}
      horizontal={true}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    />
  </Styled(View)>
  <Styled(View)>
    <Styled(Anchor)
      accessibilityLabel=""
      anchorVariation="primary"
      customStyle={Object {}}
      fontWeight="regular"
      locator=""
      onPress={null}
      text="View Map"
      underline={true}
      visible={false}
    />
  </Styled(View)>
</Styled(View)>
`;

exports[`StoreSearch component StoreSearch component renders correctly props 2`] = `
<Styled(View)>
  <Styled(View)>
    <Styled(BodyCopy)
      color="#1a1a1a"
      fontSize="fs16"
      fontWeight="extrabold"
      mobilefontFamily="primary"
      text="Find a Store"
    />
  </Styled(View)>
  <Styled(Anchor)
    accessibilityLabel=""
    anchorVariation=""
    customStyle={Object {}}
    locator=""
    onPress={null}
    text=""
    visible={false}
  >
    <Styled(View)>
      <Styled(ImageComp)
        alt=""
        height="16px"
        host=""
        source={
          Object {
            "testUri": "../../../../core/src/assets/icon-marker.png",
          }
        }
        url=""
        width="16px"
      />
      <Styled(View)>
        <Styled(BodyCopy)
          color="#1a1a1a"
          fontSize="fs12"
          fontWeight="regular"
          mobilefontFamily="primary"
          text="Use my current location"
        />
      </Styled(View)>
    </Styled(View)>
  </Styled(Anchor)>
  <Styled(View)>
    <Field
      component={[Function]}
      componentRestrictions={
        Object {
          "country": Array [
            "US",
          ],
        }
      }
      dataLocator="addnewaddress-addressl1"
      headerTitle="ZIP or city, state"
    />
    <Styled(View)>
      <Styled(Anchor)
        accessibilityLabel=""
        anchorVariation=""
        customStyle={Object {}}
        locator=""
        onPress={[Function]}
        text=""
        visible={false}
      >
        <Styled(ImageComp)
          alt=""
          height="25px"
          host=""
          source={
            Object {
              "testUri": "../../../../core/src/assets/icon-mag-glass.png",
            }
          }
          url=""
          width="25px"
        />
      </Styled(Anchor)>
    </Styled(View)>
    <ErrorMessage
      className=""
      error="you have an error in the component"
      errorId="storeSearch_geoLocation"
      formName=""
      isShowingMessage="you have an error in the component"
      withoutErrorDataAttribute={true}
    />
  </Styled(View)>
  <Styled(View)>
    <FlatList
      data={
        Array [
          Object {
            "dataLocator": "gymboree-store-option",
            "name": "gymboreeStoreOption",
            "storeLabel": "Gymboree",
          },
          Object {
            "dataLocator": "only-outlet-option",
            "name": "outletOption",
            "storeLabel": "Only Outlet Stores",
          },
        ]
      }
      disableVirtualization={false}
      horizontal={true}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    />
  </Styled(View)>
  <Styled(View)>
    <Styled(Anchor)
      accessibilityLabel=""
      anchorVariation="primary"
      customStyle={Object {}}
      fontWeight="regular"
      locator=""
      onPress={null}
      text="View Map"
      underline={true}
      visible={false}
    />
  </Styled(View)>
</Styled(View)>
`;

exports[`StoreSearch component renderStoreTypes renders correctly props 1`] = `
<Styled(View)>
  <Styled(View)>
    <Styled(BodyCopy)
      color="#1a1a1a"
      fontSize="fs16"
      fontWeight="extrabold"
      mobilefontFamily="primary"
      text="Find a Store"
    />
  </Styled(View)>
  <Styled(Anchor)
    accessibilityLabel=""
    anchorVariation=""
    customStyle={Object {}}
    locator=""
    onPress={null}
    text=""
    visible={false}
  >
    <Styled(View)>
      <Styled(ImageComp)
        alt=""
        height="16px"
        host=""
        source={
          Object {
            "testUri": "../../../../core/src/assets/icon-marker.png",
          }
        }
        url=""
        width="16px"
      />
      <Styled(View)>
        <Styled(BodyCopy)
          color="#1a1a1a"
          fontSize="fs12"
          fontWeight="regular"
          mobilefontFamily="primary"
          text="Use my current location"
        />
      </Styled(View)>
    </Styled(View)>
  </Styled(Anchor)>
  <Styled(View)>
    <Field
      component={[Function]}
      componentRestrictions={
        Object {
          "country": Array [
            "US",
          ],
        }
      }
      dataLocator="addnewaddress-addressl1"
      headerTitle="ZIP or city, state"
    />
    <Styled(View)>
      <Styled(Anchor)
        accessibilityLabel=""
        anchorVariation=""
        customStyle={Object {}}
        locator=""
        onPress={[Function]}
        text=""
        visible={false}
      >
        <Styled(ImageComp)
          alt=""
          height="25px"
          host=""
          source={
            Object {
              "testUri": "../../../../core/src/assets/icon-mag-glass.png",
            }
          }
          url=""
          width="25px"
        />
      </Styled(Anchor)>
    </Styled(View)>
  </Styled(View)>
  <Styled(View)>
    <FlatList
      data={
        Array [
          Object {
            "dataLocator": "gymboree-store-option",
            "name": "gymboreeStoreOption",
            "storeLabel": "Gymboree",
          },
          Object {
            "dataLocator": "only-outlet-option",
            "name": "outletOption",
            "storeLabel": "Only Outlet Stores",
          },
        ]
      }
      disableVirtualization={false}
      horizontal={true}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    />
  </Styled(View)>
  <Styled(View)>
    <Styled(Anchor)
      accessibilityLabel=""
      anchorVariation="primary"
      customStyle={Object {}}
      fontWeight="regular"
      locator=""
      onPress={null}
      text="View Map"
      underline={true}
      visible={false}
    />
  </Styled(View)>
</Styled(View)>
`;

exports[`StoreSearch component should be defined 1`] = `
<Styled(View)>
  <Styled(View)>
    <Styled(BodyCopy)
      color="#1a1a1a"
      fontSize="fs16"
      fontWeight="extrabold"
      mobilefontFamily="primary"
      text="Find a Store"
    />
  </Styled(View)>
  <Styled(Anchor)
    accessibilityLabel=""
    anchorVariation=""
    customStyle={Object {}}
    locator=""
    onPress={null}
    text=""
    visible={false}
  >
    <Styled(View)>
      <Styled(ImageComp)
        alt=""
        height="16px"
        host=""
        source={
          Object {
            "testUri": "../../../../core/src/assets/icon-marker.png",
          }
        }
        url=""
        width="16px"
      />
      <Styled(View)>
        <Styled(BodyCopy)
          color="#1a1a1a"
          fontSize="fs12"
          fontWeight="regular"
          mobilefontFamily="primary"
          text="Use my current location"
        />
      </Styled(View)>
    </Styled(View)>
  </Styled(Anchor)>
  <Styled(View)>
    <Field
      component={[Function]}
      componentRestrictions={
        Object {
          "country": Array [
            "US",
          ],
        }
      }
      dataLocator="addnewaddress-addressl1"
      headerTitle="ZIP or city, state"
    />
    <Styled(View)>
      <Styled(Anchor)
        accessibilityLabel=""
        anchorVariation=""
        customStyle={Object {}}
        locator=""
        onPress={[Function]}
        text=""
        visible={false}
      >
        <Styled(ImageComp)
          alt=""
          height="25px"
          host=""
          source={
            Object {
              "testUri": "../../../../core/src/assets/icon-mag-glass.png",
            }
          }
          url=""
          width="25px"
        />
      </Styled(Anchor)>
    </Styled(View)>
  </Styled(View)>
  <Styled(View)>
    <FlatList
      data={
        Array [
          Object {
            "dataLocator": "gymboree-store-option",
            "name": "gymboreeStoreOption",
            "storeLabel": "Gymboree",
          },
          Object {
            "dataLocator": "only-outlet-option",
            "name": "outletOption",
            "storeLabel": "Only Outlet Stores",
          },
        ]
      }
      disableVirtualization={false}
      horizontal={true}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onEndReachedThreshold={2}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      updateCellsBatchingPeriod={50}
      windowSize={21}
    />
  </Styled(View)>
  <Styled(View)>
    <Styled(Anchor)
      accessibilityLabel=""
      anchorVariation="primary"
      customStyle={Object {}}
      fontWeight="regular"
      locator=""
      onPress={null}
      text="View Map"
      underline={true}
      visible={false}
    />
  </Styled(View)>
</Styled(View)>
`;
