// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProfileInformation component should render correctly 1`] = `
<div
  className="elem-pt-LRG undefined"
>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      className="profileInfoCol"
      colSize={
        Object {
          "large": 5,
          "medium": 5,
          "small": 6,
        }
      }
    >
      <Styled(BodyCopy)
        className="elem-mb-MED"
        color="text.primary"
        component="p"
        fontFamily="secondary"
        fontSize="fs16"
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        textAlign="left"
      >
        lbl_prefrence_favorite_store
      </Styled(BodyCopy)>
    </Styled(Col)>
    <Styled(Col)
      className="profileInfoCol"
      colSize={
        Object {
          "large": 7,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Styled(BodyCopy)
        className="elem-mb-MED"
        color="text.primary"
        component="p"
        fontFamily="secondary"
        fontSize="fs16"
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        textAlign="left"
      >
        lbl_prefrence_social_account
      </Styled(BodyCopy)>
      <Connect(SocialContainer)
        labels={Object {}}
      />
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    className="hideOnMobile elem-pt-LRG elem-pb-LRG"
    fullBleed={true}
  >
    <Styled(Col)
      className="profileInfoSeparator"
      colSize={
        Object {
          "large": 12,
        }
      }
    />
  </Styled(Row)>
  <Styled(Row)
    className="elem-pt-LRG"
    fullBleed={true}
  >
    <Styled(Col)
      className="elem-mb-XL"
      colSize={
        Object {
          "large": 5,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Styled(BodyCopy)
        className="elem-mb-MED"
        color="text.primary"
        component="p"
        fontFamily="secondary"
        fontSize="fs16"
        fontWeight="extrabold"
        letterSpacing="normal"
        lineHeight="normal"
        textAlign="left"
      >
        lbl_prefrence_rewards_prefrence
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className={null}
        color="text.primary"
        component="p"
        fontFamily="secondary"
        fontSize="fs16"
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        textAlign="left"
      >
        lbl_prefrence_access_buy_online_pickup
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className={null}
        color="text.primary"
        component="p"
        fontFamily="secondary"
        fontSize="fs16"
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        textAlign="left"
      >
        lbl_prefrence_not_added_fvt_store
      </Styled(BodyCopy)>
    </Styled(Col)>
    <Styled(Col)
      className="profileInfoCol elem-mb-XL"
      colSize={
        Object {
          "large": 7,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <form
        oValidate={true}
      >
        <Styled(Row)
          className="elem-pt-LRG"
          fullBleed={true}
        >
          <Styled(Col)
            className="elem-mb-XL"
            colSize={
              Object {
                "large": 6,
                "medium": 4,
                "small": 6,
              }
            }
            ignoreGutter={
              Object {
                "small": true,
              }
            }
          >
            <Styled(BodyCopy)
              className={null}
              color="text.primary"
              component="span"
              fontFamily="secondary"
              fontSize="fs16"
              fontWeight="extrabold"
              letterSpacing="normal"
              lineHeight="normal"
              textAlign="left"
            >
              lbl_prefrence_app_text
            </Styled(BodyCopy)>
            <Styled(Image)
              class="elm-padding-left"
              height="17"
              src="/static/images/icon-alarm@2x.png"
              width="17"
            />
            <Field
              className="elm-padding-top"
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "rules": Array [
                      "
  ",
                      "
  display: block;
  align-items: ",
                      [Function],
                      ";

  & .CheckBox__input {
    flex: 0 0 auto;
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    height: ",
                      "25px",
                      ";
    width: ",
                      "25px",
                      ";
    margin: 0;
    margin-right: ",
                      [Function],
                      ";
    display: inline-block;
    vertical-align: top;
  }

  & .CheckBox__input:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    border: 1px solid ",
                      [Function],
                      ";
  }

  & .CheckBox__input:checked:before {
    background: ",
                      [Function],
                      ";
    border: 1px solid ",
                      [Function],
                      ";
  }

  & .CheckBox__input:checked:after {
    transform: rotate(225deg);
    content: '';
    border: 2px solid ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      "px;
    width: ",
                      [Function],
                      ";
    height: 10px;
    border-right: 0;
    border-bottom: 0;
    left: 10px;
    top: 5px;
    position: absolute;
  }

  & .CheckBox__text {
    width: calc(100% - 45px);
    display: inline-block;
  }

  & .CheckBox__text a {
    color: ",
                      [Function],
                      ";
  }

  & .disabled {
    opacity: ",
                      [Function],
                      ";
  }

  & .Checkbox__error {
    display: flex;
    flex-direction: row;
    padding-left: ",
                      [Function],
                      ";
  }
  & .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: ",
                      [Function],
                      ";
    width: ",
                      [Function],
                      ";
    margin-right: 4px;
    margin-top: 2px;
  }
",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(InputCheckbox)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              dataLocator="InputCheckbox"
              name="primary"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs14"
                fontWeight="regular"
                letterSpacing="normal"
                lineHeight="normal"
                textAlign="left"
              >
                 
                lbl_prefrence_tcp_label
              </Styled(BodyCopy)>
            </Field>
            <Field
              className="elm-padding-top"
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "rules": Array [
                      "
  ",
                      "
  display: block;
  align-items: ",
                      [Function],
                      ";

  & .CheckBox__input {
    flex: 0 0 auto;
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    height: ",
                      "25px",
                      ";
    width: ",
                      "25px",
                      ";
    margin: 0;
    margin-right: ",
                      [Function],
                      ";
    display: inline-block;
    vertical-align: top;
  }

  & .CheckBox__input:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    border: 1px solid ",
                      [Function],
                      ";
  }

  & .CheckBox__input:checked:before {
    background: ",
                      [Function],
                      ";
    border: 1px solid ",
                      [Function],
                      ";
  }

  & .CheckBox__input:checked:after {
    transform: rotate(225deg);
    content: '';
    border: 2px solid ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      "px;
    width: ",
                      [Function],
                      ";
    height: 10px;
    border-right: 0;
    border-bottom: 0;
    left: 10px;
    top: 5px;
    position: absolute;
  }

  & .CheckBox__text {
    width: calc(100% - 45px);
    display: inline-block;
  }

  & .CheckBox__text a {
    color: ",
                      [Function],
                      ";
  }

  & .disabled {
    opacity: ",
                      [Function],
                      ";
  }

  & .Checkbox__error {
    display: flex;
    flex-direction: row;
    padding-left: ",
                      [Function],
                      ";
  }
  & .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: ",
                      [Function],
                      ";
    width: ",
                      [Function],
                      ";
    margin-right: 4px;
    margin-top: 2px;
  }
",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(InputCheckbox)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              dataLocator="InputCheckbox"
              name="primary"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs14"
                fontWeight="regular"
                letterSpacing="normal"
                lineHeight="normal"
                textAlign="left"
              >
                 
                lbl_prefrence_gym_label
              </Styled(BodyCopy)>
            </Field>
          </Styled(Col)>
          <Styled(Col)
            className="elem-mb-XL"
            colSize={
              Object {
                "large": 6,
                "medium": 4,
                "small": 6,
              }
            }
          >
            <Styled(BodyCopy)
              className={null}
              color="text.primary"
              component="span"
              fontFamily="secondary"
              fontSize="fs14"
              fontWeight="extrabold"
              letterSpacing="normal"
              lineHeight="normal"
              textAlign="left"
            >
              lbl_prefrence_text_text
            </Styled(BodyCopy)>
            <Styled(Image)
              class="elm-padding-left"
              height="17"
              src="/static/images/icon-chat@2x.png"
              width="17"
            />
            <Field
              className="elm-padding-top"
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "rules": Array [
                      "
  ",
                      "
  display: block;
  align-items: ",
                      [Function],
                      ";

  & .CheckBox__input {
    flex: 0 0 auto;
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    height: ",
                      "25px",
                      ";
    width: ",
                      "25px",
                      ";
    margin: 0;
    margin-right: ",
                      [Function],
                      ";
    display: inline-block;
    vertical-align: top;
  }

  & .CheckBox__input:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    border: 1px solid ",
                      [Function],
                      ";
  }

  & .CheckBox__input:checked:before {
    background: ",
                      [Function],
                      ";
    border: 1px solid ",
                      [Function],
                      ";
  }

  & .CheckBox__input:checked:after {
    transform: rotate(225deg);
    content: '';
    border: 2px solid ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      "px;
    width: ",
                      [Function],
                      ";
    height: 10px;
    border-right: 0;
    border-bottom: 0;
    left: 10px;
    top: 5px;
    position: absolute;
  }

  & .CheckBox__text {
    width: calc(100% - 45px);
    display: inline-block;
  }

  & .CheckBox__text a {
    color: ",
                      [Function],
                      ";
  }

  & .disabled {
    opacity: ",
                      [Function],
                      ";
  }

  & .Checkbox__error {
    display: flex;
    flex-direction: row;
    padding-left: ",
                      [Function],
                      ";
  }
  & .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: ",
                      [Function],
                      ";
    width: ",
                      [Function],
                      ";
    margin-right: 4px;
    margin-top: 2px;
  }
",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(InputCheckbox)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              dataLocator="InputCheckbox"
              name="primary"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs14"
                fontWeight="regular"
                letterSpacing="normal"
                lineHeight="normal"
                textAlign="left"
              >
                lbl_prefrence_tcp_label
              </Styled(BodyCopy)>
            </Field>
            <Field
              className="elm-padding-top"
              component={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": Array [],
                  "componentStyle": ComponentStyle {
                    "componentId": "sc-EHOje",
                    "isStatic": false,
                    "rules": Array [
                      "
  ",
                      "
  display: block;
  align-items: ",
                      [Function],
                      ";

  & .CheckBox__input {
    flex: 0 0 auto;
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    height: ",
                      "25px",
                      ";
    width: ",
                      "25px",
                      ";
    margin: 0;
    margin-right: ",
                      [Function],
                      ";
    display: inline-block;
    vertical-align: top;
  }

  & .CheckBox__input:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    border: 1px solid ",
                      [Function],
                      ";
  }

  & .CheckBox__input:checked:before {
    background: ",
                      [Function],
                      ";
    border: 1px solid ",
                      [Function],
                      ";
  }

  & .CheckBox__input:checked:after {
    transform: rotate(225deg);
    content: '';
    border: 2px solid ",
                      [Function],
                      ";
    font-size: ",
                      [Function],
                      "px;
    width: ",
                      [Function],
                      ";
    height: 10px;
    border-right: 0;
    border-bottom: 0;
    left: 10px;
    top: 5px;
    position: absolute;
  }

  & .CheckBox__text {
    width: calc(100% - 45px);
    display: inline-block;
  }

  & .CheckBox__text a {
    color: ",
                      [Function],
                      ";
  }

  & .disabled {
    opacity: ",
                      [Function],
                      ";
  }

  & .Checkbox__error {
    display: flex;
    flex-direction: row;
    padding-left: ",
                      [Function],
                      ";
  }
  & .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: ",
                      [Function],
                      ";
    width: ",
                      [Function],
                      ";
    margin-right: 4px;
    margin-top: 2px;
  }
",
                      ";
",
                    ],
                  },
                  "displayName": "Styled(InputCheckbox)",
                  "foldedComponentIds": Array [],
                  "render": [Function],
                  "styledComponentId": "sc-EHOje",
                  "target": [Function],
                  "toString": [Function],
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              dataLocator="InputCheckbox"
              name="primary"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs14"
                fontWeight="regular"
                letterSpacing="normal"
                lineHeight="normal"
                textAlign="left"
              >
                lbl_prefrence_gym_label
              </Styled(BodyCopy)>
            </Field>
          </Styled(Col)>
        </Styled(Row)>
      </form>
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    className="elem-pt-LRG"
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 12,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Styled(BodyCopy)
        className={null}
        color="text.primary"
        component="p"
        fontFamily="primary"
        fontSize={12}
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        textAlign="center"
      >
        <Styled(Anchor)
          anchorVariation="primary"
          className="favtPageLink"
          fontSizeVariation="large"
          target="_blank"
          underline={true}
          url="learn_more_link"
        >
          lbl_prefrence_program_details
        </Styled(Anchor)>
        <Styled(Anchor)
          anchorVariation="primary"
          className="favtPageLink"
          fontSizeVariation="large"
          target="_blank"
          underline={true}
          url="learn_more_link"
        >
          lbl_prefrence_term_codition
        </Styled(Anchor)>
      </Styled(BodyCopy)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;
