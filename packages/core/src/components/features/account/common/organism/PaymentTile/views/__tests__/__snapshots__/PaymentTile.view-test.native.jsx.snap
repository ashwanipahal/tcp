// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PaymentTile component should render correctly 1`] = `
<Styled(View)>
  <Styled(BodyCopy)
    accessibilityText=""
    color="black"
    dataLocator=""
    fontFamily="secondary"
    fontSize="fs16"
    margin={null}
    numberOfLines={null}
    textDecoration={null}
  />
  <Styled(View) />
  <ReduxForm
    destroyOnUnmount={true}
    enableReinitialize={true}
    forceUnregisterOnUnmount={false}
    form="PaymentItemForm"
    getFormState={[Function]}
    handleComponentChange={[MockFunction]}
    isGiftCard={false}
    keepDirtyOnReinitialize={false}
    labels={Object {}}
    paymentInfo={
      Object {
        "icon": "",
        "subText": "",
        "text": undefined,
        "title": undefined,
        "variation": undefined,
      }
    }
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldError={[Function]}
    shouldValidate={[Function]}
    shouldWarn={[Function]}
    submitAsSideEffect={false}
    touchOnBlur={true}
    touchOnChange={false}
    updateUnregisteredFields={false}
    validate={[Function]}
  />
  <Styled(View) />
  <ReduxForm
    card={null}
    destroyOnUnmount={true}
    enableReinitialize={true}
    forceUnregisterOnUnmount={false}
    form="PaymentItemForm"
    getFormState={[Function]}
    handleComponentChange={[MockFunction]}
    isGiftCard={true}
    keepDirtyOnReinitialize={false}
    labels={Object {}}
    paymentInfo={
      Object {
        "icon": "",
        "subText": "",
        "text": undefined,
        "title": undefined,
        "variation": undefined,
      }
    }
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldError={[Function]}
    shouldValidate={[Function]}
    shouldWarn={[Function]}
    submitAsSideEffect={false}
    touchOnBlur={true}
    touchOnChange={false}
    updateUnregisteredFields={false}
    validate={[Function]}
  />
  <Styled(View)>
    <Styled(WithTheme(CustomButton))
      buttonVariation="variable-width"
      fill="BLUE"
      onPress={[Function]}
    />
  </Styled(View)>
</Styled(View)>
`;
