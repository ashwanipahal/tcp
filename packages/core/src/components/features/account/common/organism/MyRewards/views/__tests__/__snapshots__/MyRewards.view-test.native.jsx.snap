// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MyRewards should render carousel if coupons are avalable 1`] = `
<View>
  <CouponDetailModal
    commonLabels={Object {}}
    coupon={Object {}}
    isApplyingOrRemovingCoupon={false}
    labels={Object {}}
    onApplyCouponToBagFromList={[Function]}
    onRemove={[Function]}
    onViewCouponDetails={[Function]}
    openState={true}
    toastMessage={[Function]}
  />
  <Styled(View)
    spacingStyles="margin-bottom-LRG margin-top-LRG"
  >
    <Styled(View)>
      <Styled(BodyCopy)
        accessibilityText=""
        className="my-rewards-heading"
        data-locator="my-rewards-heading"
        dataLocator=""
        fontFamily="secondary"
        fontSize="fs16"
        fontWeight="extrabold"
        margin={null}
        numberOfLines={null}
        text="lbl_my_rewards_heading (2)"
        textDecoration={null}
      />
    </Styled(View)>
  </Styled(View)>
  <View>
    <Connect(WithTheme(SnapCarousel))
      autoplay={false}
      darkArrow={true}
      data={
        Array [
          Immutable.Map {
            "id": "1234",
          },
          Immutable.Map {
            "id": "4321",
          },
        ]
      }
      height={220}
      renderItem={[Function]}
      showDots={true}
      variation="show-arrow"
      width={730}
    />
  </View>
</View>
`;

exports[`MyRewards should render correctly 1`] = `
<View>
  <CouponDetailModal
    commonLabels={Object {}}
    coupon={Object {}}
    isApplyingOrRemovingCoupon={false}
    labels={Object {}}
    onApplyCouponToBagFromList={[Function]}
    onRemove={[Function]}
    onViewCouponDetails={[Function]}
    openState={true}
    toastMessage={[Function]}
  />
  <Styled(View)
    spacingStyles="margin-bottom-LRG margin-top-LRG"
  >
    <Styled(View)>
      <Styled(BodyCopy)
        accessibilityText=""
        className="my-rewards-heading"
        data-locator="my-rewards-heading"
        dataLocator=""
        fontFamily="secondary"
        fontSize="fs16"
        fontWeight="extrabold"
        margin={null}
        numberOfLines={null}
        text="lbl_my_rewards_heading (0)"
        textDecoration={null}
      />
    </Styled(View)>
  </Styled(View)>
  <EmptyRewards
    labels={
      Object {
        "common": Object {},
        "placeRewards": Object {},
      }
    }
    navigation={Object {}}
  />
</View>
`;
