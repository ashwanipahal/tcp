// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MyRewards should render carousel if coupons are avalable 1`] = `
<View>
  <Styled(View)>
    <Styled(BodyCopy)
      className="my-rewards-heading"
      data-locator="my-rewards-heading"
      fontFamily="secondary"
      fontSize="fs16"
      fontWeight="extrabold"
      text="undefined (2)"
    />
  </Styled(View)>
  <View>
    <WithTheme(SnapCarousel)
      autoplay={false}
      darkArrow={true}
      data={
        Array [
          Immutable.Map {
            "id": "1234",
          },
          Immutable.Map {
            "id": "4321",
          },
        ]
      }
      height={220}
      renderItem={[Function]}
      showDots={true}
      variation="show-arrow"
      width={720}
    />
  </View>
  <Styled(View)>
    <Styled(Anchor)
      anchorVariation="primary"
      customStyle={Object {}}
      dataLocator="my-rewards-program-details"
      fontSizeVariation="medium"
      locator=""
      onPress={[Function]}
      text=""
      underline={true}
      visible={false}
    />
    <Styled(View)>
      <Styled(Anchor)
        anchorVariation="primary"
        customStyle={Object {}}
        dataLocator="my-rewards-tnc"
        fontSizeVariation="medium"
        locator=""
        noLink={true}
        onPress={[Function]}
        text=""
        underline={true}
        visible={false}
      />
    </Styled(View)>
  </Styled(View)>
</View>
`;

exports[`MyRewards should render correctly 1`] = `
<View>
  <Styled(View)>
    <Styled(BodyCopy)
      className="my-rewards-heading"
      data-locator="my-rewards-heading"
      fontFamily="secondary"
      fontSize="fs16"
      fontWeight="extrabold"
      text="undefined (0)"
    />
  </Styled(View)>
  <EmptyRewards
    labels={
      Object {
        "common": Object {},
        "myPlaceRewards": Object {},
      }
    }
  />
  <Styled(View)>
    <Styled(Anchor)
      accessibilityLabel=""
      anchorVariation="primary"
      customStyle={Object {}}
      dataLocator="my-rewards-program-details"
      fontSizeVariation="medium"
      locator=""
      onPress={[Function]}
      text=""
      underline={true}
      visible={false}
    />
    <Styled(View)>
      <Styled(Anchor)
        accessibilityLabel=""
        anchorVariation="primary"
        customStyle={Object {}}
        dataLocator="my-rewards-tnc"
        fontSizeVariation="medium"
        locator=""
        noLink={true}
        onPress={[Function]}
        text=""
        underline={true}
        visible={false}
      />
    </Styled(View)>
  </Styled(View)>
</View>
`;
