// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddChildBirthday component should renders correctly 1`] = `
<Fragment>
  <Styled(View)>
    <Styled(Styled(BodyCopy))
      accessibilityText=""
      dataLocator=""
      fontFamily="secondary"
      fontSize="fs16"
      fontWeight="regular"
      margin={null}
      numberOfLines={null}
      spacingStyles="margin-top-LRG margin-left-LRG margin-bottom-LRG"
      text="lbl_add_child_child_information"
      textDecoration={null}
    />
    <Styled(View)
      spacingStyles="margin-left-LRG margin-right-LRG"
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "_foldedDefaultProps": Object {
              "ariaLabel": "input",
              "autoCapitalize": "sentences",
              "dataLocator": "input-field",
              "enableSuccessCheck": false,
              "id": "input",
              "keyboardType": "default",
              "label": "input",
              "marginBottom": true,
              "meta": Object {
                "error": "",
                "touched": "",
              },
              "onChangeText": [Function],
              "secureTextEntry": false,
              "showErrorIcon": true,
              "showSuccessCheck": false,
              "successText": "",
              "type": "text",
            },
            "attrs": Array [],
            "displayName": "Styled(TextBox)",
            "inlineStyle": InlineStyle {
              "rules": Array [
                "
    ",
                "
  ",
                [Function],
                ";
",
                ";
  ",
              ],
            },
            "render": [Function],
            "styledComponentId": "StyledNativeComponent",
            "target": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="childNameField"
        id="childName"
        label="lbl_add_child_child_name"
        name="childName"
      />
    </Styled(View)>
    <Styled(Styled(BodyCopy))
      accessibilityText=""
      color="gray.900"
      dataLocator=""
      fontFamily="secondary"
      fontSize="fs10"
      fontWeight="black"
      margin={null}
      numberOfLines={null}
      spacingStyles="margin-left-LRG margin-right-LRG margin-top-LRG"
      text="lbl_add_child_birthday_heading"
      textDecoration={null}
    />
    <Styled(View)>
      <Styled(View)>
        <Field
          component={[Function]}
          name="childBirthMonth"
          options={Array []}
          placeholder="lbl_add_child_birthday_month"
        />
      </Styled(View)>
      <Styled(View)>
        <Field
          component={[Function]}
          name="childBirthYear"
          options={Array []}
          placeholder="lbl_add_child_birthday_year"
        />
      </Styled(View)>
    </Styled(View)>
    <Styled(Styled(BodyCopy))
      accessibilityText=""
      color="gray.900"
      dataLocator=""
      fontFamily="secondary"
      fontSize="fs10"
      fontWeight="black"
      margin={null}
      numberOfLines={null}
      spacingStyles="margin-left-LRG margin-right-LRG margin-top-LRG"
      text="lbl_add_child_gender_heading"
      textDecoration={null}
    />
    <Styled(View)>
      <Styled(View)>
        <Field
          component={[Function]}
          name="gender"
          options={Array []}
          placeholder="lbl_add_child_gender_heading"
        />
      </Styled(View)>
    </Styled(View)>
    <Styled(Styled(BodyCopy))
      accessibilityText=""
      dataLocator=""
      fontFamily="secondary"
      fontSize="fs16"
      fontWeight="regular"
      margin={null}
      numberOfLines={null}
      spacingStyles="margin-top-LRG margin-left-LRG margin-bottom-LRG"
      text="lbl_add_child_parent_digital_signature"
      textDecoration={null}
    />
    <Styled(View)>
      <Styled(View)>
        <Field
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "ariaLabel": "input",
                "autoCapitalize": "sentences",
                "dataLocator": "input-field",
                "enableSuccessCheck": false,
                "id": "input",
                "keyboardType": "default",
                "label": "input",
                "marginBottom": true,
                "meta": Object {
                  "error": "",
                  "touched": "",
                },
                "onChangeText": [Function],
                "secureTextEntry": false,
                "showErrorIcon": true,
                "showSuccessCheck": false,
                "successText": "",
                "type": "text",
              },
              "attrs": Array [],
              "displayName": "Styled(TextBox)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
    ",
                  "
  ",
                  [Function],
                  ";
",
                  ";
  ",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": [Function],
              "withComponent": [Function],
            }
          }
          dataLocator="firstNameField"
          id="firstName"
          label="lbl_add_child_first_name"
          name="firstName"
        />
      </Styled(View)>
      <Styled(View)>
        <Field
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "ariaLabel": "input",
                "autoCapitalize": "sentences",
                "dataLocator": "input-field",
                "enableSuccessCheck": false,
                "id": "input",
                "keyboardType": "default",
                "label": "input",
                "marginBottom": true,
                "meta": Object {
                  "error": "",
                  "touched": "",
                },
                "onChangeText": [Function],
                "secureTextEntry": false,
                "showErrorIcon": true,
                "showSuccessCheck": false,
                "successText": "",
                "type": "text",
              },
              "attrs": Array [],
              "displayName": "Styled(TextBox)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
    ",
                  "
  ",
                  [Function],
                  ";
",
                  ";
  ",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": [Function],
              "withComponent": [Function],
            }
          }
          dataLocator="lastNameField"
          id="lastName"
          label="lbl_add_child_last_name"
          name="lastName"
        />
      </Styled(View)>
    </Styled(View)>
    <Styled(Styled(BodyCopy))
      accessibilityText=""
      dataLocator=""
      fontFamily="secondary"
      fontSize="fs14"
      fontWeight="regular"
      margin={null}
      numberOfLines={null}
      spacingStyles="margin-right-LRG margin-left-LRG"
      text="lbl_add_child_timestamp "
      textDecoration={null}
    />
    <Styled(View)>
      <Field
        component={[Function]}
        dataLocator="tnccb"
        id="acceptAddChildAgreement"
        name="acceptAddChildAgreement"
        rightText="lbl_add_child_terms_agreementlbl_add_child_terms_agreement_second"
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(Anchor)
        accessibilityLabel=""
        anchorVariation="primary"
        colorName={null}
        customStyle={Object {}}
        data-locator="privacyLnk"
        fontSizeVariation="medium"
        justifyContent=""
        locator=""
        margins={null}
        onPress={[Function]}
        text="lbl_add_child_privacy"
        underline={true}
        visible={false}
      />
      <Styled(Anchor)
        accessibilityLabel=""
        anchorVariation="primary"
        colorName={null}
        customStyle={Object {}}
        data-locator="faqLnk"
        fontSizeVariation="medium"
        justifyContent=""
        locator=""
        margins={null}
        noLink={true}
        onPress={[Function]}
        text="lbl_add_child_faq"
        underline={true}
        visible={false}
      />
    </Styled(View)>
  </Styled(View)>
  <Styled(View)
    spacingStyles="margin-top-XXL"
  >
    <Styled(CustomButton)
      active={false}
      buttonVariation="fixed-width"
      color="white"
      customStyle={Object {}}
      customTextStyle={null}
      disableButton={false}
      fill="BLUE"
      fullWidth=""
      iconColor="gray.800"
      iconName="chevron-down"
      iconSize="fs12"
      locator=""
      navigation={Object {}}
      onPress={[MockFunction]}
      paddings="12px 32px 12px 32px"
      selected={false}
      selectedIcon="chevron-up"
      showIcon={false}
      text="lbl_add_child_save"
      theme={Object {}}
      type="submit"
      url=""
      withNoLineHeight={false}
    />
  </Styled(View)>
  <Styled(View)
    spacingStyles="margin-top-MED margin-bottom-XL"
  >
    <Styled(CustomButton)
      active={false}
      buttonVariation="fixed-width"
      color=""
      customStyle={Object {}}
      customTextStyle={null}
      disableButton={false}
      fill="WHITE"
      fullWidth=""
      iconColor="gray.800"
      iconName="chevron-down"
      iconSize="fs12"
      locator=""
      navigation={Object {}}
      onPress={[MockFunction]}
      paddings="12px 32px 12px 32px"
      selected={false}
      selectedIcon="chevron-up"
      showIcon={false}
      text="lbl_add_child_cancel"
      theme={Object {}}
      url=""
      withNoLineHeight={false}
    />
  </Styled(View)>
</Fragment>
`;
