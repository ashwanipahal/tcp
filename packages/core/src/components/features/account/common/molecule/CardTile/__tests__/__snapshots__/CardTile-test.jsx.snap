// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardTile should render correctly with amex card 1`] = `
<StyledComponent
  card={
    Object {
      "accountNo": "************6765",
      "addressDetails": Object {
        "addressLine1": "Yucca Street",
        "addressLine2": "",
        "city": "Los Angeles",
        "country": "US",
        "firstName": "six",
        "lastName": "test",
        "phone1": "3214567890",
        "state": "CA",
        "zipCode": "90028",
      },
      "billingAddressId": 75446663,
      "ccBrand": "Amex",
      "ccType": "COMPASSAMEX",
      "creditCardId": 8977328,
      "defaultInd": true,
      "expMonth": "10",
      "expYear": "2025",
      "nameOnAccount": ".",
      "properties": null,
    }
  }
  destroyOnUnmount={true}
  enableReinitialize={true}
  forceUnregisterOnUnmount={false}
  form="CardTile"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-dnqmqq",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  border: 1px solid ",
          [Function],
          ";
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: ",
          [Function],
          "
    ",
          [Function],
          ";

  .recaptcha {
    webkit-transform: scale(0.7);
    transform: scale(0.7);
    position: relative;
    left: -45px;
  }
  & .giftcardTile__wrapper {
    display: flex;
    align-items: flex-end;
  }
  & form {
    width: 90%;
  }
  & .input-fields-wrapper {
    height: auto;
  }
  & .TextBox__error {
    padding-bottom: 10px;
  }

  & .TextBox__label {
    display: none;
    height: 100%;
    min-height: ",
          [Function],
          ";
    padding: ",
          [Function],
          "
      ",
          [Function],
          ";
    @media ",
          [Function],
          " {
      padding: ",
          [Function],
          "
        ",
          [Function],
          ";
    }
  }
  & .cardTile {
    display: flex;
    justify-content: space-between;
  }
  & .cardTile__heading {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__number {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__expiry {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__defaultSection {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
  }
  & .cardTile__img_wrapper {
    width: 90px;
    height: 56px;
    margin-bottom: auto;
    margin-top: ",
          [Function],
          ";
  }
  .cardTile__img {
    width: 100%;
  }
  .cardTile__ctaLinks {
    display: flex;
    margin-top: 35px;
    float: right;
  }
  .cardTile__anchor {
    margin-right: ",
          [Function],
          ";
  }
",
          ";
",
        ],
      },
      "defaultProps": Object {
        "destroyOnUnmount": true,
        "enableReinitialize": true,
        "forceUnregisterOnUnmount": false,
        "form": "CardTile",
        "getFormState": [Function],
        "keepDirtyOnReinitialize": false,
        "persistentSubmitErrors": false,
        "pure": true,
        "shouldAsyncValidate": [Function],
        "shouldError": [Function],
        "shouldValidate": [Function],
        "shouldWarn": [Function],
        "submitAsSideEffect": false,
        "touchOnBlur": true,
        "touchOnChange": false,
        "updateUnregisteredFields": false,
        "validate": [Function],
      },
      "displayName": "Styled(ReduxForm)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-dnqmqq",
      "target": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "destroyOnUnmount": true,
          "enableReinitialize": true,
          "forceUnregisterOnUnmount": false,
          "form": "CardTile",
          "getFormState": [Function],
          "keepDirtyOnReinitialize": false,
          "persistentSubmitErrors": false,
          "pure": true,
          "shouldAsyncValidate": [Function],
          "shouldError": [Function],
          "shouldValidate": [Function],
          "shouldWarn": [Function],
          "submitAsSideEffect": false,
          "touchOnBlur": true,
          "touchOnChange": false,
          "updateUnregisteredFields": false,
          "validate": [Function],
        },
        "displayName": "ReduxForm",
        "render": [Function],
      },
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  getFormState={[Function]}
  keepDirtyOnReinitialize={false}
  labels={
    Object {
      "CHECK_BALANCE": "@@payment-CHECK_BALANCE",
      "CREDIT_CARDS_PAYMETHODID": Object {
        "AMEX": "COMPASSAMEX",
        "DISC": "COMPASSDISCOVER",
        "MC": "COMPASSMASTERCARD",
        "PLACE CARD": "ADSPlaceCard",
        "VENMO": "VENMO",
        "VISA": "COMPASSVISA",
      },
      "DELETE_CARD": "@@payment-DELETE_CARD",
      "DELETE_MODAL_MOUNT_STATE": "@@payment-DELETE_MODAL_MOUNT_STATE",
      "GET_CARD_LIST": "@@payment-GET_CARD_DETAILS",
      "GET_CARD_LIST_ERR": "@@payment-GET_CARD_DETAILS_ERROR",
      "SET_CARD_LIST": "@@payment-SET_CARD_DETAILS",
      "SET_CHECK_BALANCE": "@@payment-SET_CHECK_BALANCE",
      "SET_DEFAULT_PAYMENT": "@@payment-SET_DEFAULT_PAYMENT",
      "SET_DEFAULT_PAYMENT_ERROR": "@@payment-SET_DEFAULT_PAYMENT_ERROR",
      "SET_DEFAULT_PAYMENT_SUCCESS": "@@payment-SET_DEFAULT_PAYMENT_SUCCESS",
      "SET_LOADER": "@@payment-SET_LOADER",
      "UPDATE_CARD_LIST_ON_DELETE": "@@payment-UPDATE_CARD_LIST_ON_DELETE",
      "UPDATE_CARD_LIST_ON_DELETE_ERR": "@@payment-UPDATE_CARD_LIST_ON_DELETE_ERR",
    }
  }
  persistentSubmitErrors={false}
  pure={true}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  submitAsSideEffect={false}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
  validate={[Function]}
/>
`;

exports[`CardTile should render correctly with discover card 1`] = `
<StyledComponent
  card={
    Object {
      "accountNo": "************6765",
      "addressDetails": Object {
        "addressLine1": "Yucca Street",
        "addressLine2": "",
        "city": "Los Angeles",
        "country": "US",
        "firstName": "six",
        "lastName": "test",
        "phone1": "3214567890",
        "state": "CA",
        "zipCode": "90028",
      },
      "billingAddressId": 75446663,
      "ccBrand": "DISC",
      "ccType": "COMPASSDISCOVER",
      "creditCardId": 8977328,
      "defaultInd": false,
      "expMonth": "10",
      "expYear": "2025",
      "nameOnAccount": ".",
      "properties": null,
    }
  }
  destroyOnUnmount={true}
  enableReinitialize={true}
  forceUnregisterOnUnmount={false}
  form="CardTile"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-dnqmqq",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  border: 1px solid ",
          [Function],
          ";
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: ",
          [Function],
          "
    ",
          [Function],
          ";

  .recaptcha {
    webkit-transform: scale(0.7);
    transform: scale(0.7);
    position: relative;
    left: -45px;
  }
  & .giftcardTile__wrapper {
    display: flex;
    align-items: flex-end;
  }
  & form {
    width: 90%;
  }
  & .input-fields-wrapper {
    height: auto;
  }
  & .TextBox__error {
    padding-bottom: 10px;
  }

  & .TextBox__label {
    display: none;
    height: 100%;
    min-height: ",
          [Function],
          ";
    padding: ",
          [Function],
          "
      ",
          [Function],
          ";
    @media ",
          [Function],
          " {
      padding: ",
          [Function],
          "
        ",
          [Function],
          ";
    }
  }
  & .cardTile {
    display: flex;
    justify-content: space-between;
  }
  & .cardTile__heading {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__number {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__expiry {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__defaultSection {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
  }
  & .cardTile__img_wrapper {
    width: 90px;
    height: 56px;
    margin-bottom: auto;
    margin-top: ",
          [Function],
          ";
  }
  .cardTile__img {
    width: 100%;
  }
  .cardTile__ctaLinks {
    display: flex;
    margin-top: 35px;
    float: right;
  }
  .cardTile__anchor {
    margin-right: ",
          [Function],
          ";
  }
",
          ";
",
        ],
      },
      "defaultProps": Object {
        "destroyOnUnmount": true,
        "enableReinitialize": true,
        "forceUnregisterOnUnmount": false,
        "form": "CardTile",
        "getFormState": [Function],
        "keepDirtyOnReinitialize": false,
        "persistentSubmitErrors": false,
        "pure": true,
        "shouldAsyncValidate": [Function],
        "shouldError": [Function],
        "shouldValidate": [Function],
        "shouldWarn": [Function],
        "submitAsSideEffect": false,
        "touchOnBlur": true,
        "touchOnChange": false,
        "updateUnregisteredFields": false,
        "validate": [Function],
      },
      "displayName": "Styled(ReduxForm)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-dnqmqq",
      "target": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "destroyOnUnmount": true,
          "enableReinitialize": true,
          "forceUnregisterOnUnmount": false,
          "form": "CardTile",
          "getFormState": [Function],
          "keepDirtyOnReinitialize": false,
          "persistentSubmitErrors": false,
          "pure": true,
          "shouldAsyncValidate": [Function],
          "shouldError": [Function],
          "shouldValidate": [Function],
          "shouldWarn": [Function],
          "submitAsSideEffect": false,
          "touchOnBlur": true,
          "touchOnChange": false,
          "updateUnregisteredFields": false,
          "validate": [Function],
        },
        "displayName": "ReduxForm",
        "render": [Function],
      },
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  getFormState={[Function]}
  keepDirtyOnReinitialize={false}
  labels={
    Object {
      "CHECK_BALANCE": "@@payment-CHECK_BALANCE",
      "CREDIT_CARDS_PAYMETHODID": Object {
        "AMEX": "COMPASSAMEX",
        "DISC": "COMPASSDISCOVER",
        "MC": "COMPASSMASTERCARD",
        "PLACE CARD": "ADSPlaceCard",
        "VENMO": "VENMO",
        "VISA": "COMPASSVISA",
      },
      "DELETE_CARD": "@@payment-DELETE_CARD",
      "DELETE_MODAL_MOUNT_STATE": "@@payment-DELETE_MODAL_MOUNT_STATE",
      "GET_CARD_LIST": "@@payment-GET_CARD_DETAILS",
      "GET_CARD_LIST_ERR": "@@payment-GET_CARD_DETAILS_ERROR",
      "SET_CARD_LIST": "@@payment-SET_CARD_DETAILS",
      "SET_CHECK_BALANCE": "@@payment-SET_CHECK_BALANCE",
      "SET_DEFAULT_PAYMENT": "@@payment-SET_DEFAULT_PAYMENT",
      "SET_DEFAULT_PAYMENT_ERROR": "@@payment-SET_DEFAULT_PAYMENT_ERROR",
      "SET_DEFAULT_PAYMENT_SUCCESS": "@@payment-SET_DEFAULT_PAYMENT_SUCCESS",
      "SET_LOADER": "@@payment-SET_LOADER",
      "UPDATE_CARD_LIST_ON_DELETE": "@@payment-UPDATE_CARD_LIST_ON_DELETE",
      "UPDATE_CARD_LIST_ON_DELETE_ERR": "@@payment-UPDATE_CARD_LIST_ON_DELETE_ERR",
    }
  }
  persistentSubmitErrors={false}
  pure={true}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  submitAsSideEffect={false}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
  validate={[Function]}
/>
`;

exports[`CardTile should render correctly with gift card 1`] = `
<StyledComponent
  card={
    Object {
      "accountNo": "************6765",
      "addressDetails": Object {
        "addressLine1": "Yucca Street",
        "addressLine2": "",
        "city": "Los Angeles",
        "country": "US",
        "firstName": "six",
        "lastName": "test",
        "phone1": "3214567890",
        "state": "CA",
        "zipCode": "90028",
      },
      "billingAddressId": 75446663,
      "ccBrand": "GC",
      "ccType": "GiftCard",
      "creditCardId": 8977328,
      "defaultInd": false,
      "expMonth": "10",
      "expYear": "2025",
      "nameOnAccount": ".",
      "properties": null,
    }
  }
  destroyOnUnmount={true}
  enableReinitialize={true}
  forceUnregisterOnUnmount={false}
  form="CardTile"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-dnqmqq",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  border: 1px solid ",
          [Function],
          ";
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: ",
          [Function],
          "
    ",
          [Function],
          ";

  .recaptcha {
    webkit-transform: scale(0.7);
    transform: scale(0.7);
    position: relative;
    left: -45px;
  }
  & .giftcardTile__wrapper {
    display: flex;
    align-items: flex-end;
  }
  & form {
    width: 90%;
  }
  & .input-fields-wrapper {
    height: auto;
  }
  & .TextBox__error {
    padding-bottom: 10px;
  }

  & .TextBox__label {
    display: none;
    height: 100%;
    min-height: ",
          [Function],
          ";
    padding: ",
          [Function],
          "
      ",
          [Function],
          ";
    @media ",
          [Function],
          " {
      padding: ",
          [Function],
          "
        ",
          [Function],
          ";
    }
  }
  & .cardTile {
    display: flex;
    justify-content: space-between;
  }
  & .cardTile__heading {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__number {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__expiry {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__defaultSection {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
  }
  & .cardTile__img_wrapper {
    width: 90px;
    height: 56px;
    margin-bottom: auto;
    margin-top: ",
          [Function],
          ";
  }
  .cardTile__img {
    width: 100%;
  }
  .cardTile__ctaLinks {
    display: flex;
    margin-top: 35px;
    float: right;
  }
  .cardTile__anchor {
    margin-right: ",
          [Function],
          ";
  }
",
          ";
",
        ],
      },
      "defaultProps": Object {
        "destroyOnUnmount": true,
        "enableReinitialize": true,
        "forceUnregisterOnUnmount": false,
        "form": "CardTile",
        "getFormState": [Function],
        "keepDirtyOnReinitialize": false,
        "persistentSubmitErrors": false,
        "pure": true,
        "shouldAsyncValidate": [Function],
        "shouldError": [Function],
        "shouldValidate": [Function],
        "shouldWarn": [Function],
        "submitAsSideEffect": false,
        "touchOnBlur": true,
        "touchOnChange": false,
        "updateUnregisteredFields": false,
        "validate": [Function],
      },
      "displayName": "Styled(ReduxForm)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-dnqmqq",
      "target": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "destroyOnUnmount": true,
          "enableReinitialize": true,
          "forceUnregisterOnUnmount": false,
          "form": "CardTile",
          "getFormState": [Function],
          "keepDirtyOnReinitialize": false,
          "persistentSubmitErrors": false,
          "pure": true,
          "shouldAsyncValidate": [Function],
          "shouldError": [Function],
          "shouldValidate": [Function],
          "shouldWarn": [Function],
          "submitAsSideEffect": false,
          "touchOnBlur": true,
          "touchOnChange": false,
          "updateUnregisteredFields": false,
          "validate": [Function],
        },
        "displayName": "ReduxForm",
        "render": [Function],
      },
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  getFormState={[Function]}
  keepDirtyOnReinitialize={false}
  labels={
    Object {
      "CHECK_BALANCE": "@@payment-CHECK_BALANCE",
      "CREDIT_CARDS_PAYMETHODID": Object {
        "AMEX": "COMPASSAMEX",
        "DISC": "COMPASSDISCOVER",
        "MC": "COMPASSMASTERCARD",
        "PLACE CARD": "ADSPlaceCard",
        "VENMO": "VENMO",
        "VISA": "COMPASSVISA",
      },
      "DELETE_CARD": "@@payment-DELETE_CARD",
      "DELETE_MODAL_MOUNT_STATE": "@@payment-DELETE_MODAL_MOUNT_STATE",
      "GET_CARD_LIST": "@@payment-GET_CARD_DETAILS",
      "GET_CARD_LIST_ERR": "@@payment-GET_CARD_DETAILS_ERROR",
      "SET_CARD_LIST": "@@payment-SET_CARD_DETAILS",
      "SET_CHECK_BALANCE": "@@payment-SET_CHECK_BALANCE",
      "SET_DEFAULT_PAYMENT": "@@payment-SET_DEFAULT_PAYMENT",
      "SET_DEFAULT_PAYMENT_ERROR": "@@payment-SET_DEFAULT_PAYMENT_ERROR",
      "SET_DEFAULT_PAYMENT_SUCCESS": "@@payment-SET_DEFAULT_PAYMENT_SUCCESS",
      "SET_LOADER": "@@payment-SET_LOADER",
      "UPDATE_CARD_LIST_ON_DELETE": "@@payment-UPDATE_CARD_LIST_ON_DELETE",
      "UPDATE_CARD_LIST_ON_DELETE_ERR": "@@payment-UPDATE_CARD_LIST_ON_DELETE_ERR",
    }
  }
  persistentSubmitErrors={false}
  pure={true}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  submitAsSideEffect={false}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
  validate={[Function]}
/>
`;

exports[`CardTile should render correctly with master card 1`] = `
<StyledComponent
  card={
    Object {
      "accountNo": "************6765",
      "addressDetails": Object {
        "addressLine1": "Yucca Street",
        "addressLine2": "",
        "city": "Los Angeles",
        "country": "US",
        "firstName": "six",
        "lastName": "test",
        "phone1": "3214567890",
        "state": "CA",
        "zipCode": "90028",
      },
      "billingAddressId": 75446663,
      "ccBrand": "MC",
      "ccType": "COMPASSMASTERCARD",
      "creditCardId": 8977328,
      "defaultInd": false,
      "expMonth": "10",
      "expYear": "2025",
      "nameOnAccount": ".",
      "properties": null,
    }
  }
  destroyOnUnmount={true}
  enableReinitialize={true}
  forceUnregisterOnUnmount={false}
  form="CardTile"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-dnqmqq",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  border: 1px solid ",
          [Function],
          ";
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: ",
          [Function],
          "
    ",
          [Function],
          ";

  .recaptcha {
    webkit-transform: scale(0.7);
    transform: scale(0.7);
    position: relative;
    left: -45px;
  }
  & .giftcardTile__wrapper {
    display: flex;
    align-items: flex-end;
  }
  & form {
    width: 90%;
  }
  & .input-fields-wrapper {
    height: auto;
  }
  & .TextBox__error {
    padding-bottom: 10px;
  }

  & .TextBox__label {
    display: none;
    height: 100%;
    min-height: ",
          [Function],
          ";
    padding: ",
          [Function],
          "
      ",
          [Function],
          ";
    @media ",
          [Function],
          " {
      padding: ",
          [Function],
          "
        ",
          [Function],
          ";
    }
  }
  & .cardTile {
    display: flex;
    justify-content: space-between;
  }
  & .cardTile__heading {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__number {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__expiry {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__defaultSection {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
  }
  & .cardTile__img_wrapper {
    width: 90px;
    height: 56px;
    margin-bottom: auto;
    margin-top: ",
          [Function],
          ";
  }
  .cardTile__img {
    width: 100%;
  }
  .cardTile__ctaLinks {
    display: flex;
    margin-top: 35px;
    float: right;
  }
  .cardTile__anchor {
    margin-right: ",
          [Function],
          ";
  }
",
          ";
",
        ],
      },
      "defaultProps": Object {
        "destroyOnUnmount": true,
        "enableReinitialize": true,
        "forceUnregisterOnUnmount": false,
        "form": "CardTile",
        "getFormState": [Function],
        "keepDirtyOnReinitialize": false,
        "persistentSubmitErrors": false,
        "pure": true,
        "shouldAsyncValidate": [Function],
        "shouldError": [Function],
        "shouldValidate": [Function],
        "shouldWarn": [Function],
        "submitAsSideEffect": false,
        "touchOnBlur": true,
        "touchOnChange": false,
        "updateUnregisteredFields": false,
        "validate": [Function],
      },
      "displayName": "Styled(ReduxForm)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-dnqmqq",
      "target": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "destroyOnUnmount": true,
          "enableReinitialize": true,
          "forceUnregisterOnUnmount": false,
          "form": "CardTile",
          "getFormState": [Function],
          "keepDirtyOnReinitialize": false,
          "persistentSubmitErrors": false,
          "pure": true,
          "shouldAsyncValidate": [Function],
          "shouldError": [Function],
          "shouldValidate": [Function],
          "shouldWarn": [Function],
          "submitAsSideEffect": false,
          "touchOnBlur": true,
          "touchOnChange": false,
          "updateUnregisteredFields": false,
          "validate": [Function],
        },
        "displayName": "ReduxForm",
        "render": [Function],
      },
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  getFormState={[Function]}
  keepDirtyOnReinitialize={false}
  labels={
    Object {
      "CHECK_BALANCE": "@@payment-CHECK_BALANCE",
      "CREDIT_CARDS_PAYMETHODID": Object {
        "AMEX": "COMPASSAMEX",
        "DISC": "COMPASSDISCOVER",
        "MC": "COMPASSMASTERCARD",
        "PLACE CARD": "ADSPlaceCard",
        "VENMO": "VENMO",
        "VISA": "COMPASSVISA",
      },
      "DELETE_CARD": "@@payment-DELETE_CARD",
      "DELETE_MODAL_MOUNT_STATE": "@@payment-DELETE_MODAL_MOUNT_STATE",
      "GET_CARD_LIST": "@@payment-GET_CARD_DETAILS",
      "GET_CARD_LIST_ERR": "@@payment-GET_CARD_DETAILS_ERROR",
      "SET_CARD_LIST": "@@payment-SET_CARD_DETAILS",
      "SET_CHECK_BALANCE": "@@payment-SET_CHECK_BALANCE",
      "SET_DEFAULT_PAYMENT": "@@payment-SET_DEFAULT_PAYMENT",
      "SET_DEFAULT_PAYMENT_ERROR": "@@payment-SET_DEFAULT_PAYMENT_ERROR",
      "SET_DEFAULT_PAYMENT_SUCCESS": "@@payment-SET_DEFAULT_PAYMENT_SUCCESS",
      "SET_LOADER": "@@payment-SET_LOADER",
      "UPDATE_CARD_LIST_ON_DELETE": "@@payment-UPDATE_CARD_LIST_ON_DELETE",
      "UPDATE_CARD_LIST_ON_DELETE_ERR": "@@payment-UPDATE_CARD_LIST_ON_DELETE_ERR",
    }
  }
  persistentSubmitErrors={false}
  pure={true}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  submitAsSideEffect={false}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
  validate={[Function]}
/>
`;

exports[`CardTile should render correctly with plcc card 1`] = `
<StyledComponent
  card={
    Object {
      "accountNo": "************6765",
      "addressDetails": Object {
        "addressLine1": "Yucca Street",
        "addressLine2": "",
        "city": "Los Angeles",
        "country": "US",
        "firstName": "six",
        "lastName": "test",
        "phone1": "3214567890",
        "state": "CA",
        "zipCode": "90028",
      },
      "billingAddressId": 75446663,
      "ccBrand": "PLACE CARD",
      "ccType": "PLACE CARD",
      "creditCardId": 8977328,
      "defaultInd": false,
      "expMonth": "10",
      "expYear": "2025",
      "nameOnAccount": ".",
      "properties": null,
    }
  }
  destroyOnUnmount={true}
  enableReinitialize={true}
  forceUnregisterOnUnmount={false}
  form="CardTile"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-dnqmqq",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  border: 1px solid ",
          [Function],
          ";
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: ",
          [Function],
          "
    ",
          [Function],
          ";

  .recaptcha {
    webkit-transform: scale(0.7);
    transform: scale(0.7);
    position: relative;
    left: -45px;
  }
  & .giftcardTile__wrapper {
    display: flex;
    align-items: flex-end;
  }
  & form {
    width: 90%;
  }
  & .input-fields-wrapper {
    height: auto;
  }
  & .TextBox__error {
    padding-bottom: 10px;
  }

  & .TextBox__label {
    display: none;
    height: 100%;
    min-height: ",
          [Function],
          ";
    padding: ",
          [Function],
          "
      ",
          [Function],
          ";
    @media ",
          [Function],
          " {
      padding: ",
          [Function],
          "
        ",
          [Function],
          ";
    }
  }
  & .cardTile {
    display: flex;
    justify-content: space-between;
  }
  & .cardTile__heading {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__number {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__expiry {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__defaultSection {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
  }
  & .cardTile__img_wrapper {
    width: 90px;
    height: 56px;
    margin-bottom: auto;
    margin-top: ",
          [Function],
          ";
  }
  .cardTile__img {
    width: 100%;
  }
  .cardTile__ctaLinks {
    display: flex;
    margin-top: 35px;
    float: right;
  }
  .cardTile__anchor {
    margin-right: ",
          [Function],
          ";
  }
",
          ";
",
        ],
      },
      "defaultProps": Object {
        "destroyOnUnmount": true,
        "enableReinitialize": true,
        "forceUnregisterOnUnmount": false,
        "form": "CardTile",
        "getFormState": [Function],
        "keepDirtyOnReinitialize": false,
        "persistentSubmitErrors": false,
        "pure": true,
        "shouldAsyncValidate": [Function],
        "shouldError": [Function],
        "shouldValidate": [Function],
        "shouldWarn": [Function],
        "submitAsSideEffect": false,
        "touchOnBlur": true,
        "touchOnChange": false,
        "updateUnregisteredFields": false,
        "validate": [Function],
      },
      "displayName": "Styled(ReduxForm)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-dnqmqq",
      "target": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "destroyOnUnmount": true,
          "enableReinitialize": true,
          "forceUnregisterOnUnmount": false,
          "form": "CardTile",
          "getFormState": [Function],
          "keepDirtyOnReinitialize": false,
          "persistentSubmitErrors": false,
          "pure": true,
          "shouldAsyncValidate": [Function],
          "shouldError": [Function],
          "shouldValidate": [Function],
          "shouldWarn": [Function],
          "submitAsSideEffect": false,
          "touchOnBlur": true,
          "touchOnChange": false,
          "updateUnregisteredFields": false,
          "validate": [Function],
        },
        "displayName": "ReduxForm",
        "render": [Function],
      },
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  getFormState={[Function]}
  keepDirtyOnReinitialize={false}
  labels={
    Object {
      "CHECK_BALANCE": "@@payment-CHECK_BALANCE",
      "CREDIT_CARDS_PAYMETHODID": Object {
        "AMEX": "COMPASSAMEX",
        "DISC": "COMPASSDISCOVER",
        "MC": "COMPASSMASTERCARD",
        "PLACE CARD": "ADSPlaceCard",
        "VENMO": "VENMO",
        "VISA": "COMPASSVISA",
      },
      "DELETE_CARD": "@@payment-DELETE_CARD",
      "DELETE_MODAL_MOUNT_STATE": "@@payment-DELETE_MODAL_MOUNT_STATE",
      "GET_CARD_LIST": "@@payment-GET_CARD_DETAILS",
      "GET_CARD_LIST_ERR": "@@payment-GET_CARD_DETAILS_ERROR",
      "SET_CARD_LIST": "@@payment-SET_CARD_DETAILS",
      "SET_CHECK_BALANCE": "@@payment-SET_CHECK_BALANCE",
      "SET_DEFAULT_PAYMENT": "@@payment-SET_DEFAULT_PAYMENT",
      "SET_DEFAULT_PAYMENT_ERROR": "@@payment-SET_DEFAULT_PAYMENT_ERROR",
      "SET_DEFAULT_PAYMENT_SUCCESS": "@@payment-SET_DEFAULT_PAYMENT_SUCCESS",
      "SET_LOADER": "@@payment-SET_LOADER",
      "UPDATE_CARD_LIST_ON_DELETE": "@@payment-UPDATE_CARD_LIST_ON_DELETE",
      "UPDATE_CARD_LIST_ON_DELETE_ERR": "@@payment-UPDATE_CARD_LIST_ON_DELETE_ERR",
    }
  }
  persistentSubmitErrors={false}
  pure={true}
  setDefaultPaymentMethod={[MockFunction]}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  submitAsSideEffect={false}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
  validate={[Function]}
/>
`;

exports[`CardTile should render correctly with venmocard 1`] = `
<StyledComponent
  card={
    Object {
      "accountNo": "************6765",
      "addressDetails": Object {
        "addressLine1": "Yucca Street",
        "addressLine2": "",
        "city": "Los Angeles",
        "country": "US",
        "firstName": "six",
        "lastName": "test",
        "phone1": "3214567890",
        "state": "CA",
        "zipCode": "90028",
      },
      "billingAddressId": 75446663,
      "ccBrand": "VENMO",
      "ccType": "VENMO",
      "creditCardId": 8977328,
      "defaultInd": false,
      "expMonth": "10",
      "expYear": "2025",
      "nameOnAccount": ".",
      "properties": Object {
        "venmoUserId": "1234",
      },
    }
  }
  destroyOnUnmount={true}
  enableReinitialize={true}
  forceUnregisterOnUnmount={false}
  form="CardTile"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-dnqmqq",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  border: 1px solid ",
          [Function],
          ";
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: ",
          [Function],
          "
    ",
          [Function],
          ";

  .recaptcha {
    webkit-transform: scale(0.7);
    transform: scale(0.7);
    position: relative;
    left: -45px;
  }
  & .giftcardTile__wrapper {
    display: flex;
    align-items: flex-end;
  }
  & form {
    width: 90%;
  }
  & .input-fields-wrapper {
    height: auto;
  }
  & .TextBox__error {
    padding-bottom: 10px;
  }

  & .TextBox__label {
    display: none;
    height: 100%;
    min-height: ",
          [Function],
          ";
    padding: ",
          [Function],
          "
      ",
          [Function],
          ";
    @media ",
          [Function],
          " {
      padding: ",
          [Function],
          "
        ",
          [Function],
          ";
    }
  }
  & .cardTile {
    display: flex;
    justify-content: space-between;
  }
  & .cardTile__heading {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__number {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__expiry {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__defaultSection {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
  }
  & .cardTile__img_wrapper {
    width: 90px;
    height: 56px;
    margin-bottom: auto;
    margin-top: ",
          [Function],
          ";
  }
  .cardTile__img {
    width: 100%;
  }
  .cardTile__ctaLinks {
    display: flex;
    margin-top: 35px;
    float: right;
  }
  .cardTile__anchor {
    margin-right: ",
          [Function],
          ";
  }
",
          ";
",
        ],
      },
      "defaultProps": Object {
        "destroyOnUnmount": true,
        "enableReinitialize": true,
        "forceUnregisterOnUnmount": false,
        "form": "CardTile",
        "getFormState": [Function],
        "keepDirtyOnReinitialize": false,
        "persistentSubmitErrors": false,
        "pure": true,
        "shouldAsyncValidate": [Function],
        "shouldError": [Function],
        "shouldValidate": [Function],
        "shouldWarn": [Function],
        "submitAsSideEffect": false,
        "touchOnBlur": true,
        "touchOnChange": false,
        "updateUnregisteredFields": false,
        "validate": [Function],
      },
      "displayName": "Styled(ReduxForm)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-dnqmqq",
      "target": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "destroyOnUnmount": true,
          "enableReinitialize": true,
          "forceUnregisterOnUnmount": false,
          "form": "CardTile",
          "getFormState": [Function],
          "keepDirtyOnReinitialize": false,
          "persistentSubmitErrors": false,
          "pure": true,
          "shouldAsyncValidate": [Function],
          "shouldError": [Function],
          "shouldValidate": [Function],
          "shouldWarn": [Function],
          "submitAsSideEffect": false,
          "touchOnBlur": true,
          "touchOnChange": false,
          "updateUnregisteredFields": false,
          "validate": [Function],
        },
        "displayName": "ReduxForm",
        "render": [Function],
      },
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  getFormState={[Function]}
  keepDirtyOnReinitialize={false}
  labels={
    Object {
      "CHECK_BALANCE": "@@payment-CHECK_BALANCE",
      "CREDIT_CARDS_PAYMETHODID": Object {
        "AMEX": "COMPASSAMEX",
        "DISC": "COMPASSDISCOVER",
        "MC": "COMPASSMASTERCARD",
        "PLACE CARD": "ADSPlaceCard",
        "VENMO": "VENMO",
        "VISA": "COMPASSVISA",
      },
      "DELETE_CARD": "@@payment-DELETE_CARD",
      "DELETE_MODAL_MOUNT_STATE": "@@payment-DELETE_MODAL_MOUNT_STATE",
      "GET_CARD_LIST": "@@payment-GET_CARD_DETAILS",
      "GET_CARD_LIST_ERR": "@@payment-GET_CARD_DETAILS_ERROR",
      "SET_CARD_LIST": "@@payment-SET_CARD_DETAILS",
      "SET_CHECK_BALANCE": "@@payment-SET_CHECK_BALANCE",
      "SET_DEFAULT_PAYMENT": "@@payment-SET_DEFAULT_PAYMENT",
      "SET_DEFAULT_PAYMENT_ERROR": "@@payment-SET_DEFAULT_PAYMENT_ERROR",
      "SET_DEFAULT_PAYMENT_SUCCESS": "@@payment-SET_DEFAULT_PAYMENT_SUCCESS",
      "SET_LOADER": "@@payment-SET_LOADER",
      "UPDATE_CARD_LIST_ON_DELETE": "@@payment-UPDATE_CARD_LIST_ON_DELETE",
      "UPDATE_CARD_LIST_ON_DELETE_ERR": "@@payment-UPDATE_CARD_LIST_ON_DELETE_ERR",
    }
  }
  persistentSubmitErrors={false}
  pure={true}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  submitAsSideEffect={false}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
  validate={[Function]}
/>
`;

exports[`CardTile should render correctly with visa card 1`] = `
<StyledComponent
  card={
    Object {
      "accountNo": "************6765",
      "addressDetails": Object {
        "addressLine1": "Yucca Street",
        "addressLine2": "",
        "city": "Los Angeles",
        "country": "US",
        "firstName": "six",
        "lastName": "test",
        "phone1": "3214567890",
        "state": "CA",
        "zipCode": "90028",
      },
      "billingAddressId": 75446663,
      "ccBrand": "Visa",
      "ccType": "COMPASSVISA",
      "creditCardId": 8977328,
      "defaultInd": false,
      "expMonth": "10",
      "expYear": "2025",
      "nameOnAccount": ".",
      "properties": null,
    }
  }
  destroyOnUnmount={true}
  enableReinitialize={true}
  forceUnregisterOnUnmount={false}
  form="CardTile"
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-dnqmqq",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  border: 1px solid ",
          [Function],
          ";
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: ",
          [Function],
          "
    ",
          [Function],
          ";

  .recaptcha {
    webkit-transform: scale(0.7);
    transform: scale(0.7);
    position: relative;
    left: -45px;
  }
  & .giftcardTile__wrapper {
    display: flex;
    align-items: flex-end;
  }
  & form {
    width: 90%;
  }
  & .input-fields-wrapper {
    height: auto;
  }
  & .TextBox__error {
    padding-bottom: 10px;
  }

  & .TextBox__label {
    display: none;
    height: 100%;
    min-height: ",
          [Function],
          ";
    padding: ",
          [Function],
          "
      ",
          [Function],
          ";
    @media ",
          [Function],
          " {
      padding: ",
          [Function],
          "
        ",
          [Function],
          ";
    }
  }
  & .cardTile {
    display: flex;
    justify-content: space-between;
  }
  & .cardTile__heading {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__number {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__expiry {
    margin-bottom: ",
          [Function],
          ";
  }
  & .cardTile__defaultSection {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
  }
  & .cardTile__img_wrapper {
    width: 90px;
    height: 56px;
    margin-bottom: auto;
    margin-top: ",
          [Function],
          ";
  }
  .cardTile__img {
    width: 100%;
  }
  .cardTile__ctaLinks {
    display: flex;
    margin-top: 35px;
    float: right;
  }
  .cardTile__anchor {
    margin-right: ",
          [Function],
          ";
  }
",
          ";
",
        ],
      },
      "defaultProps": Object {
        "destroyOnUnmount": true,
        "enableReinitialize": true,
        "forceUnregisterOnUnmount": false,
        "form": "CardTile",
        "getFormState": [Function],
        "keepDirtyOnReinitialize": false,
        "persistentSubmitErrors": false,
        "pure": true,
        "shouldAsyncValidate": [Function],
        "shouldError": [Function],
        "shouldValidate": [Function],
        "shouldWarn": [Function],
        "submitAsSideEffect": false,
        "touchOnBlur": true,
        "touchOnChange": false,
        "updateUnregisteredFields": false,
        "validate": [Function],
      },
      "displayName": "Styled(ReduxForm)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-dnqmqq",
      "target": Object {
        "$$typeof": Symbol(react.forward_ref),
        "defaultProps": Object {
          "destroyOnUnmount": true,
          "enableReinitialize": true,
          "forceUnregisterOnUnmount": false,
          "form": "CardTile",
          "getFormState": [Function],
          "keepDirtyOnReinitialize": false,
          "persistentSubmitErrors": false,
          "pure": true,
          "shouldAsyncValidate": [Function],
          "shouldError": [Function],
          "shouldValidate": [Function],
          "shouldWarn": [Function],
          "submitAsSideEffect": false,
          "touchOnBlur": true,
          "touchOnChange": false,
          "updateUnregisteredFields": false,
          "validate": [Function],
        },
        "displayName": "ReduxForm",
        "render": [Function],
      },
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  getFormState={[Function]}
  keepDirtyOnReinitialize={false}
  labels={
    Object {
      "CHECK_BALANCE": "@@payment-CHECK_BALANCE",
      "CREDIT_CARDS_PAYMETHODID": Object {
        "AMEX": "COMPASSAMEX",
        "DISC": "COMPASSDISCOVER",
        "MC": "COMPASSMASTERCARD",
        "PLACE CARD": "ADSPlaceCard",
        "VENMO": "VENMO",
        "VISA": "COMPASSVISA",
      },
      "DELETE_CARD": "@@payment-DELETE_CARD",
      "DELETE_MODAL_MOUNT_STATE": "@@payment-DELETE_MODAL_MOUNT_STATE",
      "GET_CARD_LIST": "@@payment-GET_CARD_DETAILS",
      "GET_CARD_LIST_ERR": "@@payment-GET_CARD_DETAILS_ERROR",
      "SET_CARD_LIST": "@@payment-SET_CARD_DETAILS",
      "SET_CHECK_BALANCE": "@@payment-SET_CHECK_BALANCE",
      "SET_DEFAULT_PAYMENT": "@@payment-SET_DEFAULT_PAYMENT",
      "SET_DEFAULT_PAYMENT_ERROR": "@@payment-SET_DEFAULT_PAYMENT_ERROR",
      "SET_DEFAULT_PAYMENT_SUCCESS": "@@payment-SET_DEFAULT_PAYMENT_SUCCESS",
      "SET_LOADER": "@@payment-SET_LOADER",
      "UPDATE_CARD_LIST_ON_DELETE": "@@payment-UPDATE_CARD_LIST_ON_DELETE",
      "UPDATE_CARD_LIST_ON_DELETE_ERR": "@@payment-UPDATE_CARD_LIST_ON_DELETE_ERR",
    }
  }
  persistentSubmitErrors={false}
  pure={true}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  submitAsSideEffect={false}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
  validate={[Function]}
/>
`;
