// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddAddressForm component should renders correctly 1`] = `
<form
  className="any"
  onSubmit={[MockFunction]}
>
  <Styled(Row)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 1,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  &.active p {
    top: -50px;
  }
  &.input-fields-wrapper .Error__clearFloat {
    clear: both;
    top: -10px;
    position: relative;
  }

  input.TextBox__input[type='checkbox'] {
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    display: inline-block;
    height: 23px;
    width: 23px;
    @media ",
                [Function],
                " {
      top: ",
                [Function],
                ";
    }
  }

  input.TextBox__input[type='checkbox']:before {
    content: '';
    font-size: 20px;
    position: absolute;
    height: 20px;
    width: 20px;
    left: 0;
    box-shadow: inset 0 0 0 0.6px #575757;
  }
  &.active input.TextBox__input[type='checkbox']:after {
    transform: rotate(225deg);
    content: '';
    border: 2px inset #333;
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    float: left;
    border-right: 0;
    border-bottom: 0;
    left: ",
                [Function],
                ";
    top: ",
                [Function],
                ";
    position: absolute;
  }
  &.input-fields-wrapper + span {
    padding-left: ",
                [Function],
                ";
  }
  @media ",
                [Function],
                " {
    &.checkbox-align {
      float: left;
      margin: ",
                [Function],
                ";
    }
    &.input-fields-wrapper {
      overflow: hidden;
    }

    &div:last-child {
      padding-right: auto;
    }
  }
  .TextBox__input {
    margin: 0;
    outline: 0;
    line-height: 44px;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: calc(100% - 40px);
    padding: 0 10px;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    @media ",
                [Function],
                " {
      width: 100%;
      overflow: hidden;
    }
    ",
                [Function],
                ";
    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    &:focus + p {
      top: -50px;
    }
  }
  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        label="First-Nam"
        maxLength={50}
        name="FirstName"
        onBlur={[Function]}
        placeholder="First Name"
        type="text"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 1,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  &.active p {
    top: -50px;
  }
  &.input-fields-wrapper .Error__clearFloat {
    clear: both;
    top: -10px;
    position: relative;
  }

  input.TextBox__input[type='checkbox'] {
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    display: inline-block;
    height: 23px;
    width: 23px;
    @media ",
                [Function],
                " {
      top: ",
                [Function],
                ";
    }
  }

  input.TextBox__input[type='checkbox']:before {
    content: '';
    font-size: 20px;
    position: absolute;
    height: 20px;
    width: 20px;
    left: 0;
    box-shadow: inset 0 0 0 0.6px #575757;
  }
  &.active input.TextBox__input[type='checkbox']:after {
    transform: rotate(225deg);
    content: '';
    border: 2px inset #333;
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    float: left;
    border-right: 0;
    border-bottom: 0;
    left: ",
                [Function],
                ";
    top: ",
                [Function],
                ";
    position: absolute;
  }
  &.input-fields-wrapper + span {
    padding-left: ",
                [Function],
                ";
  }
  @media ",
                [Function],
                " {
    &.checkbox-align {
      float: left;
      margin: ",
                [Function],
                ";
    }
    &.input-fields-wrapper {
      overflow: hidden;
    }

    &div:last-child {
      padding-right: auto;
    }
  }
  .TextBox__input {
    margin: 0;
    outline: 0;
    line-height: 44px;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: calc(100% - 40px);
    padding: 0 10px;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    @media ",
                [Function],
                " {
      width: 100%;
      overflow: hidden;
    }
    ",
                [Function],
                ";
    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    &:focus + p {
      top: -50px;
    }
  }
  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        maxLength={50}
        name="LastName"
        onBlur={[Function]}
        placeholder="Last Name"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
    </Styled(Col)>
  </Styled(Row)>
  <br />
  <Styled(Row)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 1,
          "small": 6,
        }
      }
    >
      <Field
        component={[Function]}
        id="addressField"
        maxLength={30}
        name="address1"
        onBlur={[Function]}
        onPlaceSelected={[Function]}
        placeholder="Address Line 1"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 1,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  &.active p {
    top: -50px;
  }
  &.input-fields-wrapper .Error__clearFloat {
    clear: both;
    top: -10px;
    position: relative;
  }

  input.TextBox__input[type='checkbox'] {
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    display: inline-block;
    height: 23px;
    width: 23px;
    @media ",
                [Function],
                " {
      top: ",
                [Function],
                ";
    }
  }

  input.TextBox__input[type='checkbox']:before {
    content: '';
    font-size: 20px;
    position: absolute;
    height: 20px;
    width: 20px;
    left: 0;
    box-shadow: inset 0 0 0 0.6px #575757;
  }
  &.active input.TextBox__input[type='checkbox']:after {
    transform: rotate(225deg);
    content: '';
    border: 2px inset #333;
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    float: left;
    border-right: 0;
    border-bottom: 0;
    left: ",
                [Function],
                ";
    top: ",
                [Function],
                ";
    position: absolute;
  }
  &.input-fields-wrapper + span {
    padding-left: ",
                [Function],
                ";
  }
  @media ",
                [Function],
                " {
    &.checkbox-align {
      float: left;
      margin: ",
                [Function],
                ";
    }
    &.input-fields-wrapper {
      overflow: hidden;
    }

    &div:last-child {
      padding-right: auto;
    }
  }
  .TextBox__input {
    margin: 0;
    outline: 0;
    line-height: 44px;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: calc(100% - 40px);
    padding: 0 10px;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    @media ",
                [Function],
                " {
      width: 100%;
      overflow: hidden;
    }
    ",
                [Function],
                ";
    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    &:focus + p {
      top: -50px;
    }
  }
  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        maxLength={30}
        name="address-2"
        placeholder="Address Line 2( Optional )"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </Styled(Col)>
  </Styled(Row)>
  <br />
  <Styled(Row)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 1,
          "small": 6,
        }
      }
    >
      <Field
        Value=""
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  &.active p {
    top: -50px;
  }
  &.input-fields-wrapper .Error__clearFloat {
    clear: both;
    top: -10px;
    position: relative;
  }

  input.TextBox__input[type='checkbox'] {
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    display: inline-block;
    height: 23px;
    width: 23px;
    @media ",
                [Function],
                " {
      top: ",
                [Function],
                ";
    }
  }

  input.TextBox__input[type='checkbox']:before {
    content: '';
    font-size: 20px;
    position: absolute;
    height: 20px;
    width: 20px;
    left: 0;
    box-shadow: inset 0 0 0 0.6px #575757;
  }
  &.active input.TextBox__input[type='checkbox']:after {
    transform: rotate(225deg);
    content: '';
    border: 2px inset #333;
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    float: left;
    border-right: 0;
    border-bottom: 0;
    left: ",
                [Function],
                ";
    top: ",
                [Function],
                ";
    position: absolute;
  }
  &.input-fields-wrapper + span {
    padding-left: ",
                [Function],
                ";
  }
  @media ",
                [Function],
                " {
    &.checkbox-align {
      float: left;
      margin: ",
                [Function],
                ";
    }
    &.input-fields-wrapper {
      overflow: hidden;
    }

    &div:last-child {
      padding-right: auto;
    }
  }
  .TextBox__input {
    margin: 0;
    outline: 0;
    line-height: 44px;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: calc(100% - 40px);
    padding: 0 10px;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    @media ",
                [Function],
                " {
      width: 100%;
      overflow: hidden;
    }
    ",
                [Function],
                ";
    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    &:focus + p {
      top: -50px;
    }
  }
  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        id="city"
        name="city"
        onBlur={[Function]}
        onChange={[Function]}
        placeholder="City"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 3,
          "medium": 1,
          "small": 3,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  &.active div {
    top: -65px;
  }
  &.select-fields-wrapper .Error__clearFloat {
    clear: both;
    top: -10px;
    position: relative;
  }
  &.select-fields-wrapper p {
    top: -30px;
    opacity: 0.8;
    position: relative;
    margin: 0;
    float: left;
    padding: 5px 0px 5px 10px;
  }
  .selectField {
    margin: ",
                [Function],
                " 0 0 0;
    height: 35px;
    outline: 0;
    line-height: 44px;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    padding: 0 ",
                [Function],
                ";
    border: 1px solid ",
                [Function],
                ";
    background: url(http://cdn1.iconfinder.com/data/icons/cc_mono_icon_set/blacks/16x16/br_down.png)
      no-repeat right 8px center;
    -webkit-appearance: none;
    ",
                [Function],
                ";
    ",
                [Function],
                ";

    ",
                [Function],
                ";
    &:focus + p {
      top: -65px;
    }
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        defaultValue=""
        name="state"
        onBlur={[Function]}
        options={
          Array [
            Object {
              "displayName": "",
              "id": "",
            },
            Object {
              "displayName": "AL",
              "fullName": "Alabama",
              "id": "AL",
            },
            Object {
              "displayName": "AK",
              "fullName": "Alaska",
              "id": "AK",
            },
            Object {
              "displayName": "AS",
              "fullName": "American Samoa",
              "id": "AS",
            },
            Object {
              "displayName": "AZ",
              "fullName": "Arizona",
              "id": "AZ",
            },
            Object {
              "displayName": "AR",
              "fullName": "Arkansas",
              "id": "AR",
            },
            Object {
              "displayName": "AA",
              "fullName": "",
              "id": "AA",
            },
            Object {
              "displayName": "AE",
              "fullName": "",
              "id": "AE",
            },
            Object {
              "displayName": "AP",
              "fullName": "",
              "id": "AP",
            },
            Object {
              "displayName": "CA",
              "fullName": "California",
              "id": "CA",
            },
            Object {
              "displayName": "CO",
              "fullName": "Colorado",
              "id": "CO",
            },
            Object {
              "displayName": "CT",
              "fullName": "Connecticut",
              "id": "CT",
            },
            Object {
              "displayName": "DE",
              "fullName": "Delaware",
              "id": "DE",
            },
            Object {
              "displayName": "DC",
              "fullName": "Dist. of Columbia",
              "id": "DC",
            },
            Object {
              "displayName": "FM",
              "fullName": "",
              "id": "FM",
            },
            Object {
              "displayName": "FL",
              "fullName": "Florida",
              "id": "FL",
            },
            Object {
              "displayName": "GA",
              "fullName": "Georgia",
              "id": "GA",
            },
            Object {
              "displayName": "GU",
              "fullName": "Guam",
              "id": "GU",
            },
            Object {
              "displayName": "HI",
              "fullName": "Hawaii",
              "id": "HI",
            },
            Object {
              "displayName": "ID",
              "fullName": "Idaho",
              "id": "ID",
            },
            Object {
              "displayName": "IL",
              "fullName": "Illinois",
              "id": "IL",
            },
            Object {
              "displayName": "IN",
              "fullName": "Indiana",
              "id": "IN",
            },
            Object {
              "displayName": "IA",
              "fullName": "Iowa",
              "id": "IA",
            },
            Object {
              "displayName": "KS",
              "fullName": "Kansas",
              "id": "KS",
            },
            Object {
              "displayName": "KY",
              "fullName": "Kentucky",
              "id": "KY",
            },
            Object {
              "displayName": "LA",
              "fullName": "Louisiana",
              "id": "LA",
            },
            Object {
              "displayName": "ME",
              "fullName": "Maine",
              "id": "ME",
            },
            Object {
              "displayName": "MH",
              "fullName": "Marshall Islands",
              "id": "MH",
            },
            Object {
              "displayName": "MD",
              "fullName": "Maryland",
              "id": "MD",
            },
            Object {
              "displayName": "MA",
              "fullName": "Massachusetts",
              "id": "MA",
            },
            Object {
              "displayName": "MI",
              "fullName": "Michigan",
              "id": "MI",
            },
            Object {
              "displayName": "MN",
              "fullName": "Minnesota",
              "id": "MN",
            },
            Object {
              "displayName": "MS",
              "fullName": "Mississippi",
              "id": "MS",
            },
            Object {
              "displayName": "MO",
              "fullName": "Missouri",
              "id": "MO",
            },
            Object {
              "displayName": "MT",
              "fullName": "Montana",
              "id": "MT",
            },
            Object {
              "displayName": "NE",
              "fullName": "Nebraska",
              "id": "NE",
            },
            Object {
              "displayName": "NV",
              "fullName": "Nevada",
              "id": "NV",
            },
            Object {
              "displayName": "NH",
              "fullName": "New Hampshire",
              "id": "NH",
            },
            Object {
              "displayName": "NJ",
              "fullName": "New Jersey",
              "id": "NJ",
            },
            Object {
              "displayName": "NM",
              "fullName": "New Mexico",
              "id": "NM",
            },
            Object {
              "displayName": "NY",
              "fullName": "New York",
              "id": "NY",
            },
            Object {
              "displayName": "NC",
              "fullName": "North Carolina",
              "id": "NC",
            },
            Object {
              "displayName": "ND",
              "fullName": "North Dakota",
              "id": "ND",
            },
            Object {
              "displayName": "MP",
              "fullName": "Northern Marianas",
              "id": "MP",
            },
            Object {
              "displayName": "OH",
              "fullName": "Ohio",
              "id": "OH",
            },
            Object {
              "displayName": "OK",
              "fullName": "Oklahoma",
              "id": "OK",
            },
            Object {
              "displayName": "OR",
              "fullName": "Oregon",
              "id": "OR",
            },
            Object {
              "displayName": "PW",
              "fullName": "Palau",
              "id": "PW",
            },
            Object {
              "displayName": "PA",
              "fullName": "Pennsylvania",
              "id": "PA",
            },
            Object {
              "displayName": "PR",
              "fullName": "Puerto Rico",
              "id": "PR",
            },
            Object {
              "displayName": "RI",
              "fullName": "Rhode Island",
              "id": "RI",
            },
            Object {
              "displayName": "SC",
              "fullName": "South Carolina",
              "id": "SC",
            },
            Object {
              "displayName": "SD",
              "fullName": "South Dakota",
              "id": "SD",
            },
            Object {
              "displayName": "TN",
              "fullName": "Tennessee",
              "id": "TN",
            },
            Object {
              "displayName": "TX",
              "fullName": "Texas",
              "id": "TX",
            },
            Object {
              "displayName": "UT",
              "fullName": "Utah",
              "id": "UT",
            },
            Object {
              "displayName": "VT",
              "fullName": "Vermont",
              "id": "VT",
            },
            Object {
              "displayName": "VI",
              "fullName": "Virginia",
              "id": "VI",
            },
            Object {
              "displayName": "VA",
              "fullName": "Virgin Islands",
              "id": "VA",
            },
            Object {
              "displayName": "WA",
              "fullName": "Washington",
              "id": "WA",
            },
            Object {
              "displayName": "WV",
              "fullName": "West Virginia",
              "id": "WV",
            },
            Object {
              "displayName": "WI",
              "fullName": "Wisconsin",
              "id": "WI",
            },
            Object {
              "displayName": "WY",
              "fullName": "Wyoming",
              "id": "WY",
            },
          ]
        }
        placeholder="State"
        validate={
          Array [
            [Function],
          ]
        }
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 3,
          "medium": 1,
          "small": 3,
        }
      }
    >
      <Field
        Value=""
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  &.active p {
    top: -50px;
  }
  &.input-fields-wrapper .Error__clearFloat {
    clear: both;
    top: -10px;
    position: relative;
  }

  input.TextBox__input[type='checkbox'] {
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    display: inline-block;
    height: 23px;
    width: 23px;
    @media ",
                [Function],
                " {
      top: ",
                [Function],
                ";
    }
  }

  input.TextBox__input[type='checkbox']:before {
    content: '';
    font-size: 20px;
    position: absolute;
    height: 20px;
    width: 20px;
    left: 0;
    box-shadow: inset 0 0 0 0.6px #575757;
  }
  &.active input.TextBox__input[type='checkbox']:after {
    transform: rotate(225deg);
    content: '';
    border: 2px inset #333;
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    float: left;
    border-right: 0;
    border-bottom: 0;
    left: ",
                [Function],
                ";
    top: ",
                [Function],
                ";
    position: absolute;
  }
  &.input-fields-wrapper + span {
    padding-left: ",
                [Function],
                ";
  }
  @media ",
                [Function],
                " {
    &.checkbox-align {
      float: left;
      margin: ",
                [Function],
                ";
    }
    &.input-fields-wrapper {
      overflow: hidden;
    }

    &div:last-child {
      padding-right: auto;
    }
  }
  .TextBox__input {
    margin: 0;
    outline: 0;
    line-height: 44px;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: calc(100% - 40px);
    padding: 0 10px;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    @media ",
                [Function],
                " {
      width: 100%;
      overflow: hidden;
    }
    ",
                [Function],
                ";
    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    &:focus + p {
      top: -50px;
    }
  }
  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        id="zip"
        maxLength={5}
        name="zip"
        onBlur={[Function]}
        onChange={[Function]}
        placeholder="Zip Code"
        validate={
          Array [
            [Function],
            [Function],
          ]
        }
      />
    </Styled(Col)>
  </Styled(Row)>
  <br />
  <Styled(Row)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 1,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  &.active div {
    top: -65px;
  }
  &.select-fields-wrapper .Error__clearFloat {
    clear: both;
    top: -10px;
    position: relative;
  }
  &.select-fields-wrapper p {
    top: -30px;
    opacity: 0.8;
    position: relative;
    margin: 0;
    float: left;
    padding: 5px 0px 5px 10px;
  }
  .selectField {
    margin: ",
                [Function],
                " 0 0 0;
    height: 35px;
    outline: 0;
    line-height: 44px;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    padding: 0 ",
                [Function],
                ";
    border: 1px solid ",
                [Function],
                ";
    background: url(http://cdn1.iconfinder.com/data/icons/cc_mono_icon_set/blacks/16x16/br_down.png)
      no-repeat right 8px center;
    -webkit-appearance: none;
    ",
                [Function],
                ";
    ",
                [Function],
                ";

    ",
                [Function],
                ";
    &:focus + p {
      top: -65px;
    }
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        defaultValue=""
        name="country"
        onBlur={[Function]}
        onChange={[Function]}
        options={
          Array [
            Object {
              "displayName": "",
              "id": "",
            },
            Object {
              "displayName": "United States",
              "id": "US",
            },
            Object {
              "displayName": "Canada",
              "id": "CA",
            },
          ]
        }
        placeholder="country"
        validate={
          Array [
            [Function],
          ]
        }
        value=""
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 1,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  &.active p {
    top: -50px;
  }
  &.input-fields-wrapper .Error__clearFloat {
    clear: both;
    top: -10px;
    position: relative;
  }

  input.TextBox__input[type='checkbox'] {
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    display: inline-block;
    height: 23px;
    width: 23px;
    @media ",
                [Function],
                " {
      top: ",
                [Function],
                ";
    }
  }

  input.TextBox__input[type='checkbox']:before {
    content: '';
    font-size: 20px;
    position: absolute;
    height: 20px;
    width: 20px;
    left: 0;
    box-shadow: inset 0 0 0 0.6px #575757;
  }
  &.active input.TextBox__input[type='checkbox']:after {
    transform: rotate(225deg);
    content: '';
    border: 2px inset #333;
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    float: left;
    border-right: 0;
    border-bottom: 0;
    left: ",
                [Function],
                ";
    top: ",
                [Function],
                ";
    position: absolute;
  }
  &.input-fields-wrapper + span {
    padding-left: ",
                [Function],
                ";
  }
  @media ",
                [Function],
                " {
    &.checkbox-align {
      float: left;
      margin: ",
                [Function],
                ";
    }
    &.input-fields-wrapper {
      overflow: hidden;
    }

    &div:last-child {
      padding-right: auto;
    }
  }
  .TextBox__input {
    margin: 0;
    outline: 0;
    line-height: 44px;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: calc(100% - 40px);
    padding: 0 10px;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    @media ",
                [Function],
                " {
      width: 100%;
      overflow: hidden;
    }
    ",
                [Function],
                ";
    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    &:focus + p {
      top: -50px;
    }
  }
  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        maxLength={10}
        name="phoneNumber"
        onBlur={[Function]}
        placeholder="phone number"
        validate={
          Array [
            [Function],
            [Function],
            [Function],
          ]
        }
      />
    </Styled(Col)>
  </Styled(Row)>
  <br />
  <Styled(Row)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 1,
          "small": 6,
        }
      }
    >
      <Field
        className="checkbox-align"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  &.active p {
    top: -50px;
  }
  &.input-fields-wrapper .Error__clearFloat {
    clear: both;
    top: -10px;
    position: relative;
  }

  input.TextBox__input[type='checkbox'] {
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    display: inline-block;
    height: 23px;
    width: 23px;
    @media ",
                [Function],
                " {
      top: ",
                [Function],
                ";
    }
  }

  input.TextBox__input[type='checkbox']:before {
    content: '';
    font-size: 20px;
    position: absolute;
    height: 20px;
    width: 20px;
    left: 0;
    box-shadow: inset 0 0 0 0.6px #575757;
  }
  &.active input.TextBox__input[type='checkbox']:after {
    transform: rotate(225deg);
    content: '';
    border: 2px inset #333;
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    float: left;
    border-right: 0;
    border-bottom: 0;
    left: ",
                [Function],
                ";
    top: ",
                [Function],
                ";
    position: absolute;
  }
  &.input-fields-wrapper + span {
    padding-left: ",
                [Function],
                ";
  }
  @media ",
                [Function],
                " {
    &.checkbox-align {
      float: left;
      margin: ",
                [Function],
                ";
    }
    &.input-fields-wrapper {
      overflow: hidden;
    }

    &div:last-child {
      padding-right: auto;
    }
  }
  .TextBox__input {
    margin: 0;
    outline: 0;
    line-height: 44px;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: calc(100% - 40px);
    padding: 0 10px;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    @media ",
                [Function],
                " {
      width: 100%;
      overflow: hidden;
    }
    ",
                [Function],
                ";
    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    ",
                [Function],
                ";

    &:focus + p {
      top: -50px;
    }
  }
  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        id="default-ship"
        name="default-ship"
        type="checkbox"
      />
      <Styled(BodyStyle)
        tag="span"
      >
        Set as default shipping addres
      </Styled(BodyStyle)>
    </Styled(Col)>
  </Styled(Row)>
  <br />
  <Styled(Row)
    className="button_wrapper"
  >
    <Styled(Col)
      className="cancel"
      colSize={
        Object {
          "large": 3,
          "medium": 1,
          "small": 6,
        }
      }
    >
      <Styled(Button)
        buttonVariation="fixed-width"
        onClick={[MockFunction]}
        type="button"
      >
        Cancel
      </Styled(Button)>
    </Styled(Col)>
    <Styled(Col)
      className="submit"
      colSize={
        Object {
          "large": 3,
          "medium": 1,
          "small": 6,
        }
      }
    >
      <Styled(Button)
        buttonVariation="fixed-width"
        fill="BLUE"
        text="BLUE"
        type="submit"
      >
        Add Address
      </Styled(Button)>
    </Styled(Col)>
  </Styled(Row)>
  <br />
</form>
`;
