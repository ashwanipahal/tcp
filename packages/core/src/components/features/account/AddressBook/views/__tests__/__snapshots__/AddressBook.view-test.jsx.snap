// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddressBook component should renders correctly when addresses are not present 1`] = `
<StyledComponent
  addresses={Immutable.List []}
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-kgoBCf",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  .addressBook__separator {
    border-bottom: 3px solid ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
  }

  .addressBook__row--marginBottom {
    margin-bottom: ",
          [Function],
          ";
  }

  .addressBook__addNewCtaContainer {
    text-align: center;
  }

  @media ",
          [Function],
          " {
    .addressBook__addNewCtaContainer {
      text-align: left;
    }
  }
",
          ";
",
        ],
      },
      "displayName": "Styled(AddressView)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-kgoBCf",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  labels={
    Object {
      "addressBook": Object {},
      "common": Object {},
    }
  }
/>
`;

exports[`AddressBook component should renders correctly when addresses are present 1`] = `
<StyledComponent
  addresses={
    Immutable.List [
      Object {
        "addressLine": Array [
          "addressline 1",
          "addressline 2",
        ],
        "city": "test city",
        "country": "test country",
        "firstName": "test",
        "lastName": "test",
        "phone1": "1234567890",
      },
    ]
  }
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-kgoBCf",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  .addressBook__separator {
    border-bottom: 3px solid ",
          [Function],
          ";
    padding-bottom: ",
          [Function],
          ";
    margin-bottom: ",
          [Function],
          ";
  }

  .addressBook__row--marginBottom {
    margin-bottom: ",
          [Function],
          ";
  }

  .addressBook__addNewCtaContainer {
    text-align: center;
  }

  @media ",
          [Function],
          " {
    .addressBook__addNewCtaContainer {
      text-align: left;
    }
  }
",
          ";
",
        ],
      },
      "displayName": "Styled(AddressView)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-kgoBCf",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  labels={
    Object {
      "addressBook": Object {},
      "common": Object {},
    }
  }
/>
`;
