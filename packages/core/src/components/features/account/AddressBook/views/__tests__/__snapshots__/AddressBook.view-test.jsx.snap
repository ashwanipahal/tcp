// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddressBook component should renders correctly when addresses are not present 1`] = `
<div>
  <Styled(HeadingStyle)
    HeadingLarge="six"
    fontFamily="secondaryFontFamily"
    tag="h4"
  >
    Address Book
  </Styled(HeadingStyle)>
  <Styled(Separator) />
  <EmptyAddressList
    labels={Object {}}
  />
  <styled.div>
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 2,
            "medium": 3,
            "small": 4,
          }
        }
        offsetLeft={
          Object {
            "small": 1,
          }
        }
      >
        <Styled(Button)
          buttonVariation="fixed-width"
        />
      </Styled(Col)>
    </Styled(Row)>
  </styled.div>
</div>
`;

exports[`AddressBook component should renders correctly when addresses are present 1`] = `
<div>
  <Styled(HeadingStyle)
    HeadingLarge="six"
    fontFamily="secondaryFontFamily"
    tag="h4"
  >
    Address Book
  </Styled(HeadingStyle)>
  <Styled(Separator) />
  <styled.div>
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 2,
            "medium": 3,
            "small": 4,
          }
        }
        offsetLeft={
          Object {
            "small": 1,
          }
        }
      >
        <Styled(Button)
          buttonVariation="fixed-width"
        />
      </Styled(Col)>
    </Styled(Row)>
  </styled.div>
  <AddressList
    addresses={
      Immutable.List [
        Object {
          "addressLine": Array [
            "addressline 1",
            "addressline 2",
          ],
          "city": "test city",
          "country": "test country",
          "firstName": "test",
          "lastName": "test",
          "phone1": "1234567890",
        },
      ]
    }
    labels={Object {}}
  />
</div>
`;
