// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddressBook component should renders correctly when errors are present 1`] = `
<div>
  <Styled(Anchor)
    anchorVariation="secondary"
    className="addAddress__anchor__back"
    dataLocator="addnewaddress-back"
    fontSizeVariation="xlarge"
    to="/account"
  >
    Back
  </Styled(Anchor)>
  <Styled(HeadingStyle)
    HeadingLarge="six"
    className="addAddress__separator"
    fontFamily="primaryFontFamily"
    tag="h4"
  />
  <Styled(Grid)>
    <Connect(Styled(AddressVerification))
      labels={Object {}}
    />
    <ReduxForm
      destroyOnUnmount={true}
      enableReinitialize={true}
      forceUnregisterOnUnmount={false}
      form="AddressForm"
      getFormState={[Function]}
      initialValues={Object {}}
      isEdit={false}
      isMakeDefaultDisabled={false}
      keepDirtyOnReinitialize={false}
      labels={Object {}}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      submitAsSideEffect={false}
      touchOnBlur={true}
      touchOnChange={false}
      updateUnregisteredFields={false}
      validate={[Function]}
    />
  </Styled(Grid)>
</div>
`;

exports[`AddressBook component should renders correctly without any error 1`] = `
<div>
  <Styled(Anchor)
    anchorVariation="secondary"
    className="addAddress__anchor__back"
    dataLocator="addnewaddress-back"
    fontSizeVariation="xlarge"
    to="/account"
  >
    Back
  </Styled(Anchor)>
  <Styled(HeadingStyle)
    HeadingLarge="six"
    className="addAddress__separator"
    fontFamily="primaryFontFamily"
    tag="h4"
  />
  <Styled(Grid)>
    <Connect(Styled(AddressVerification))
      labels={Object {}}
    />
    <ReduxForm
      destroyOnUnmount={true}
      enableReinitialize={true}
      forceUnregisterOnUnmount={false}
      form="AddressForm"
      getFormState={[Function]}
      initialValues={Object {}}
      isEdit={false}
      isMakeDefaultDisabled={false}
      keepDirtyOnReinitialize={false}
      labels={Object {}}
      persistentSubmitErrors={false}
      pure={true}
      shouldAsyncValidate={[Function]}
      shouldError={[Function]}
      shouldValidate={[Function]}
      shouldWarn={[Function]}
      submitAsSideEffect={false}
      touchOnBlur={true}
      touchOnChange={false}
      updateUnregisteredFields={false}
      validate={[Function]}
    />
  </Styled(Grid)>
</div>
`;
