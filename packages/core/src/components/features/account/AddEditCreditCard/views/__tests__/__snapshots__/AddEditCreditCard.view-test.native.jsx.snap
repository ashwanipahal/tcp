// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddEditCreditCard component should renders correctly 1`] = `
<Fragment>
  <ReduxForm
    addressFormLabels={Object {}}
    destroyOnUnmount={true}
    dto={Object {}}
    enableReinitialize={true}
    forceUnregisterOnUnmount={false}
    form="addEditCreditCard"
    getFormState={[Function]}
    initialValues={Object {}}
    isEdit={false}
    keepDirtyOnReinitialize={false}
    labels={
      Object {
        "common": Object {},
        "paymentGC": Object {},
      }
    }
    onClose={[Function]}
    onFileAddressKey=""
    persistentSubmitErrors={false}
    pure={true}
    selectedCard={
      Object {
        "billingAddressId": 150786,
      }
    }
    shouldAsyncValidate={[Function]}
    shouldError={[Function]}
    shouldValidate={[Function]}
    shouldWarn={[Function]}
    submitAsSideEffect={false}
    touchOnBlur={true}
    touchOnChange={false}
    updateCardList={[Function]}
    updateUnregisteredFields={false}
    validate={[Function]}
  />
</Fragment>
`;

exports[`AddEditCreditCard component should renders correctly when showCreditCardFields is false 1`] = `
<Fragment>
  <Connect(AddressVerification)
    heading="ACC_LBL_VERIFY_YOUR_ADDRESS_HEADING_ADD"
    labels={
      Object {
        "addressBook": Object {},
        "common": Object {},
        "paymentGC": Object {},
      }
    }
    onError={[Function]}
    onSuccess={[Function]}
    toggleAddressModal={false}
    verifyModalRendered={[Function]}
  />
  <ReduxForm
    addressFormLabels={Object {}}
    destroyOnUnmount={true}
    enableReinitialize={true}
    forceUnregisterOnUnmount={false}
    form="addEditCreditCard"
    getFormState={[Function]}
    initialValues={Object {}}
    isEdit={false}
    keepDirtyOnReinitialize={false}
    labels={
      Object {
        "addressBook": Object {},
        "common": Object {},
        "paymentGC": Object {},
      }
    }
    mailingAddress={false}
    onClose={[Function]}
    onFileAddressKey=""
    onSubmit={[Function]}
    persistentSubmitErrors={false}
    pure={true}
    shouldAsyncValidate={[Function]}
    shouldError={[Function]}
    shouldValidate={[Function]}
    shouldWarn={[Function]}
    showCreditCardFields={false}
    showUserName={true}
    submitAsSideEffect={false}
    touchOnBlur={true}
    touchOnChange={false}
    updateUnregisteredFields={false}
    validate={[Function]}
  />
</Fragment>
`;

exports[`AddEditCreditCard component should renders correctly with error message 1`] = `
<Fragment>
  <ReduxForm
    addressFormLabels={Object {}}
    destroyOnUnmount={true}
    dto={Object {}}
    enableReinitialize={true}
    forceUnregisterOnUnmount={false}
    form="addEditCreditCard"
    getFormState={[Function]}
    initialValues={Object {}}
    isEdit={true}
    keepDirtyOnReinitialize={false}
    labels={
      Object {
        "common": Object {},
        "paymentGC": Object {},
      }
    }
    onClose={[Function]}
    onFileAddressKey=""
    persistentSubmitErrors={false}
    pure={true}
    selectedCard={
      Object {
        "billingAddressId": 150786,
      }
    }
    shouldAsyncValidate={[Function]}
    shouldError={[Function]}
    shouldValidate={[Function]}
    shouldWarn={[Function]}
    submitAsSideEffect={false}
    touchOnBlur={true}
    touchOnChange={false}
    updateCardList={[Function]}
    updateUnregisteredFields={false}
    validate={[Function]}
  />
</Fragment>
`;
