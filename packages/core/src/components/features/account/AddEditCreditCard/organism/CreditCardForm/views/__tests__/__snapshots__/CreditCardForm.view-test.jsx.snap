// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreditCardForm component should renders correctly with address dropdown 1`] = `
<form
  className=""
  name="addEditCreditCard"
  noValidate={true}
>
  <Styled(CreditCardFields)
    addressLabels={Object {}}
    addressList={
      Immutable.List [
        Object {
          "addressId": "12345",
          "firstName": "test",
          "lastName": "test",
          "primary": "true",
        },
      ]
    }
    className=""
    isEdit={false}
    labels={Object {}}
    onFileAddressKey=""
    onFileAddresskey="12345"
  />
  <Styled(Heading)
    className="addressDropdownHeading"
    color="text.primary"
    component="h3"
    dataLocator="payment-bilingaddresslabel"
    textAlign="left"
    variant="listMenu"
  />
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      className="creditCardForm__addressBook"
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-dnqmqq",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .select__input {
    appearance: none;
    background: url(http://cdn1.iconfinder.com/data/icons/cc_mono_icon_set/blacks/16x16/br_down.png)
      no-repeat right 0px bottom 6px;
    border: 0;
    border-bottom: 1px solid ",
                [Function],
                ";
    ",
                [Function],
                ";
    border-radius: 0;
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    margin: 0;
    margin-bottom: ",
                [Function],
                ";
    outline: 0;
    padding: ",
                [Function],
                " 0
      ",
                [Function],
                ";
    width: 100%;

    ",
                [Function],
                ";
  }

  .select__label {
    font-size: ",
                [Function],
                "px;
    font-weight: ",
                [Function],
                ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-dnqmqq",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="payment-billingaddressdd"
        id="onFileAddressKey"
        name="onFileAddressKey"
        options={
          Immutable.List [
            Object {
              "displayName": "test test (Default)",
              "id": "12345",
            },
            Object {
              "displayName": undefined,
              "id": "",
            },
          ]
        }
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    />
  </Styled(Row)>
  <FormSection
    name="address"
  >
    <Styled(AddressFields)
      formName="addEditCreditCard"
      formSection="address"
      labels={Object {}}
      showDefaultCheckbox={false}
      showPhoneNumber={false}
    />
  </FormSection>
  <Styled(Row)
    className="CreditCardForm__ctaContainer"
    fullBleed={true}
  >
    <Styled(Col)
      className="CreditCardForm__cancel"
      colSize={
        Object {
          "large": 3,
          "medium": 3,
          "small": 4,
        }
      }
      offsetLeft={
        Object {
          "large": 6,
          "medium": 1,
          "small": 1,
        }
      }
    >
      <Styled(Button)
        buttonVariation="fixed-width"
        data-locator="payment-cancelbtn"
        type="button"
      />
    </Styled(Col)>
    <Styled(Col)
      className="CreditCardForm__submit"
      colSize={
        Object {
          "large": 3,
          "medium": 3,
          "small": 4,
        }
      }
      offsetLeft={
        Object {
          "small": 1,
        }
      }
    >
      <Styled(Button)
        buttonVariation="fixed-width"
        data-locator="payment-addcardbtn"
        fill="BLUE"
        type="submit"
      />
    </Styled(Col)>
  </Styled(Row)>
</form>
`;

exports[`CreditCardForm component should renders correctly with addressForm 1`] = `
<form
  className=""
  name="addEditCreditCard"
  noValidate={true}
>
  <Styled(CreditCardFields)
    addressLabels={Object {}}
    addressList={
      Immutable.List [
        Object {
          "addressId": "12345",
          "firstName": "test",
          "lastName": "test",
          "primary": "true",
        },
      ]
    }
    className=""
    initialValues={Object {}}
    isEdit={false}
    labels={Object {}}
    onFileAddressKey=""
    pristine={true}
  />
  <Styled(Heading)
    className="addressDropdownHeading"
    color="text.primary"
    component="h3"
    dataLocator="payment-bilingaddresslabel"
    textAlign="left"
    variant="listMenu"
  />
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      className="creditCardForm__addressBook"
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-dnqmqq",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .select__input {
    appearance: none;
    background: url(http://cdn1.iconfinder.com/data/icons/cc_mono_icon_set/blacks/16x16/br_down.png)
      no-repeat right 0px bottom 6px;
    border: 0;
    border-bottom: 1px solid ",
                [Function],
                ";
    ",
                [Function],
                ";
    border-radius: 0;
    color: ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    margin: 0;
    margin-bottom: ",
                [Function],
                ";
    outline: 0;
    padding: ",
                [Function],
                " 0
      ",
                [Function],
                ";
    width: 100%;

    ",
                [Function],
                ";
  }

  .select__label {
    font-size: ",
                [Function],
                "px;
    font-weight: ",
                [Function],
                ";
    padding: 0;
    position: absolute;
    top: 0;
  }

  ",
                [Function],
                ";
",
                ";
",
              ],
            },
            "displayName": "Styled(SelectBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-dnqmqq",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="payment-billingaddressdd"
        id="onFileAddressKey"
        name="onFileAddressKey"
        options={
          Immutable.List [
            Object {
              "displayName": "test test (Default)",
              "id": "12345",
            },
            Object {
              "displayName": undefined,
              "id": "",
            },
          ]
        }
      />
    </Styled(Col)>
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    />
  </Styled(Row)>
  <FormSection
    name="address"
  >
    <Styled(AddressFields)
      formName="addEditCreditCard"
      formSection="address"
      labels={Object {}}
      showDefaultCheckbox={false}
      showPhoneNumber={false}
    />
  </FormSection>
  <Styled(Row)
    className="CreditCardForm__ctaContainer"
    fullBleed={true}
  >
    <Styled(Col)
      className="CreditCardForm__cancel"
      colSize={
        Object {
          "large": 3,
          "medium": 3,
          "small": 4,
        }
      }
      offsetLeft={
        Object {
          "large": 6,
          "medium": 1,
          "small": 1,
        }
      }
    >
      <Styled(Button)
        buttonVariation="fixed-width"
        data-locator="payment-cancelbtn"
        type="button"
      />
    </Styled(Col)>
    <Styled(Col)
      className="CreditCardForm__submit"
      colSize={
        Object {
          "large": 3,
          "medium": 3,
          "small": 4,
        }
      }
      offsetLeft={
        Object {
          "small": 1,
        }
      }
    >
      <Styled(Button)
        buttonVariation="fixed-width"
        data-locator="payment-addcardbtn"
        disabled={true}
        fill="BLUE"
        type="submit"
      />
    </Styled(Col)>
  </Styled(Row)>
</form>
`;
