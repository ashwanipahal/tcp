// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Bag page Container should render modal when open true 1`] = `
<ModalNative
  closeIconDataLocator="BagConfirmationmodalcrossicon"
  heading="  "
  headingAlign="left"
  headingFontFamily="secondary"
  horizontalBar={false}
  isOpen={true}
  isOverlay={false}
  onRequestClose={[MockFunction]}
>
  <Styled(View)>
    <Styled(Text)>
      <Styled(BodyCopy)
        accessibilityText=""
        dataLocator=""
        fontFamily="secondary"
        fontSize="fs16"
        fontWeight="regular"
        margin={null}
        numberOfLines={null}
        textAlign="center"
        textDecoration={null}
      />
    </Styled(Text)>
    <Styled(View)>
      <Styled(CustomButton)
        active={false}
        buttonVariation="variable-width"
        color="white"
        customStyle={Object {}}
        customTextStyle={null}
        disableButton={false}
        fill="DARK"
        fullWidth=""
        iconColor="gray.800"
        iconName="chevron-down"
        iconSize="fs12"
        locator=""
        navigation={Object {}}
        onPress={[MockFunction]}
        selected={false}
        selectedIcon="chevron-up"
        showIcon={false}
        text=""
        theme={Object {}}
        type="submit"
        url=""
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(CustomButton)
        active={false}
        buttonVariation="variable-width"
        color="white"
        customStyle={Object {}}
        customTextStyle={null}
        disableButton={false}
        fill="BLUE"
        fullWidth=""
        iconColor="gray.800"
        iconName="chevron-down"
        iconSize="fs12"
        locator=""
        navigation={Object {}}
        onPress={[MockFunction]}
        selected={false}
        selectedIcon="chevron-up"
        showIcon={false}
        text=""
        theme={Object {}}
        type="submit"
        url=""
      />
    </Styled(View)>
  </Styled(View)>
</ModalNative>
`;

exports[`Bag page Container should render no modal when isOpen is false 1`] = `
<ModalNative
  closeIconDataLocator="BagConfirmationmodalcrossicon"
  heading="  "
  headingAlign="left"
  headingFontFamily="secondary"
  horizontalBar={false}
  isOpen={false}
  isOverlay={false}
  onRequestClose={[MockFunction]}
>
  <Styled(View)>
    <Styled(Text)>
      <Styled(BodyCopy)
        accessibilityText=""
        dataLocator=""
        fontFamily="secondary"
        fontSize="fs16"
        fontWeight="regular"
        margin={null}
        numberOfLines={null}
        textAlign="center"
        textDecoration={null}
      />
    </Styled(Text)>
    <Styled(View)>
      <Styled(CustomButton)
        active={false}
        buttonVariation="variable-width"
        color="white"
        customStyle={Object {}}
        customTextStyle={null}
        disableButton={false}
        fill="DARK"
        fullWidth=""
        iconColor="gray.800"
        iconName="chevron-down"
        iconSize="fs12"
        locator=""
        navigation={Object {}}
        onPress={[MockFunction]}
        selected={false}
        selectedIcon="chevron-up"
        showIcon={false}
        text=""
        theme={Object {}}
        type="submit"
        url=""
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(CustomButton)
        active={false}
        buttonVariation="variable-width"
        color="white"
        customStyle={Object {}}
        customTextStyle={null}
        disableButton={false}
        fill="BLUE"
        fullWidth=""
        iconColor="gray.800"
        iconName="chevron-down"
        iconSize="fs12"
        locator=""
        navigation={Object {}}
        onPress={[MockFunction]}
        selected={false}
        selectedIcon="chevron-up"
        showIcon={false}
        text=""
        theme={Object {}}
        type="submit"
        url=""
      />
    </Styled(View)>
  </Styled(View)>
</ModalNative>
`;
