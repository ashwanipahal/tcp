// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ItemDeleteConfirmation Modal should render modal when open true 1`] = `
<Styled(Modal)
  className="test TCPModal__Content"
  closeIconDataLocator="coupondetailmodalcrossicon"
  fixedWidth={true}
  innerContentClassName="item-delete-confirmation-modal"
  isOpen={true}
  onRequestClose={[MockFunction]}
  overlayClassName="TCPModal__Overlay"
>
  <div
    className="modal-content"
  >
    <Styled(BodyCopy)
      className="item-delete-confirmation-title"
      color="text.primary"
      component="span"
      fontFamily="secondary"
      fontSize="fs16"
      fontWeight="extrabold"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="item-delete-confirmation-text"
      color="text.primary"
      component="span"
      fontFamily="secondary"
      fontSize="fs16"
      fontWeight="normal"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <div
      className="button-container"
    >
      <Styled(Button)
        className="item-delete-button"
        onClick={[MockFunction]}
      >
        <Styled(BodyCopy)
          className={null}
          color="white"
          component="span"
          fontFamily="secondary"
          fontSize={
            Array [
              "fs13",
              "fs13",
              "fs14",
            ]
          }
          fontWeight="extrabold"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          textAlign="left"
        />
      </Styled(Button)>
      <Styled(Button)
        className="item-delete-button confirm-button"
        onClick={[MockFunction]}
      >
        <Styled(BodyCopy)
          className={null}
          color="text.secondary"
          component="span"
          fontFamily="secondary"
          fontSize={
            Array [
              "fs13",
              "fs13",
              "fs14",
            ]
          }
          fontWeight="extrabold"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          textAlign="left"
        />
      </Styled(Button)>
    </div>
  </div>
</Styled(Modal)>
`;

exports[`ItemDeleteConfirmation Modal should render no modal when isOpen is false 1`] = `
<Styled(Modal)
  className="test TCPModal__Content"
  closeIconDataLocator="coupondetailmodalcrossicon"
  fixedWidth={true}
  innerContentClassName="item-delete-confirmation-modal"
  isOpen={false}
  onRequestClose={[MockFunction]}
  overlayClassName="TCPModal__Overlay"
>
  <div
    className="modal-content"
  >
    <Styled(BodyCopy)
      className="item-delete-confirmation-title"
      color="text.primary"
      component="span"
      fontFamily="secondary"
      fontSize="fs16"
      fontWeight="extrabold"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="item-delete-confirmation-text"
      color="text.primary"
      component="span"
      fontFamily="secondary"
      fontSize="fs16"
      fontWeight="normal"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <div
      className="button-container"
    >
      <Styled(Button)
        className="item-delete-button"
        onClick={[MockFunction]}
      >
        <Styled(BodyCopy)
          className={null}
          color="white"
          component="span"
          fontFamily="secondary"
          fontSize={
            Array [
              "fs13",
              "fs13",
              "fs14",
            ]
          }
          fontWeight="extrabold"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          textAlign="left"
        />
      </Styled(Button)>
      <Styled(Button)
        className="item-delete-button confirm-button"
        onClick={[MockFunction]}
      >
        <Styled(BodyCopy)
          className={null}
          color="text.secondary"
          component="span"
          fontFamily="secondary"
          fontSize={
            Array [
              "fs13",
              "fs13",
              "fs14",
            ]
          }
          fontWeight="extrabold"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          textAlign="left"
        />
      </Styled(Button)>
    </div>
  </div>
</Styled(Modal)>
`;
