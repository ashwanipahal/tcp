// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddedToBagActions native component AddedToBagActions native component renders correctly 1`] = `
<Fragment>
  <Styled(View)>
    <AnimatedComponent
      style={
        Object {
          "height": 68,
        }
      }
    >
      <Styled(View)>
        <Styled(TouchableOpacity)
          onPress={[Function]}
        >
          <Styled(View)>
            <Styled(View)>
              <Styled(Text)>
                test (10)
              </Styled(Text)>
              <Styled(Text)>
                undefined: $0.00
              </Styled(Text)>
            </Styled(View)>
          </Styled(View)>
        </Styled(TouchableOpacity)>
        <Styled(TouchableOpacity)
          onPress={[Function]}
        >
          <Styled(View) />
        </Styled(TouchableOpacity)>
      </Styled(View)>
    </AnimatedComponent>
    <Styled(ScrollViewMock)
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollEndDrag={[Function]}
      viewHeight="65%"
    >
      <Styled(View)>
        <Connect(ProductTileWrapperContainer)
          bagLabels={
            Object {
              "bagHeading": "test",
              "checkout": "",
              "savedLaterButton": "savedLaterButton",
              "tagLine": "tagline",
              "viewBag": "",
            }
          }
          navigation={[MockFunction]}
          pageView="myBag"
        />
        <Styled(View)>
          <Styled(View)>
            <Connect(Recommendations)
              navigation={[MockFunction]}
              page="cart"
              variation="moduleO"
            />
            <Connect(Recommendations)
              navigation={[MockFunction]}
              page="cart"
              portalValue="recently-viewed-products"
              variation="moduleO"
            />
          </Styled(View)>
        </Styled(View)>
      </Styled(View)>
      <Connect(QuickViewModalContainer)
        navigation={[MockFunction]}
      />
    </Styled(ScrollViewMock)>
  </Styled(View)>
  <Styled(View)>
    <Connect(AddedToBagContainer)
      hideHeader={[Function]}
      isNoNEmptyBag={false}
      labels={
        Object {
          "bagHeading": "test",
          "checkout": "",
          "savedLaterButton": "savedLaterButton",
          "tagLine": "tagline",
          "viewBag": "",
        }
      }
      navigation={[MockFunction]}
      payPalTop={30}
    />
  </Styled(View)>
</Fragment>
`;

exports[`AddedToBagActions native component AddedToBagActions native component renders correctly with SFL section 1`] = `
<Fragment>
  <Styled(View)>
    <AnimatedComponent
      style={
        Object {
          "height": 68,
        }
      }
    >
      <Styled(View)>
        <Styled(TouchableOpacity)
          onPress={[Function]}
        >
          <Styled(View)>
            <Styled(View)>
              <Styled(Text)>
                test (0)
              </Styled(Text)>
              <Styled(Text) />
            </Styled(View)>
          </Styled(View)>
        </Styled(TouchableOpacity)>
        <Styled(TouchableOpacity)
          onPress={[Function]}
        >
          <Styled(View) />
        </Styled(TouchableOpacity)>
      </Styled(View)>
    </AnimatedComponent>
    <Styled(ScrollViewMock)
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollEndDrag={[Function]}
      viewHeight="65%"
    >
      <Styled(View)>
        <Connect(ProductTileWrapperContainer)
          bagLabels={
            Object {
              "bagHeading": "test",
              "checkout": "",
              "savedLaterButton": "savedLaterButton",
              "tagLine": "tagline",
              "viewBag": "",
            }
          }
          isBagPageSflSection={true}
          navigation={[MockFunction]}
          sflItems={Object {}}
        />
        <Styled(View)>
          <Styled(View)>
            <Connect(Recommendations)
              navigation={[MockFunction]}
              page="cart"
              variation="moduleO"
            />
            <Connect(Recommendations)
              navigation={[MockFunction]}
              page="cart"
              portalValue="recently-viewed-products"
              variation="moduleO"
            />
          </Styled(View)>
        </Styled(View)>
      </Styled(View)>
      <Connect(QuickViewModalContainer)
        navigation={[MockFunction]}
      />
    </Styled(ScrollViewMock)>
  </Styled(View)>
</Fragment>
`;

exports[`AddedToBagActions native component AddedToBagActions native component renders correctly with active BAG section 1`] = `<View />`;

exports[`AddedToBagActions native component AddedToBagActions native component renders correctly with active SFL section 1`] = `
<Fragment>
  <Styled(View)>
    <AnimatedComponent
      style={
        Object {
          "height": 68,
        }
      }
    >
      <Styled(View)>
        <Styled(TouchableOpacity)
          onPress={[Function]}
        >
          <Styled(View)>
            <Styled(View)>
              <Styled(Text)>
                test (0)
              </Styled(Text)>
              <Styled(Text) />
            </Styled(View)>
          </Styled(View)>
        </Styled(TouchableOpacity)>
        <Styled(TouchableOpacity)
          onPress={[Function]}
        >
          <Styled(View) />
        </Styled(TouchableOpacity)>
      </Styled(View)>
    </AnimatedComponent>
    <Styled(ScrollViewMock)
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollEndDrag={[Function]}
      viewHeight="60%"
    >
      <Styled(View)>
        <Connect(ProductTileWrapperContainer)
          bagLabels={
            Object {
              "bagHeading": "test",
              "checkout": "",
              "savedLaterButton": "savedLaterButton",
              "tagLine": "tagline",
              "viewBag": "",
            }
          }
          isBagPageSflSection={true}
          navigation={[MockFunction]}
          sflItems={Object {}}
        />
        <Styled(View)>
          <Styled(View)>
            <Connect(Recommendations)
              navigation={[MockFunction]}
              page="cart"
              variation="moduleO"
            />
            <Connect(Recommendations)
              navigation={[MockFunction]}
              page="cart"
              portalValue="recently-viewed-products"
              variation="moduleO"
            />
          </Styled(View)>
        </Styled(View)>
      </Styled(View)>
      <Connect(QuickViewModalContainer)
        navigation={[MockFunction]}
      />
    </Styled(ScrollViewMock)>
  </Styled(View)>
</Fragment>
`;

exports[`AddedToBagActions native component AddedToBagActions native component renders correctly with bag section 1`] = `
<Fragment>
  <Styled(View)>
    <AnimatedComponent
      style={
        Object {
          "height": 68,
        }
      }
    >
      <Styled(View)>
        <Styled(TouchableOpacity)
          onPress={[Function]}
        >
          <Styled(View)>
            <Styled(View)>
              <Styled(Text)>
                test (0)
              </Styled(Text)>
              <Styled(Text) />
            </Styled(View)>
          </Styled(View)>
        </Styled(TouchableOpacity)>
        <Styled(TouchableOpacity)
          onPress={[Function]}
        >
          <Styled(View) />
        </Styled(TouchableOpacity)>
      </Styled(View)>
    </AnimatedComponent>
    <Styled(ScrollViewMock)
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollEndDrag={[Function]}
      viewHeight="60%"
    >
      <Styled(View)>
        <Connect(ProductTileWrapperContainer)
          bagLabels={
            Object {
              "bagHeading": "test",
              "checkout": "",
              "savedLaterButton": "savedLaterButton",
              "tagLine": "tagline",
              "viewBag": "",
            }
          }
          navigation={[MockFunction]}
          pageView="myBag"
        />
        <Styled(View)>
          <Connect(OrderLedgerContainer)
            navigation={[MockFunction]}
            pageCategory="bagPage"
          />
        </Styled(View)>
        <Styled(View)>
          <Styled(View)>
            <Connect(BonusPointsDays)
              isBagPage={true}
              showAccordian={false}
            />
          </Styled(View)>
        </Styled(View)>
        <Styled(View)>
          <Connect(CouponContainer)
            showAccordian={false}
          />
        </Styled(View)>
        <Styled(View)>
          <Styled(View)>
            <Connect(Recommendations)
              navigation={[MockFunction]}
              page="cart"
              variation="moduleO"
            />
            <Connect(Recommendations)
              navigation={[MockFunction]}
              page="cart"
              portalValue="recently-viewed-products"
              variation="moduleO"
            />
          </Styled(View)>
        </Styled(View)>
      </Styled(View)>
      <Connect(QuickViewModalContainer)
        navigation={[MockFunction]}
      />
    </Styled(ScrollViewMock)>
  </Styled(View)>
  <Styled(View)>
    <Connect(AddedToBagContainer)
      hideHeader={[Function]}
      isNoNEmptyBag={true}
      labels={
        Object {
          "bagHeading": "test",
          "checkout": "",
          "savedLaterButton": "savedLaterButton",
          "tagLine": "tagline",
          "viewBag": "",
        }
      }
      navigation={[MockFunction]}
      payPalTop={30}
      showAddTobag={true}
    />
  </Styled(View)>
</Fragment>
`;
