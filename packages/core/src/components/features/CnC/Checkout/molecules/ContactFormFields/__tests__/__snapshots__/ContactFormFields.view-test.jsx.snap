// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Coupon component should renders correctly when Coupon are not present 1`] = `
<div
  className=""
>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      className="pickupField fieldFirstName"
      colSize={
        Object {
          "large": 6,
          "medium": 8,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url(",
                "/static/version-not-available/images/circle-alert-fill.png",
                ") no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="pickup-first-name"
        enableSuccessCheck={false}
        id="firstName"
        name="firstName"
      />
      <Styled(BodyCopy)
        className={null}
        color="text.primary"
        component="p"
        fontFamily="secondary"
        fontSize="fs12"
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      />
    </Styled(Col)>
    <Styled(Col)
      className="pickupField fieldLastName"
      colSize={
        Object {
          "large": 6,
          "medium": 8,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url(",
                "/static/version-not-available/images/circle-alert-fill.png",
                ") no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="pickup-last-name"
        enableSuccessCheck={false}
        id="lastName"
        name="lastName"
      />
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`Coupon component should renders correctly with express checkout 1`] = `
<div
  className=""
>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      className="pickupField fieldFirstName"
      colSize={
        Object {
          "large": 12,
          "medium": 8,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url(",
                "/static/version-not-available/images/circle-alert-fill.png",
                ") no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="pickup-first-name"
        enableSuccessCheck={false}
        id="firstName"
        name="firstName"
      />
      <Styled(BodyCopy)
        className={null}
        color="text.primary"
        component="p"
        fontFamily="secondary"
        fontSize="fs12"
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      />
    </Styled(Col)>
    <Styled(Col)
      className="pickupField fieldLastName"
      colSize={
        Object {
          "large": 12,
          "medium": 8,
          "small": 6,
        }
      }
    >
      <Field
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  position: relative;
  display: block;

  .TextBox__label {
    font-size: ",
                [Function],
                "px;
    padding: 0;
    position: absolute;
    top: ",
                [Function],
                ";
    ",
                [Function],
                "
  }

  .TextBox__input {
    margin: 0;
    outline: 0;
    font-size: ",
                [Function],
                "px;
    color: ",
                [Function],
                ";
    width: 100%;
    background-position: left top;
    background-repeat: no-repeat;
    background-size: contain;
    border: 0 solid transparent;
    border-bottom: 1px solid ",
                [Function],
                ";
    padding-bottom: ",
                [Function],
                ";
    margin-bottom: ",
                [Function],
                ";
    padding-top: ",
                [Function],
                ";

    ",
                [Function],
                "

    ",
                [Function],
                ";

    &:focus + .TextBox__label {
      font-size: ",
                [Function],
                "px;
      font-weight: ",
                [Function],
                ";
      top: ",
                [Function],
                ";
    }
  }
  .success__checkmark {
    display: none;
  }
  &.textbox_validation_success .TextBox__input {
    border-bottom: 1px solid ",
                [Function],
                ";
  }

  &.textbox_validation_success .success__checkmark {
    display: ",
                [Function],
                ";
    width: 15px;
    height: 8px;
    margin-left: ",
                [Function],
                ";
    transform: rotate(-45deg);
    transform-origin: left;
    position: absolute;
    right: 0;
    top: 30px;

    &:before {
      content: '';
      position: absolute;
      width: 3px;
      height: 100%;
      background-color: ",
                [Function],
                ";
    }

    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 3px;
      background-color: ",
                [Function],
                ";
      bottom: 0;
    }
  }

  ",
                [Function],
                ";

  .TextBox__error {
    display: flex;
    flex-direction: row;
    padding-bottom: ",
                [Function],
                ";
  }
  .warning-icon {
    background: transparent url(",
                "/static/version-not-available/images/circle-alert-fill.png",
                ") no-repeat 0 0;
    background-size: contain;
    border: none;
    height: 14px;
    width: 16px;
    margin-right: 7px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(TextBox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        dataLocator="pickup-last-name"
        enableSuccessCheck={false}
        id="lastName"
        name="lastName"
      />
    </Styled(Col)>
  </Styled(Row)>
</div>
`;
