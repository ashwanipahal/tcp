// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GiftCardTileVanilla should render gift card tile 1`] = `
<Fragment>
  <Styled(View)>
    <Styled(View)>
      <Styled(View)
        flex={2}
      >
        <Styled(Text)>
          <Styled(Styled(BodyCopy))
            accessibilityText=""
            dataLocator=""
            fontFamily="secondary"
            fontSize="fs16"
            fontWeight="regular"
            margin={null}
            numberOfLines={null}
            spacingStyles="margin-bottom-MED"
            text="lbl_giftcard_endingIn  "
            textDecoration={null}
          />
        </Styled(Text)>
      </Styled(View)>
      <Styled(View)
        flex={1}
      >
        <Connect(ClickTracker)
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "active": false,
                "buttonVariation": "fixed-width",
                "color": "",
                "customStyle": Object {},
                "customTextStyle": null,
                "disableButton": false,
                "fill": "",
                "fullWidth": "",
                "iconColor": "gray.800",
                "iconName": "chevron-down",
                "iconSize": "fs12",
                "locator": "",
                "navigation": Object {},
                "onPress": null,
                "paddings": "12px 32px 12px 32px",
                "selected": false,
                "selectedIcon": "chevron-up",
                "showIcon": false,
                "text": "",
                "theme": Object {},
                "url": "",
                "withNoLineHeight": false,
              },
              "attrs": Array [],
              "displayName": "Styled(CustomButton)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
    ",
                  "
  justify-content: center;
  min-height: 32px;
  border: 1px solid ",
                  [Function],
                  ";
  opacity: ",
                  [Function],
                  ";

  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";

  ",
                  [Function],
                  ";

  ",
                  [Function],
                  "

  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
",
                  ";
  ",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": [Function],
              "withComponent": [Function],
            }
          }
          clickData={
            Object {
              "customEvents": Array [
                "event65",
              ],
            }
          }
          data-locator=""
          disableButton={true}
          fill="DARK"
          module="checkout"
          name="apply_gift_card"
          onPress={[Function]}
          pageData={
            Object {
              "pageName": "checkout:payment",
              "pageSection": "checkout",
              "pageShortName": "checkout",
              "pageSubSection": "checkout",
              "pageSubSubSection": "checkout",
              "pageType": "checkout",
            }
          }
          text="lbl_giftcard_applyBtn"
          type="submit"
        />
      </Styled(View)>
    </Styled(View)>
  </Styled(View)>
</Fragment>
`;

exports[`GiftCardTileVanilla should render gift card tile with 0 order balance 1`] = `
<Fragment>
  <Styled(View)>
    <Styled(View)>
      <Styled(View)
        flex={2}
      >
        <Styled(Text)>
          <Styled(Styled(BodyCopy))
            accessibilityText=""
            dataLocator=""
            fontFamily="secondary"
            fontSize="fs16"
            fontWeight="regular"
            margin={null}
            numberOfLines={null}
            spacingStyles="margin-bottom-MED"
            text="lbl_giftcard_endingIn  "
            textDecoration={null}
          />
        </Styled(Text)>
      </Styled(View)>
      <Styled(View)
        flex={1}
      >
        <Connect(ClickTracker)
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "active": false,
                "buttonVariation": "fixed-width",
                "color": "",
                "customStyle": Object {},
                "customTextStyle": null,
                "disableButton": false,
                "fill": "",
                "fullWidth": "",
                "iconColor": "gray.800",
                "iconName": "chevron-down",
                "iconSize": "fs12",
                "locator": "",
                "navigation": Object {},
                "onPress": null,
                "paddings": "12px 32px 12px 32px",
                "selected": false,
                "selectedIcon": "chevron-up",
                "showIcon": false,
                "text": "",
                "theme": Object {},
                "url": "",
                "withNoLineHeight": false,
              },
              "attrs": Array [],
              "displayName": "Styled(CustomButton)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
    ",
                  "
  justify-content: center;
  min-height: 32px;
  border: 1px solid ",
                  [Function],
                  ";
  opacity: ",
                  [Function],
                  ";

  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";

  ",
                  [Function],
                  ";

  ",
                  [Function],
                  "

  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
",
                  ";
  ",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": [Function],
              "withComponent": [Function],
            }
          }
          clickData={
            Object {
              "customEvents": Array [
                "event65",
              ],
            }
          }
          data-locator=""
          disableButton={true}
          fill="DARK"
          module="checkout"
          name="apply_gift_card"
          onPress={[Function]}
          pageData={
            Object {
              "pageName": "checkout:payment",
              "pageSection": "checkout",
              "pageShortName": "checkout",
              "pageSubSection": "checkout",
              "pageSubSubSection": "checkout",
              "pageType": "checkout",
            }
          }
          text="lbl_giftcard_applyBtn"
          type="submit"
        />
      </Styled(View)>
    </Styled(View)>
  </Styled(View)>
</Fragment>
`;

exports[`GiftCardTileVanilla should render gift card tile with 100 order balance 1`] = `
<Fragment>
  <Styled(View)>
    <Styled(View)>
      <Styled(View)
        flex={2}
      >
        <Styled(Text)>
          <Styled(Styled(BodyCopy))
            accessibilityText=""
            dataLocator=""
            fontFamily="secondary"
            fontSize="fs16"
            fontWeight="regular"
            margin={null}
            numberOfLines={null}
            spacingStyles="margin-bottom-MED"
            text="lbl_giftcard_endingIn  "
            textDecoration={null}
          />
        </Styled(Text)>
      </Styled(View)>
      <Styled(View)
        flex={1}
      >
        <Connect(ClickTracker)
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "active": false,
                "buttonVariation": "fixed-width",
                "color": "",
                "customStyle": Object {},
                "customTextStyle": null,
                "disableButton": false,
                "fill": "",
                "fullWidth": "",
                "iconColor": "gray.800",
                "iconName": "chevron-down",
                "iconSize": "fs12",
                "locator": "",
                "navigation": Object {},
                "onPress": null,
                "paddings": "12px 32px 12px 32px",
                "selected": false,
                "selectedIcon": "chevron-up",
                "showIcon": false,
                "text": "",
                "theme": Object {},
                "url": "",
                "withNoLineHeight": false,
              },
              "attrs": Array [],
              "displayName": "Styled(CustomButton)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
    ",
                  "
  justify-content: center;
  min-height: 32px;
  border: 1px solid ",
                  [Function],
                  ";
  opacity: ",
                  [Function],
                  ";

  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";

  ",
                  [Function],
                  ";

  ",
                  [Function],
                  "

  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
",
                  ";
  ",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": [Function],
              "withComponent": [Function],
            }
          }
          clickData={
            Object {
              "customEvents": Array [
                "event65",
              ],
            }
          }
          data-locator=""
          disableButton={false}
          fill="DARK"
          module="checkout"
          name="apply_gift_card"
          onPress={[Function]}
          pageData={
            Object {
              "pageName": "checkout:payment",
              "pageSection": "checkout",
              "pageShortName": "checkout",
              "pageSubSection": "checkout",
              "pageSubSubSection": "checkout",
              "pageType": "checkout",
            }
          }
          text="lbl_giftcard_applyBtn"
          type="submit"
        />
      </Styled(View)>
    </Styled(View)>
  </Styled(View)>
</Fragment>
`;

exports[`GiftCardTileVanilla should render gift card tile with errors 1`] = `
<Fragment>
  <Styled(View)>
    <Styled(View)>
      <Styled(View)
        flex={2}
      >
        <Styled(Text)>
          <Styled(Styled(BodyCopy))
            accessibilityText=""
            dataLocator=""
            fontFamily="secondary"
            fontSize="fs16"
            fontWeight="regular"
            margin={null}
            numberOfLines={null}
            spacingStyles="margin-bottom-MED"
            text="lbl_giftcard_endingIn  "
            textDecoration={null}
          />
        </Styled(Text)>
      </Styled(View)>
      <Styled(View)
        flex={1}
      >
        <Connect(ClickTracker)
          as={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "active": false,
                "buttonVariation": "fixed-width",
                "color": "",
                "customStyle": Object {},
                "customTextStyle": null,
                "disableButton": false,
                "fill": "",
                "fullWidth": "",
                "iconColor": "gray.800",
                "iconName": "chevron-down",
                "iconSize": "fs12",
                "locator": "",
                "navigation": Object {},
                "onPress": null,
                "paddings": "12px 32px 12px 32px",
                "selected": false,
                "selectedIcon": "chevron-up",
                "showIcon": false,
                "text": "",
                "theme": Object {},
                "url": "",
                "withNoLineHeight": false,
              },
              "attrs": Array [],
              "displayName": "Styled(CustomButton)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
    ",
                  "
  justify-content: center;
  min-height: 32px;
  border: 1px solid ",
                  [Function],
                  ";
  opacity: ",
                  [Function],
                  ";

  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";

  ",
                  [Function],
                  ";

  ",
                  [Function],
                  "

  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
  ",
                  [Function],
                  ";
",
                  ";
  ",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": [Function],
              "withComponent": [Function],
            }
          }
          clickData={
            Object {
              "customEvents": Array [
                "event65",
              ],
            }
          }
          data-locator=""
          disableButton={true}
          fill="DARK"
          module="checkout"
          name="apply_gift_card"
          onPress={[Function]}
          pageData={
            Object {
              "pageName": "checkout:payment",
              "pageSection": "checkout",
              "pageShortName": "checkout",
              "pageSubSection": "checkout",
              "pageSubSubSection": "checkout",
              "pageType": "checkout",
            }
          }
          text="lbl_giftcard_applyBtn"
          type="submit"
        />
      </Styled(View)>
    </Styled(View)>
  </Styled(View)>
</Fragment>
`;

exports[`GiftCardTileVanilla should render gift card tile with isGiftCardApplied 1`] = `
<Fragment>
  <Styled(View)>
    <Styled(View)>
      <Styled(View)
        flex={2}
      >
        <Styled(Text)>
          <Styled(Styled(BodyCopy))
            accessibilityText=""
            dataLocator=""
            fontFamily="secondary"
            fontSize="fs16"
            fontWeight="regular"
            margin={null}
            numberOfLines={null}
            spacingStyles="margin-bottom-MED"
            text="lbl_giftcard_endingIn undefined  | lbl_giftcard_remainingBal: $0.25"
            textDecoration={null}
          />
        </Styled(Text)>
      </Styled(View)>
      <Styled(View)
        flex={1}
      >
        <Styled(CustomButton)
          active={false}
          buttonVariation="fixed-width"
          color=""
          customStyle={Object {}}
          customTextStyle={null}
          data-locator=""
          disableButton={false}
          fill=""
          fullWidth=""
          iconColor="gray.800"
          iconName="chevron-down"
          iconSize="fs12"
          locator=""
          navigation={Object {}}
          onPress={[Function]}
          paddings="12px 32px 12px 32px"
          selected={false}
          selectedIcon="chevron-up"
          showIcon={false}
          text="lbl_giftcard_removeBtn"
          theme={Object {}}
          type="submit"
          url=""
          withNoLineHeight={false}
        />
      </Styled(View)>
    </Styled(View)>
  </Styled(View)>
</Fragment>
`;
