// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GiftCardTileVanilla should render gift card tile 1`] = `
<div
  className="test"
>
  <div
    className="gift_card_box elem-mt-SM"
  >
    <Styled(Row)
      className="gift-card-row"
    >
      <Styled(Col)
        className="gift-tile-msg-container"
        colSize={
          Object {
            "large": 8,
            "medium": 4,
            "small": 4,
          }
        }
      >
        <Styled(BodyCopy)
          className="gift_card_number_detail available_giftCards_text"
          color="text.secondary"
          component="p"
          fontFamily="secondary"
          fontSize="fs16"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          textAlign="left"
        >
          lbl_giftcard_endingIn 
          <span
            className="remainingBalanceText"
          />
        </Styled(BodyCopy)>
      </Styled(Col)>
      <Styled(Col)
        className="gift-action-container"
        colSize={
          Object {
            "large": 4,
            "medium": 4,
            "small": 2,
          }
        }
      >
        <Styled(Button)
          buttonVariation="variable-width"
          className="gift_apply_button gift-action-btn"
          data-locator="gift_apply_button"
          disabled={true}
          fullWidth="true"
          onClick={[Function]}
          type="submit"
        >
          lbl_giftcard_applyBtn
        </Styled(Button)>
      </Styled(Col)>
    </Styled(Row)>
  </div>
</div>
`;

exports[`GiftCardTileVanilla should render gift card tile with 0 order balance 1`] = `
<div
  className="test"
>
  <div
    className="gift_card_box elem-mt-SM"
  >
    <Styled(Row)
      className="gift-card-row"
    >
      <Styled(Col)
        className="gift-tile-msg-container"
        colSize={
          Object {
            "large": 8,
            "medium": 4,
            "small": 4,
          }
        }
      >
        <Styled(BodyCopy)
          className="gift_card_number_detail available_giftCards_text"
          color="text.secondary"
          component="p"
          fontFamily="secondary"
          fontSize="fs16"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          textAlign="left"
        >
          lbl_giftcard_endingIn 
          <span
            className="remainingBalanceText"
          />
        </Styled(BodyCopy)>
      </Styled(Col)>
      <Styled(Col)
        className="gift-action-container"
        colSize={
          Object {
            "large": 4,
            "medium": 4,
            "small": 2,
          }
        }
      >
        <Styled(Button)
          buttonVariation="variable-width"
          className="gift_apply_button gift-action-btn"
          data-locator="gift_apply_button"
          disabled={true}
          fullWidth="true"
          onClick={[Function]}
          type="submit"
        >
          lbl_giftcard_applyBtn
        </Styled(Button)>
      </Styled(Col)>
    </Styled(Row)>
  </div>
</div>
`;

exports[`GiftCardTileVanilla should render gift card tile with 100 order balance 1`] = `
<div
  className="test"
>
  <div
    className="gift_card_box elem-mt-SM"
  >
    <Styled(Row)
      className="gift-card-row"
    >
      <Styled(Col)
        className="gift-tile-msg-container"
        colSize={
          Object {
            "large": 8,
            "medium": 4,
            "small": 4,
          }
        }
      >
        <Styled(BodyCopy)
          className="gift_card_number_detail available_giftCards_text"
          color="text.secondary"
          component="p"
          fontFamily="secondary"
          fontSize="fs16"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          textAlign="left"
        >
          lbl_giftcard_endingIn 
          <span
            className="remainingBalanceText"
          />
        </Styled(BodyCopy)>
      </Styled(Col)>
      <Styled(Col)
        className="gift-action-container"
        colSize={
          Object {
            "large": 4,
            "medium": 4,
            "small": 2,
          }
        }
      >
        <Styled(Button)
          buttonVariation="variable-width"
          className="gift_apply_button gift-action-btn"
          data-locator="gift_apply_button"
          disabled={false}
          fullWidth="true"
          onClick={[Function]}
          type="submit"
        >
          lbl_giftcard_applyBtn
        </Styled(Button)>
      </Styled(Col)>
    </Styled(Row)>
  </div>
</div>
`;

exports[`GiftCardTileVanilla should render gift card tile with errors 1`] = `
<div
  className="test"
>
  <div
    className="gift_card_box elem-mt-SM"
  >
    <Styled(Row)>
      <Styled(Col)
        colSize={
          Object {
            "large": 9,
            "medium": 5,
            "small": 3,
          }
        }
      >
        <Styled(ErrorMessage)
          className="error_box"
          error="some error message"
        />
      </Styled(Col)>
    </Styled(Row)>
    <Styled(Row)
      className="gift-card-row"
    >
      <Styled(Col)
        className="gift-tile-msg-container"
        colSize={
          Object {
            "large": 8,
            "medium": 4,
            "small": 4,
          }
        }
      >
        <Styled(BodyCopy)
          className="gift_card_number_detail available_giftCards_text"
          color="text.secondary"
          component="p"
          fontFamily="secondary"
          fontSize="fs16"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          textAlign="left"
        >
          lbl_giftcard_endingIn 
          <span
            className="remainingBalanceText"
          />
        </Styled(BodyCopy)>
      </Styled(Col)>
      <Styled(Col)
        className="gift-action-container"
        colSize={
          Object {
            "large": 4,
            "medium": 4,
            "small": 2,
          }
        }
      >
        <Styled(Button)
          buttonVariation="variable-width"
          className="gift_apply_button gift-action-btn"
          data-locator="gift_apply_button"
          disabled={true}
          fullWidth="true"
          onClick={[Function]}
          type="submit"
        >
          lbl_giftcard_applyBtn
        </Styled(Button)>
      </Styled(Col)>
    </Styled(Row)>
  </div>
</div>
`;

exports[`GiftCardTileVanilla should render gift card tile with isGiftCardApplied 1`] = `
<div
  className="test"
>
  <div
    className="gift_card_box elem-mt-SM"
  >
    <Styled(Row)
      className="gift-card-row"
    >
      <Styled(Col)
        className="gift-tile-msg-container"
        colSize={
          Object {
            "large": 8,
            "medium": 4,
            "small": 4,
          }
        }
      >
        <Styled(BodyCopy)
          className="gift_card_number_detail "
          color="text.secondary"
          component="p"
          fontFamily="secondary"
          fontSize="fs16"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          textAlign="left"
        >
          lbl_giftcard_endingIn undefined | 
          <span
            className="remainingBalanceText"
          >
            lbl_giftcard_remainingBal: $0
          </span>
        </Styled(BodyCopy)>
      </Styled(Col)>
      <Styled(Col)
        className="gift-action-container"
        colSize={
          Object {
            "large": 4,
            "medium": 4,
            "small": 2,
          }
        }
      >
        <Styled(Button)
          buttonVariation="variable-width"
          className="gift_remove_button gift-action-btn"
          data-locator="gift_apply_button"
          disabled={false}
          fullWidth="true"
          onClick={[Function]}
          type="submit"
        >
          lbl_giftcard_removeBtn
        </Styled(Button)>
      </Styled(Col)>
    </Styled(Row)>
  </div>
</div>
`;
