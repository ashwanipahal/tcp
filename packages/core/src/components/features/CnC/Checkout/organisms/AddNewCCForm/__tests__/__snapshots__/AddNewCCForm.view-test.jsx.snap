// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AddNewCCForm should render correctly 1`] = `
<Fragment>
  <Styled(CreditCardFields)
    cardNumbProps={
      Object {
        "colSize": Object {
          "large": 6,
          "medium": 8,
          "small": 6,
        },
      }
    }
    cardType={null}
    creditFieldLabels={
      Object {
        "creditCardNumber": undefined,
        "cvvCode": undefined,
        "expMonth": undefined,
        "expYear": undefined,
      }
    }
    cvvError={null}
    cvvProps={
      Object {
        "colSize": Object {
          "large": 2,
          "medium": 2,
          "small": 2,
        },
      }
    }
    expMonthProps={
      Object {
        "colSize": Object {
          "large": 2,
          "medium": 3,
          "small": 2,
        },
        "ignoreGutter": Object {
          "small": false,
        },
      }
    }
    expYearProps={
      Object {
        "colSize": Object {
          "large": 2,
          "medium": 3,
          "small": 2,
        },
      }
    }
    isExpirationRequired={true}
    showCvv={true}
    variation="secondary"
  />
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        className="elem-mb-LRG elem-mt-LRG"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gZMcBi",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  display: block;
  align-items: ",
                [Function],
                ";

  & .CheckBox__input {
    flex: 0 0 auto;
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    height: ",
                "25px",
                ";
    width: ",
                "25px",
                ";
    margin: 0;
    margin-right: ",
                [Function],
                ";
    display: inline-block;
    vertical-align: top;
  }

  & .CheckBox__input:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:before {
    background: ",
                [Function],
                ";
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:after {
    transform: rotate(225deg);
    content: '';
    border: 2px solid ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    border-right: 0;
    border-bottom: 0;
    left: 10px;
    top: 5px;
    position: absolute;
  }

  & .CheckBox__text {
    width: calc(100% - 45px);
    display: inline-block;
  }

  & .CheckBox__text a {
    color: ",
                [Function],
                ";
  }

  & .disabled {
    opacity: ",
                [Function],
                ";
  }

  & .Checkbox__error {
    display: flex;
    flex-direction: row;
    padding-left: ",
                [Function],
                ";
  }
  & .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: ",
                [Function],
                ";
    width: ",
                [Function],
                ";
    margin-right: 4px;
    margin-top: 2px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(InputCheckbox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gZMcBi",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        name="saveToAccount"
        onChange={[Function]}
        showDefaultCheckbox={false}
      >
        <Styled(BodyCopy)
          className={null}
          color="text.primary"
          component="p"
          fontFamily="secondary"
          fontSize="fs16"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          textAlign="left"
        />
      </Field>
    </Styled(Col)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={true}
  >
    <Styled(Col)
      colSize={
        Object {
          "large": 6,
          "medium": 4,
          "small": 6,
        }
      }
    >
      <Field
        className="elem-mb-LRG"
        component={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-gZMcBi",
              "isStatic": false,
              "rules": Array [
                "
  ",
                "
  display: block;
  align-items: ",
                [Function],
                ";

  & .CheckBox__input {
    flex: 0 0 auto;
    position: relative;
    top: 0;
    appearance: none;
    outline: 0;
    border: 0;
    height: ",
                "25px",
                ";
    width: ",
                "25px",
                ";
    margin: 0;
    margin-right: ",
                [Function],
                ";
    display: inline-block;
    vertical-align: top;
  }

  & .CheckBox__input:before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    left: 0;
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:before {
    background: ",
                [Function],
                ";
    border: 1px solid ",
                [Function],
                ";
  }

  & .CheckBox__input:checked:after {
    transform: rotate(225deg);
    content: '';
    border: 2px solid ",
                [Function],
                ";
    font-size: ",
                [Function],
                "px;
    width: ",
                [Function],
                ";
    height: 10px;
    border-right: 0;
    border-bottom: 0;
    left: 10px;
    top: 5px;
    position: absolute;
  }

  & .CheckBox__text {
    width: calc(100% - 45px);
    display: inline-block;
  }

  & .CheckBox__text a {
    color: ",
                [Function],
                ";
  }

  & .disabled {
    opacity: ",
                [Function],
                ";
  }

  & .Checkbox__error {
    display: flex;
    flex-direction: row;
    padding-left: ",
                [Function],
                ";
  }
  & .warning-icon {
    background: transparent url('/static/images/circle-alert-fill.svg') no-repeat 0 0;
    background-size: contain;
    border: none;
    height: ",
                [Function],
                ";
    width: ",
                [Function],
                ";
    margin-right: 4px;
    margin-top: 2px;
  }
",
                ";
",
              ],
            },
            "displayName": "Styled(InputCheckbox)",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-gZMcBi",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          }
        }
        disabled={false}
        name="defaultPayment"
        showDefaultCheckbox={false}
      >
        <Styled(BodyCopy)
          className={null}
          color="text.primary"
          component="p"
          fontFamily="secondary"
          fontSize="fs16"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          textAlign="left"
        />
      </Field>
    </Styled(Col)>
  </Styled(Row)>
</Fragment>
`;
