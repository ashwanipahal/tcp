// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PickUpFormPart component  should renders correctly props with state update  1`] = `
<Fragment>
  <CheckoutProgressIndicator
    activeStage="pickup"
    navigation={null}
  />
  <ScrollViewMock>
    <Styled(View)>
      <Styled(View)>
        <ErrorMessage
          bagPage={false}
          className="pickupError"
          dataLocator="pickup-error"
          error="Error handle"
          fontSize="fs14"
          fontWeight="black"
        />
      </Styled(View)>
      <Styled(View)>
        <Styled(Text) />
        <Styled(View)>
          <FormSection
            name="pickUpContact"
          >
            <Styled(ContactFormFields)
              className="pickup-contact-guest-form"
              labels={Object {}}
              showEmailAddress={true}
              showPhoneNumber={true}
            />
          </FormSection>
        </Styled(View)>
        <Styled(View)>
          <FormSection
            name="smsSignUp"
          >
            <SMSFormFields
              addressPhoneNo=""
              altInitValue=""
              dispatch={[MockFunction]}
              formName="checkoutPickup"
              formSection="smsSignUp"
              isOrderUpdateChecked={false}
              labels={Object {}}
              showDefaultCheckbox={false}
              variation="secondary"
            />
          </FormSection>
        </Styled(View)>
        <Styled(View)>
          <Styled(View)>
            <Styled(View)>
              <Field
                component={[Function]}
                dataLocator="hide-show-checkbox"
                enableSuccessCheck={false}
                name="emailSignup"
              />
            </Styled(View)>
            <Styled(View)>
              <Styled(View)>
                <Styled(BodyCopy)
                  accessibilityText=""
                  dataLocator="pickup-email-signUp-heading-lbl"
                  fontSize="fs14"
                  fontWeight="regular"
                  margin={null}
                  mobileFontFamily="secondary"
                  numberOfLines={null}
                  textDecoration={null}
                />
              </Styled(View)>
            </Styled(View)>
          </Styled(View)>
          <Styled(View)>
            <Styled(View) />
            <Styled(View)>
              <Styled(BodyCopy)
                accessibilityText=""
                dataLocator=""
                fontFamily="primary"
                fontSize="fs10"
                fontWeight="regular"
                margin={null}
                numberOfLines={null}
                textDecoration={null}
              />
              <Styled(View)>
                <Styled(BodyCopy)
                  accessibilityText=""
                  dataLocator=""
                  fontFamily="primary"
                  fontSize="fs10"
                  fontWeight="regular"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
              </Styled(View)>
              <Styled(Anchor)
                accessibilityLabel=""
                anchorVariation="primary"
                colorName={null}
                customStyle={Object {}}
                fontSizeVariation="small"
                href="#"
                justifyContent=""
                locator=""
                margins={null}
                noLink={true}
                onPress={null}
                target="_blank"
                text=""
                underline={true}
                visible={false}
              />
            </Styled(View)>
          </Styled(View)>
        </Styled(View)>
        <Styled(View)>
          <FormSection
            name="pickUpAlternate"
          >
            <Styled(PickUpAlternateFormPart)
              formName="checkoutPickup"
              formSection="pickUpAlternate"
              isAlternateUpdateChecked={false}
              isCondensed={false}
              isEditing={false}
              isExpressCheckout={false}
              isHasPickUpAlternatePerson={false}
              labels={Object {}}
              showNoteOnToggle={true}
            />
          </FormSection>
        </Styled(View)>
      </Styled(View)>
    </Styled(View)>
    <CnCCommonTemplate
      btnText="undefined: undefined"
      getPayPalSettings={Object {}}
      isConfirmationPage={false}
      isGuest={true}
      isPayPalWebViewEnable={false}
      pageCategory="pickupPage"
      routeToPage="ShippingPage"
      showAccordian={true}
      showPayPalButton={false}
    />
  </ScrollViewMock>
</Fragment>
`;

exports[`PickUpFormPart component should renders correctly props  present  1`] = `
<Fragment>
  <CheckoutProgressIndicator
    activeStage="pickup"
    navigation={null}
  />
  <ScrollViewMock>
    <Styled(View)>
      <Styled(View)>
        <ErrorMessage
          bagPage={false}
          className="pickupError"
          dataLocator="pickup-error"
          error="Error handle"
          fontSize="fs14"
          fontWeight="black"
        />
      </Styled(View)>
      <Styled(View)>
        <Styled(Text) />
        <Styled(View)>
          <FormSection
            name="pickUpContact"
          >
            <Styled(ContactFormFields)
              className="pickup-contact-guest-form"
              labels={Object {}}
              showEmailAddress={true}
              showPhoneNumber={true}
            />
          </FormSection>
        </Styled(View)>
        <Styled(View)>
          <FormSection
            name="smsSignUp"
          >
            <SMSFormFields
              addressPhoneNo=""
              altInitValue=""
              dispatch={[MockFunction]}
              formName="checkoutPickup"
              formSection="smsSignUp"
              isOrderUpdateChecked={false}
              labels={Object {}}
              showDefaultCheckbox={false}
              variation="secondary"
            />
          </FormSection>
        </Styled(View)>
        <Styled(View)>
          <Styled(View)>
            <Styled(View)>
              <Field
                component={[Function]}
                dataLocator="hide-show-checkbox"
                enableSuccessCheck={false}
                name="emailSignup"
              />
            </Styled(View)>
            <Styled(View)>
              <Styled(View)>
                <Styled(BodyCopy)
                  accessibilityText=""
                  dataLocator="pickup-email-signUp-heading-lbl"
                  fontSize="fs14"
                  fontWeight="regular"
                  margin={null}
                  mobileFontFamily="secondary"
                  numberOfLines={null}
                  textDecoration={null}
                />
              </Styled(View)>
            </Styled(View)>
          </Styled(View)>
          <Styled(View)>
            <Styled(View) />
            <Styled(View)>
              <Styled(BodyCopy)
                accessibilityText=""
                dataLocator=""
                fontFamily="primary"
                fontSize="fs10"
                fontWeight="regular"
                margin={null}
                numberOfLines={null}
                textDecoration={null}
              />
              <Styled(View)>
                <Styled(BodyCopy)
                  accessibilityText=""
                  dataLocator=""
                  fontFamily="primary"
                  fontSize="fs10"
                  fontWeight="regular"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
              </Styled(View)>
              <Styled(Anchor)
                accessibilityLabel=""
                anchorVariation="primary"
                colorName={null}
                customStyle={Object {}}
                fontSizeVariation="small"
                href="#"
                justifyContent=""
                locator=""
                margins={null}
                noLink={true}
                onPress={null}
                target="_blank"
                text=""
                underline={true}
                visible={false}
              />
            </Styled(View)>
          </Styled(View)>
        </Styled(View)>
        <Styled(View)>
          <FormSection
            name="pickUpAlternate"
          >
            <Styled(PickUpAlternateFormPart)
              formName="checkoutPickup"
              formSection="pickUpAlternate"
              isAlternateUpdateChecked={false}
              isCondensed={false}
              isEditing={true}
              isExpressCheckout={false}
              isHasPickUpAlternatePerson={false}
              labels={Object {}}
              showNoteOnToggle={true}
            />
          </FormSection>
        </Styled(View)>
      </Styled(View)>
    </Styled(View)>
    <CnCCommonTemplate
      btnText="undefined: undefined"
      getPayPalSettings={Object {}}
      isConfirmationPage={false}
      isGuest={true}
      isPayPalWebViewEnable={false}
      pageCategory="pickupPage"
      routeToPage="ShippingPage"
      showAccordian={true}
      showPayPalButton={false}
    />
  </ScrollViewMock>
</Fragment>
`;

exports[`PickUpFormPart component should renders correctly props not present 1`] = `
<Fragment>
  <CheckoutProgressIndicator
    activeStage="pickup"
    navigation={null}
  />
  <ScrollViewMock>
    <Styled(View)>
      <Styled(View)>
        <ErrorMessage
          bagPage={false}
          className="pickupError"
          dataLocator="pickup-error"
          error=""
          fontSize="fs14"
          fontWeight="black"
        />
      </Styled(View)>
      <Styled(View)>
        <CheckoutSectionTitleDisplay
          dataLocator="pickup-title"
        />
        <Styled(View)>
          <FormSection
            name="pickUpContact"
          >
            <Styled(PickupMainContactEditForm)
              className="pickup-contact-guest-form"
              dispatch={[MockFunction]}
              editModeSubmissionError=""
              errorMessageRef={[Function]}
              formData={
                Object {
                  "emailAddress": "",
                  "firstName": "",
                  "lastName": "",
                  "phoneNumber": "",
                }
              }
              handleExitEditModeClick={[Function]}
              handleSubmit={
                [MockFunction] {
                  "calls": Array [
                    Array [
                      [Function],
                    ],
                    Array [
                      [Function],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                    Object {
                      "type": "return",
                      "value": undefined,
                    },
                  ],
                }
              }
              isEditing={false}
              labels={Object {}}
              onEditModeChange={[Function]}
              showPhoneNumber={true}
            />
          </FormSection>
        </Styled(View)>
        <Styled(View)>
          <FormSection
            name="pickUpAlternate"
          >
            <Styled(PickUpAlternateFormPart)
              formName="checkoutPickup"
              formSection="pickUpAlternate"
              isAlternateUpdateChecked={false}
              isCondensed={false}
              isEditing={false}
              isExpressCheckout={false}
              isHasPickUpAlternatePerson={false}
              labels={Object {}}
              showNoteOnToggle={true}
            />
          </FormSection>
        </Styled(View)>
      </Styled(View)>
    </Styled(View)>
    <CnCCommonTemplate
      btnText="undefined: undefined"
      getPayPalSettings={Object {}}
      isConfirmationPage={false}
      isGuest={false}
      isPayPalWebViewEnable={false}
      pageCategory="pickupPage"
      routeToPage="ShippingPage"
      showAccordian={true}
      showPayPalButton={false}
    />
  </ScrollViewMock>
</Fragment>
`;
