// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GiftCardsContainer Container should render CheckoutPage view section 1`] = `
<ReduxForm
  backLinkPickup={true}
  backLinkShipping={true}
  cardList={
    Immutable.List [
      Object {
        "accountNo": "************3743",
        "addressDetails": Object {
          "phone1": "1234567891",
        },
        "ccBrand": "PLACE CARD",
        "ccType": "PLACE CARD1",
        "creditCardId": 82596,
        "defaultInd": false,
        "onFileCardKey": 82596,
      },
    ]
  }
  cvvCodeRichText={Object {}}
  destroyOnUnmount={true}
  enableReinitialize={true}
  forceUnregisterOnUnmount={false}
  form="checkoutBillingPayment"
  getFormState={[Function]}
  initialValues={
    Object {
      "onFileCardKey": undefined,
      "paymentMethodId": "creditCard",
    }
  }
  isGuest={true}
  keepDirtyOnReinitialize={false}
  labels={
    Object {
      "lbl_billing_addCreditBtn": "ADD A NEW CREDIT CARD",
      "lbl_billing_addCreditHeading": "+ Add a new Credit Card",
      "lbl_billing_billingAddress": "Billing Address",
      "lbl_billing_cardDetailsTitle": "Card Details",
      "lbl_billing_creditCard": "Credit Card",
      "lbl_billing_creditCardEnd": "ending in ",
      "lbl_billing_cvvCode": "CVV Code",
      "lbl_billing_default": "Default",
      "lbl_billing_defaultPayment": "Set as default payment method",
      "lbl_billing_default_card": "DEFAULT",
      "lbl_billing_editBtn": "Edit",
      "lbl_billing_paymentMethodTitle": "Payment Method",
      "lbl_billing_paypal": "Pay Pal",
      "lbl_billing_select": "SELECT",
      "lbl_billing_selectCardTitle": "SELECT CARD",
      "lbl_billing_selectFromCard": "Select from card on file",
      "lbl_billing_venmo": "Venmo",
    }
  }
  nextSubmitText=""
  onFileCardKey={82596}
  onSubmit={[Function]}
  orderHasShipping={true}
  paymentMethodId=""
  persistentSubmitErrors={false}
  pure={true}
  shouldAsyncValidate={[Function]}
  shouldError={[Function]}
  shouldValidate={[Function]}
  shouldWarn={[Function]}
  submitAsSideEffect={false}
  touchOnBlur={true}
  touchOnChange={false}
  updateUnregisteredFields={false}
  validate={[Function]}
/>
`;
