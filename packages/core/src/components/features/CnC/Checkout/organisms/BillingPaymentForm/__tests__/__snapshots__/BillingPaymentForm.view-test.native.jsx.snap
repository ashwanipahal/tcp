// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ButtonList component renders correctly if  cards present and addNewCCState is true 1`] = `
<Fragment>
  <Styled(View)>
    <Styled(BodyCopy)
      accessibilityText=""
      color="gray.900"
      data-locator="billing-details"
      dataLocator=""
      fontFamily="primary"
      fontSize="fs26"
      fontWeight="regular"
      margin={null}
      numberOfLines={null}
      spacingStyles="margin-bottom-MED"
      text="Payment Method"
      textDecoration={null}
    />
  </Styled(View)>
  <FormSection
    name="shipmentMethods"
  >
    <PaymentMethods
      formName="checkoutBillingPayment"
      paymentMethods={
        Array [
          Object {
            "displayName": "Credit Card",
            "id": "creditCard",
          },
          Object {
            "displayName": "Pay Pal",
            "id": "payPal",
          },
          Object {
            "displayName": "Venmo",
            "id": "venmo",
          },
        ]
      }
      selectedPaymentId="creditCard"
    />
  </FormSection>
  <Styled(View)>
    <Styled(View)>
      <Styled(View)>
        <Styled(BodyCopy)
          accessibilityText=""
          dataLocator="billing-payment-bilingcreditcardlabel"
          fontSize="fs10"
          fontWeight="extrabold"
          margin={null}
          mobileFontFamily="primary"
          numberOfLines={null}
          textDecoration={null}
        />
      </Styled(View)>
      <Styled(CreditCardDropDown)
        addNewCC={[Function]}
        addNewCCState={true}
        creditCardList={
          Immutable.List [
            Object {
              "accountNo": "************3743",
              "addressDetails": Object {
                "addressLine1": "Dorney Park Road",
                "addressLine2": "",
                "city": "Allentown",
                "country": "US",
              },
              "ccBrand": "PLACE CARD",
              "ccType": "PLACE CARD1",
              "creditCardId": 82596,
              "defaultInd": false,
            },
          ]
        }
        formName="checkoutBillingPayment"
        labels={
          Object {
            "creditCardEnd": "ending in ",
            "cvvCode": "CVV Code",
            "edit": "Edit",
            "lbl_billing_addCreditBtn": "ADD A NEW CREDIT CARD",
            "lbl_billing_addCreditHeading": "+ Add a new Credit Card",
            "lbl_billing_billingAddress": "Billing Address",
            "lbl_billing_cardDetailsTitle": "Card Details",
            "lbl_billing_creditCard": "Credit Card",
            "lbl_billing_default": "Default",
            "lbl_billing_defaultPayment": "Set as default payment method",
            "lbl_billing_default_card": "DEFAULT",
            "lbl_billing_paypal": "Pay Pal",
            "lbl_billing_select": "SELECT",
            "lbl_billing_selectCardTitle": "SELECT CARD",
            "lbl_billing_selectFromCard": "Select from card on file",
            "lbl_billing_venmo": "Venmo",
            "paymentMethod": "Payment Method",
          }
        }
        onChange={[Function]}
        onFileCardKey={82596}
        selectedOnFileCardKey=""
      />
    </Styled(View)>
  </Styled(View)>
  <AddNewCCForm
    addNewCCState={true}
    billingData={null}
    cardList={null}
    cardType={null}
    creditFieldLabels={Object {}}
    cvvError="Enter correct code"
    cvvInfo={
      <ReactTooltip
        backgroundColor="#fff"
        height={96}
        onClose={[Function]}
        onOpen={[Function]}
        overlayColor="rgba(250, 250, 250, 0.80)"
        pointerColor="#fff"
        popover={null}
        toggleOnPress={true}
        width={240}
        withOverlay={false}
        withPointer={true}
      >
        <ForwardRef
          alt=""
          height={15}
          host=""
          source={
            Object {
              "testUri": "../../../../core/src/assets/info-icon.png",
            }
          }
          url=""
          width={15}
        />
      </ReactTooltip>
    }
    formName="checkoutBillingPayment"
    isExpirationRequired={true}
    isGuest={false}
    isSaveToAccountChecked={false}
    labels={
      Object {
        "creditCardEnd": "ending in ",
        "cvvCode": "CVV Code",
        "edit": "Edit",
        "lbl_billing_addCreditBtn": "ADD A NEW CREDIT CARD",
        "lbl_billing_addCreditHeading": "+ Add a new Credit Card",
        "lbl_billing_billingAddress": "Billing Address",
        "lbl_billing_cardDetailsTitle": "Card Details",
        "lbl_billing_creditCard": "Credit Card",
        "lbl_billing_default": "Default",
        "lbl_billing_defaultPayment": "Set as default payment method",
        "lbl_billing_default_card": "DEFAULT",
        "lbl_billing_paypal": "Pay Pal",
        "lbl_billing_select": "SELECT",
        "lbl_billing_selectCardTitle": "SELECT CARD",
        "lbl_billing_selectFromCard": "Select from card on file",
        "lbl_billing_venmo": "Venmo",
        "paymentMethod": "Payment Method",
      }
    }
  />
  <Styled(CheckoutAddress)
    addNewCCState={true}
    billingData={null}
    formName="checkoutBillingPayment"
    isGuest={false}
    isSameAsShippingChecked={false}
    labels={
      Object {
        "creditCardEnd": "ending in ",
        "cvvCode": "CVV Code",
        "edit": "Edit",
        "lbl_billing_addCreditBtn": "ADD A NEW CREDIT CARD",
        "lbl_billing_addCreditHeading": "+ Add a new Credit Card",
        "lbl_billing_billingAddress": "Billing Address",
        "lbl_billing_cardDetailsTitle": "Card Details",
        "lbl_billing_creditCard": "Credit Card",
        "lbl_billing_default": "Default",
        "lbl_billing_defaultPayment": "Set as default payment method",
        "lbl_billing_default_card": "DEFAULT",
        "lbl_billing_paypal": "Pay Pal",
        "lbl_billing_select": "SELECT",
        "lbl_billing_selectCardTitle": "SELECT CARD",
        "lbl_billing_selectFromCard": "Select from card on file",
        "lbl_billing_venmo": "Venmo",
        "paymentMethod": "Payment Method",
      }
    }
    onFileAddressId={null}
    orderHasShipping={true}
    selectedOnFileAddressId={null}
    shippingAddress={null}
    userAddresses={null}
  />
  <CnCCommonTemplate
    backLinkText=""
    btnText=""
    onBackLinkPress={[Function]}
    routeToPage=""
  />
</Fragment>
`;

exports[`ButtonList component renders correctly if  no cards present  1`] = `
<Fragment>
  <Styled(View)>
    <Styled(BodyCopy)
      accessibilityText=""
      color="gray.900"
      data-locator="billing-details"
      dataLocator=""
      fontFamily="primary"
      fontSize="fs26"
      fontWeight="regular"
      margin={null}
      numberOfLines={null}
      spacingStyles="margin-bottom-MED"
      text="Payment Method"
      textDecoration={null}
    />
  </Styled(View)>
  <FormSection
    name="shipmentMethods"
  >
    <PaymentMethods
      formName="checkoutBillingPayment"
      paymentMethods={
        Array [
          Object {
            "displayName": "Credit Card",
            "id": "creditCard",
          },
          Object {
            "displayName": "Pay Pal",
            "id": "payPal",
          },
          Object {
            "displayName": "Venmo",
            "id": "venmo",
          },
        ]
      }
      selectedPaymentId="creditCard"
    />
  </FormSection>
  <AddNewCCForm
    addNewCCState={true}
    billingData={null}
    cardList={null}
    cardType={null}
    creditFieldLabels={Object {}}
    cvvError="Enter correct code"
    cvvInfo={
      <ReactTooltip
        backgroundColor="#fff"
        height={96}
        onClose={[Function]}
        onOpen={[Function]}
        overlayColor="rgba(250, 250, 250, 0.80)"
        pointerColor="#fff"
        popover={null}
        toggleOnPress={true}
        width={240}
        withOverlay={false}
        withPointer={true}
      >
        <ForwardRef
          alt=""
          height={15}
          host=""
          source={
            Object {
              "testUri": "../../../../core/src/assets/info-icon.png",
            }
          }
          url=""
          width={15}
        />
      </ReactTooltip>
    }
    formName="checkoutBillingPayment"
    isExpirationRequired={true}
    isGuest={false}
    isSaveToAccountChecked={false}
    labels={
      Object {
        "creditCardEnd": "ending in ",
        "cvvCode": "CVV Code",
        "edit": "Edit",
        "lbl_billing_addCreditBtn": "ADD A NEW CREDIT CARD",
        "lbl_billing_addCreditHeading": "+ Add a new Credit Card",
        "lbl_billing_billingAddress": "Billing Address",
        "lbl_billing_cardDetailsTitle": "Card Details",
        "lbl_billing_creditCard": "Credit Card",
        "lbl_billing_default": "Default",
        "lbl_billing_defaultPayment": "Set as default payment method",
        "lbl_billing_default_card": "DEFAULT",
        "lbl_billing_paypal": "Pay Pal",
        "lbl_billing_select": "SELECT",
        "lbl_billing_selectCardTitle": "SELECT CARD",
        "lbl_billing_selectFromCard": "Select from card on file",
        "lbl_billing_venmo": "Venmo",
        "paymentMethod": "Payment Method",
      }
    }
  />
  <Styled(CheckoutAddress)
    addNewCCState={true}
    billingData={null}
    formName="checkoutBillingPayment"
    isGuest={false}
    isSameAsShippingChecked={false}
    labels={
      Object {
        "creditCardEnd": "ending in ",
        "cvvCode": "CVV Code",
        "edit": "Edit",
        "lbl_billing_addCreditBtn": "ADD A NEW CREDIT CARD",
        "lbl_billing_addCreditHeading": "+ Add a new Credit Card",
        "lbl_billing_billingAddress": "Billing Address",
        "lbl_billing_cardDetailsTitle": "Card Details",
        "lbl_billing_creditCard": "Credit Card",
        "lbl_billing_default": "Default",
        "lbl_billing_defaultPayment": "Set as default payment method",
        "lbl_billing_default_card": "DEFAULT",
        "lbl_billing_paypal": "Pay Pal",
        "lbl_billing_select": "SELECT",
        "lbl_billing_selectCardTitle": "SELECT CARD",
        "lbl_billing_selectFromCard": "Select from card on file",
        "lbl_billing_venmo": "Venmo",
        "paymentMethod": "Payment Method",
      }
    }
    onFileAddressId={null}
    orderHasShipping={true}
    selectedOnFileAddressId={null}
    shippingAddress={null}
    userAddresses={null}
  />
  <CnCCommonTemplate
    backLinkText=""
    btnText=""
    onBackLinkPress={[Function]}
    routeToPage=""
  />
</Fragment>
`;

exports[`ButtonList component renders correctly if payment method is diff 1`] = `
<Fragment>
  <Styled(View)>
    <Styled(BodyCopy)
      accessibilityText=""
      color="gray.900"
      data-locator="billing-details"
      dataLocator=""
      fontFamily="primary"
      fontSize="fs26"
      fontWeight="regular"
      margin={null}
      numberOfLines={null}
      spacingStyles="margin-bottom-MED"
      text="Payment Method"
      textDecoration={null}
    />
  </Styled(View)>
  <FormSection
    name="shipmentMethods"
  >
    <PaymentMethods
      formName="checkoutBillingPayment"
      paymentMethods={
        Array [
          Object {
            "displayName": "Credit Card",
            "id": "creditCard",
          },
          Object {
            "displayName": "Pay Pal",
            "id": "payPal",
          },
          Object {
            "displayName": "Venmo",
            "id": "venmo",
          },
        ]
      }
      selectedPaymentId="ggg"
    />
  </FormSection>
  <Styled(View) />
  <CnCCommonTemplate
    backLinkText=""
    btnText=""
    onBackLinkPress={[Function]}
    routeToPage=""
  />
</Fragment>
`;

exports[`ButtonList component renders correctly without props 1`] = `
<Fragment>
  <Styled(View)>
    <Styled(BodyCopy)
      accessibilityText=""
      color="gray.900"
      data-locator="billing-details"
      dataLocator=""
      fontFamily="primary"
      fontSize="fs26"
      fontWeight="regular"
      margin={null}
      numberOfLines={null}
      spacingStyles="margin-bottom-MED"
      text="Payment Method"
      textDecoration={null}
    />
  </Styled(View)>
  <FormSection
    name="shipmentMethods"
  >
    <PaymentMethods
      dispatch={[MockFunction]}
      formName="checkoutBillingPayment"
      paymentMethods={
        Array [
          Object {
            "displayName": "Credit Card",
            "id": "creditCard",
          },
          Object {
            "displayName": "Pay Pal",
            "id": "payPal",
          },
          Object {
            "displayName": "Venmo",
            "id": "venmo",
          },
        ]
      }
      selectedPaymentId="creditCard"
    />
  </FormSection>
  <Styled(View)>
    <Styled(View)>
      <Styled(View)>
        <Styled(BodyCopy)
          accessibilityText=""
          dataLocator="billing-payment-bilingcreditcardlabel"
          fontSize="fs10"
          fontWeight="extrabold"
          margin={null}
          mobileFontFamily="primary"
          numberOfLines={null}
          textDecoration={null}
        />
      </Styled(View)>
      <Styled(CreditCardDropDown)
        addNewCC={[Function]}
        addNewCCState={false}
        creditCardList={
          Immutable.List [
            Object {
              "accountNo": "************3743",
              "addressDetails": Object {
                "addressLine1": "Dorney Park Road",
                "addressLine2": "",
                "city": "Allentown",
                "country": "US",
              },
              "ccBrand": "PLACE CARD",
              "ccType": "PLACE CARD1",
              "creditCardId": 82596,
              "defaultInd": false,
            },
          ]
        }
        dispatch={[MockFunction]}
        formName="checkoutBillingPayment"
        labels={
          Object {
            "creditCardEnd": "ending in ",
            "cvvCode": "CVV Code",
            "edit": "Edit",
            "lbl_billing_addCreditBtn": "ADD A NEW CREDIT CARD",
            "lbl_billing_addCreditHeading": "+ Add a new Credit Card",
            "lbl_billing_billingAddress": "Billing Address",
            "lbl_billing_cardDetailsTitle": "Card Details",
            "lbl_billing_creditCard": "Credit Card",
            "lbl_billing_default": "Default",
            "lbl_billing_defaultPayment": "Set as default payment method",
            "lbl_billing_default_card": "DEFAULT",
            "lbl_billing_paypal": "Pay Pal",
            "lbl_billing_select": "SELECT",
            "lbl_billing_selectCardTitle": "SELECT CARD",
            "lbl_billing_selectFromCard": "Select from card on file",
            "lbl_billing_venmo": "Venmo",
            "paymentMethod": "Payment Method",
          }
        }
        onChange={[Function]}
        onFileCardKey={82596}
        selectedOnFileCardKey={82596}
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(View)>
        <Styled(Anchor)
          accessibilityLabel=""
          anchorVariation="primary"
          colorName={null}
          customStyle={Object {}}
          fontSizeVariation="small"
          href="#"
          locator=""
          noLink={true}
          onPress={null}
          target="_blank"
          text="Edit"
          underline={true}
          visible={false}
        />
      </Styled(View)>
    </Styled(View)>
    <Styled(View)>
      <Styled(BodyCopy)
        accessibilityText=""
        color="gray.900"
        data-locator="billing-payment-method"
        dataLocator=""
        fontSize="fs16"
        fontWeight="extrabold"
        margin={null}
        mobileFontFamily="primary"
        numberOfLines={null}
        text="Payment Method"
        textDecoration={null}
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(CardImage)
        card={
          Object {
            "accountNo": "************3743",
            "addressDetails": Object {
              "addressLine1": "Dorney Park Road",
              "addressLine2": "",
              "city": "Allentown",
              "country": "US",
            },
            "ccBrand": "PLACE CARD",
            "ccType": "PLACE CARD1",
            "creditCardId": 82596,
            "defaultInd": false,
          }
        }
        cardNumber="ending in 3743"
      />
      <Styled(View)>
        <Field
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "ariaLabel": "input",
                "dataLocator": "input-field",
                "enableSuccessCheck": false,
                "id": "input",
                "keyboardType": "default",
                "label": "input",
                "marginBottom": true,
                "meta": Object {
                  "error": "",
                  "touched": "",
                },
                "onChangeText": [Function],
                "secureTextEntry": false,
                "showErrorIcon": true,
                "showSuccessCheck": false,
                "successText": "",
                "type": "text",
              },
              "attrs": Array [],
              "displayName": "Styled(TextBox)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
    ",
                  "
  ",
                  [Function],
                  ";
",
                  ";
  ",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": [Function],
              "withComponent": [Function],
            }
          }
          customStyle={
            Object {
              "height": 72,
            }
          }
          dataLocator="payment-cvv"
          id="cvvCode"
          label="CVV Code"
          name="cvvCode"
          type="text"
        />
        <Styled(View)>
          <ReactTooltip
            backgroundColor="#fff"
            height={96}
            onClose={[Function]}
            onOpen={[Function]}
            overlayColor="rgba(250, 250, 250, 0.80)"
            pointerColor="#fff"
            popover={null}
            toggleOnPress={true}
            width={240}
            withOverlay={false}
            withPointer={true}
          >
            <Styled(ImageComp)
              alt=""
              height={15}
              host=""
              source={
                Object {
                  "testUri": "../../../../core/src/assets/info-icon.png",
                }
              }
              url=""
              width={15}
            />
          </ReactTooltip>
        </Styled(View)>
      </Styled(View)>
    </Styled(View)>
    <Styled(View) />
    <Styled(View)>
      <Styled(Card)
        card={
          Object {
            "accountNo": "************3743",
            "addressDetails": Object {
              "addressLine1": "Dorney Park Road",
              "addressLine2": "",
              "city": "Allentown",
              "country": "US",
            },
            "ccBrand": "PLACE CARD",
            "ccType": "PLACE CARD1",
            "creditCardId": 82596,
            "defaultInd": false,
          }
        }
        cardNumber=""
        dataLocatorPrefix="billing-payment-card-detail"
        isDefault={false}
        selectedValue=""
        showAddress={true}
      />
    </Styled(View)>
  </Styled(View)>
  <CnCCommonTemplate
    backLinkText=""
    btnText=""
    onBackLinkPress={[Function]}
    routeToPage=""
  />
</Fragment>
`;

exports[`ButtonList component renders correctly without props 2`] = `
<Fragment>
  <Styled(View)>
    <Styled(BodyCopy)
      accessibilityText=""
      color="gray.900"
      data-locator="billing-details"
      dataLocator=""
      fontFamily="primary"
      fontSize="fs26"
      fontWeight="regular"
      margin={null}
      numberOfLines={null}
      spacingStyles="margin-bottom-MED"
      text="Payment Method"
      textDecoration={null}
    />
  </Styled(View)>
  <FormSection
    name="shipmentMethods"
  >
    <PaymentMethods
      dispatch={[MockFunction]}
      formName="checkoutBillingPayment"
      paymentMethods={
        Array [
          Object {
            "displayName": "Credit Card",
            "id": "creditCard",
          },
          Object {
            "displayName": "Pay Pal",
            "id": "payPal",
          },
          Object {
            "displayName": "Venmo",
            "id": "venmo",
          },
        ]
      }
      selectedPaymentId="creditCard"
    />
  </FormSection>
  <Styled(View)>
    <Styled(View)>
      <Styled(View)>
        <Styled(BodyCopy)
          accessibilityText=""
          dataLocator="billing-payment-bilingcreditcardlabel"
          fontSize="fs10"
          fontWeight="extrabold"
          margin={null}
          mobileFontFamily="primary"
          numberOfLines={null}
          textDecoration={null}
        />
      </Styled(View)>
      <Styled(CreditCardDropDown)
        addNewCC={[Function]}
        addNewCCState={false}
        creditCardList={
          Immutable.List [
            Object {
              "accountNo": "************3743",
              "addressDetails": Object {
                "addressLine1": "Dorney Park Road",
                "addressLine2": "",
                "city": "Allentown",
                "country": "US",
              },
              "ccBrand": "PLACE CARD",
              "ccType": "PLACE CARD1",
              "creditCardId": 82596,
              "defaultInd": false,
            },
          ]
        }
        dispatch={[MockFunction]}
        formName="checkoutBillingPayment"
        labels={
          Object {
            "creditCardEnd": "ending in ",
            "cvvCode": "CVV Code",
            "edit": "Edit",
            "lbl_billing_addCreditBtn": "ADD A NEW CREDIT CARD",
            "lbl_billing_addCreditHeading": "+ Add a new Credit Card",
            "lbl_billing_billingAddress": "Billing Address",
            "lbl_billing_cardDetailsTitle": "Card Details",
            "lbl_billing_creditCard": "Credit Card",
            "lbl_billing_default": "Default",
            "lbl_billing_defaultPayment": "Set as default payment method",
            "lbl_billing_default_card": "DEFAULT",
            "lbl_billing_paypal": "Pay Pal",
            "lbl_billing_select": "SELECT",
            "lbl_billing_selectCardTitle": "SELECT CARD",
            "lbl_billing_selectFromCard": "Select from card on file",
            "lbl_billing_venmo": "Venmo",
            "paymentMethod": "Payment Method",
          }
        }
        onChange={[Function]}
        onFileCardKey={82596}
        selectedOnFileCardKey={82596}
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(View)>
        <Styled(Anchor)
          accessibilityLabel=""
          anchorVariation="primary"
          colorName={null}
          customStyle={Object {}}
          fontSizeVariation="small"
          href="#"
          locator=""
          noLink={true}
          onPress={null}
          target="_blank"
          text="Edit"
          underline={true}
          visible={false}
        />
      </Styled(View)>
    </Styled(View)>
    <Styled(View)>
      <Styled(BodyCopy)
        accessibilityText=""
        color="gray.900"
        data-locator="billing-payment-method"
        dataLocator=""
        fontSize="fs16"
        fontWeight="extrabold"
        margin={null}
        mobileFontFamily="primary"
        numberOfLines={null}
        text="Payment Method"
        textDecoration={null}
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(CardImage)
        card={
          Object {
            "accountNo": "************3743",
            "addressDetails": Object {
              "addressLine1": "Dorney Park Road",
              "addressLine2": "",
              "city": "Allentown",
              "country": "US",
            },
            "ccBrand": "PLACE CARD",
            "ccType": "PLACE CARD1",
            "creditCardId": 82596,
            "defaultInd": false,
          }
        }
        cardNumber="ending in 3743"
      />
      <Styled(View)>
        <Field
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "ariaLabel": "input",
                "dataLocator": "input-field",
                "enableSuccessCheck": false,
                "id": "input",
                "keyboardType": "default",
                "label": "input",
                "marginBottom": true,
                "meta": Object {
                  "error": "",
                  "touched": "",
                },
                "onChangeText": [Function],
                "secureTextEntry": false,
                "showErrorIcon": true,
                "showSuccessCheck": false,
                "successText": "",
                "type": "text",
              },
              "attrs": Array [],
              "displayName": "Styled(TextBox)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
    ",
                  "
  ",
                  [Function],
                  ";
",
                  ";
  ",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": [Function],
              "withComponent": [Function],
            }
          }
          customStyle={
            Object {
              "height": 72,
            }
          }
          dataLocator="payment-cvv"
          id="cvvCode"
          label="CVV Code"
          name="cvvCode"
          type="text"
        />
        <Styled(View)>
          <ReactTooltip
            backgroundColor="#fff"
            height={96}
            onClose={[Function]}
            onOpen={[Function]}
            overlayColor="rgba(250, 250, 250, 0.80)"
            pointerColor="#fff"
            popover={null}
            toggleOnPress={true}
            width={240}
            withOverlay={false}
            withPointer={true}
          >
            <Styled(ImageComp)
              alt=""
              height={15}
              host=""
              source={
                Object {
                  "testUri": "../../../../core/src/assets/info-icon.png",
                }
              }
              url=""
              width={15}
            />
          </ReactTooltip>
        </Styled(View)>
      </Styled(View)>
    </Styled(View)>
    <Styled(View) />
    <Styled(View)>
      <Styled(Card)
        card={
          Object {
            "accountNo": "************3743",
            "addressDetails": Object {
              "addressLine1": "Dorney Park Road",
              "addressLine2": "",
              "city": "Allentown",
              "country": "US",
            },
            "ccBrand": "PLACE CARD",
            "ccType": "PLACE CARD1",
            "creditCardId": 82596,
            "defaultInd": false,
          }
        }
        cardNumber=""
        dataLocatorPrefix="billing-payment-card-detail"
        isDefault={false}
        selectedValue=""
        showAddress={true}
      />
    </Styled(View)>
  </Styled(View)>
  <CnCCommonTemplate
    backLinkText=""
    btnText=""
    onBackLinkPress={[Function]}
    routeToPage=""
  />
</Fragment>
`;

exports[`ButtonList component renders correctly without props with isPaymentDisabled true 1`] = `
<Fragment>
  <Styled(View)>
    <Styled(BodyCopy)
      accessibilityText=""
      color="gray.900"
      data-locator="billing-details"
      dataLocator=""
      fontFamily="primary"
      fontSize="fs26"
      fontWeight="regular"
      margin={null}
      numberOfLines={null}
      spacingStyles="margin-bottom-MED"
      text="Payment Method"
      textDecoration={null}
    />
  </Styled(View)>
  <FormSection
    name="shipmentMethods"
  >
    <PaymentMethods
      formName="checkoutBillingPayment"
      paymentMethods={
        Array [
          Object {
            "displayName": "Credit Card",
            "id": "creditCard",
          },
          Object {
            "displayName": "Pay Pal",
            "id": "payPal",
          },
          Object {
            "displayName": "Venmo",
            "id": "venmo",
          },
        ]
      }
      selectedPaymentId="creditCard"
    />
  </FormSection>
  <Styled(View)>
    <Styled(View)>
      <Styled(View)>
        <Styled(BodyCopy)
          accessibilityText=""
          dataLocator="billing-payment-bilingcreditcardlabel"
          fontSize="fs10"
          fontWeight="extrabold"
          margin={null}
          mobileFontFamily="primary"
          numberOfLines={null}
          textDecoration={null}
        />
      </Styled(View)>
      <Styled(CreditCardDropDown)
        addNewCC={[Function]}
        addNewCCState={false}
        creditCardList={
          Immutable.List [
            Object {
              "accountNo": "************3743",
              "addressDetails": Object {
                "addressLine1": "Dorney Park Road",
                "addressLine2": "",
                "city": "Allentown",
                "country": "US",
              },
              "ccBrand": "PLACE CARD",
              "ccType": "PLACE CARD1",
              "creditCardId": 82596,
              "defaultInd": false,
            },
          ]
        }
        formName="checkoutBillingPayment"
        labels={
          Object {
            "creditCardEnd": "ending in ",
            "cvvCode": "CVV Code",
            "edit": "Edit",
            "lbl_billing_addCreditBtn": "ADD A NEW CREDIT CARD",
            "lbl_billing_addCreditHeading": "+ Add a new Credit Card",
            "lbl_billing_billingAddress": "Billing Address",
            "lbl_billing_cardDetailsTitle": "Card Details",
            "lbl_billing_creditCard": "Credit Card",
            "lbl_billing_default": "Default",
            "lbl_billing_defaultPayment": "Set as default payment method",
            "lbl_billing_default_card": "DEFAULT",
            "lbl_billing_paypal": "Pay Pal",
            "lbl_billing_select": "SELECT",
            "lbl_billing_selectCardTitle": "SELECT CARD",
            "lbl_billing_selectFromCard": "Select from card on file",
            "lbl_billing_venmo": "Venmo",
            "paymentMethod": "Payment Method",
          }
        }
        onChange={[Function]}
        onFileCardKey={82596}
        selectedOnFileCardKey={82596}
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(View)>
        <Styled(Anchor)
          accessibilityLabel=""
          anchorVariation="primary"
          colorName={null}
          customStyle={Object {}}
          fontSizeVariation="small"
          href="#"
          locator=""
          noLink={true}
          onPress={null}
          target="_blank"
          text="Edit"
          underline={true}
          visible={false}
        />
      </Styled(View)>
    </Styled(View)>
    <Styled(View)>
      <Styled(BodyCopy)
        accessibilityText=""
        color="gray.900"
        data-locator="billing-payment-method"
        dataLocator=""
        fontSize="fs16"
        fontWeight="extrabold"
        margin={null}
        mobileFontFamily="primary"
        numberOfLines={null}
        text="Payment Method"
        textDecoration={null}
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(CardImage)
        card={
          Object {
            "accountNo": "************3743",
            "addressDetails": Object {
              "addressLine1": "Dorney Park Road",
              "addressLine2": "",
              "city": "Allentown",
              "country": "US",
            },
            "ccBrand": "PLACE CARD",
            "ccType": "PLACE CARD1",
            "creditCardId": 82596,
            "defaultInd": false,
          }
        }
        cardNumber="ending in 3743"
      />
      <Styled(View)>
        <Field
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "ariaLabel": "input",
                "dataLocator": "input-field",
                "enableSuccessCheck": false,
                "id": "input",
                "keyboardType": "default",
                "label": "input",
                "marginBottom": true,
                "meta": Object {
                  "error": "",
                  "touched": "",
                },
                "onChangeText": [Function],
                "secureTextEntry": false,
                "showErrorIcon": true,
                "showSuccessCheck": false,
                "successText": "",
                "type": "text",
              },
              "attrs": Array [],
              "displayName": "Styled(TextBox)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
    ",
                  "
  ",
                  [Function],
                  ";
",
                  ";
  ",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": [Function],
              "withComponent": [Function],
            }
          }
          customStyle={
            Object {
              "height": 72,
            }
          }
          dataLocator="payment-cvv"
          id="cvvCode"
          label="CVV Code"
          name="cvvCode"
          type="text"
        />
        <Styled(View)>
          <ReactTooltip
            backgroundColor="#fff"
            height={96}
            onClose={[Function]}
            onOpen={[Function]}
            overlayColor="rgba(250, 250, 250, 0.80)"
            pointerColor="#fff"
            popover={null}
            toggleOnPress={true}
            width={240}
            withOverlay={false}
            withPointer={true}
          >
            <Styled(ImageComp)
              alt=""
              height={15}
              host=""
              source={
                Object {
                  "testUri": "../../../../core/src/assets/info-icon.png",
                }
              }
              url=""
              width={15}
            />
          </ReactTooltip>
        </Styled(View)>
      </Styled(View)>
    </Styled(View)>
    <Styled(View) />
    <Styled(View)>
      <Styled(Card)
        card={
          Object {
            "accountNo": "************3743",
            "addressDetails": Object {
              "addressLine1": "Dorney Park Road",
              "addressLine2": "",
              "city": "Allentown",
              "country": "US",
            },
            "ccBrand": "PLACE CARD",
            "ccType": "PLACE CARD1",
            "creditCardId": 82596,
            "defaultInd": false,
          }
        }
        cardNumber=""
        dataLocatorPrefix="billing-payment-card-detail"
        isDefault={false}
        selectedValue=""
        showAddress={true}
      />
    </Styled(View)>
  </Styled(View)>
  <CnCCommonTemplate
    backLinkText=""
    btnText=""
    onBackLinkPress={[Function]}
    routeToPage=""
  />
</Fragment>
`;
