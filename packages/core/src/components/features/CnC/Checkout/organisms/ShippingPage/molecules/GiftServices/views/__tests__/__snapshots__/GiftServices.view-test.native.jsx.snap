// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GiftServices component should renders correctly props not present 1`] = `
<Styled(View)>
  <Styled(View)>
    <Styled(View)>
      <Field
        component={[Function]}
        dataLocator="hide-show-checkbox"
        enableSuccessCheck={false}
        name="hasGiftWrapping"
        onChange={[Function]}
      />
      <Styled(BodyCopy)
        fontFamily="secondary"
        fontSize="fs14"
        fontWeight="extrabold"
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(Anchor)
        accessibilityLabel=""
        anchorVariation="primary"
        customStyle={Object {}}
        fontFamily="secondary"
        fontSizeVariation="medium"
        locator=""
        onPress={[Function]}
        text=""
        underline={true}
        visible={false}
      />
    </Styled(View)>
  </Styled(View)>
  <Styled(View)>
    <Styled(BodyCopy)
      dataLocator="add-gift-services-details-lbl"
      fontSize="fs14"
      fontWeight="regular"
      mobileFontFamily="secondary"
    />
  </Styled(View)>
  <View>
    <Styled(View)>
      <Styled(BodyCopy)
        dataLocator="brand-gift-services-details-lbl"
        fontSize="fs14"
        fontWeight="regular"
        mobileFontFamily="secondary"
      />
      <Styled(View)>
        <Styled(View)>
          <LabeledRadioButton
            buttonInnerColor="#000"
            buttonOuterColor="#000"
            checked={true}
            disabled={false}
            index={-1}
            obj={Object {}}
            onPress={[Function]}
          />
          <Styled(Image)
            data-locator="cartItemBrandLogo"
            resizeMode="contain"
            source={
              Object {
                "testUri": "../../../../core/src/assets/tcp-logo.png",
              }
            }
          />
        </Styled(View)>
        <Styled(View)>
          <LabeledRadioButton
            buttonInnerColor="#000"
            buttonOuterColor="#000"
            checked={false}
            disabled={false}
            index={-1}
            obj={Object {}}
            onPress={[Function]}
          />
          <Styled(Image)
            data-locator="cartItemBrandLogo"
            resizeMode="contain"
            source={
              Object {
                "testUri": "../../../../core/src/assets/gymboree-logo.png",
              }
            }
          />
        </Styled(View)>
      </Styled(View)>
    </Styled(View)>
    <Field
      component={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "_foldedDefaultProps": Object {
            "bounces": true,
            "data": Array [],
            "dropDownStyle": null,
            "itemStyle": null,
            "onValueChange": null,
            "selectedValue": null,
            "variation": "primary",
          },
          "attrs": Array [],
          "displayName": "Styled(DropDown)",
          "inlineStyle": InlineStyle {
            "rules": Array [
              "
    ",
              "
  height: ",
              [Function],
              "px;
  ",
              [Function],
              ";
  background-color: ",
              [Function],
              ";
",
              ";
  ",
            ],
          },
          "render": [Function],
          "styledComponentId": "StyledNativeComponent",
          "target": [Function],
          "withComponent": [Function],
        }
      }
      dataLocator="giftServices-list"
      dropDownStyle={
        Object {
          "border": 2,
          "borderColor": "#1a1a1a",
          "height": 30,
        }
      }
      itemStyle={
        Object {
          "border": 2,
          "borderColor": "#1a1a1a",
          "color": "black",
          "height": 90,
          "paddingLeft": 10,
          "paddingRight": 10,
        }
      }
      name="giftServices"
      onValueChange={[Function]}
      selectedValue="standard"
      variation="secondary"
    />
    <Styled(View)>
      <Styled(BodyCopy)
        color="gray.900"
        fontSize="fs14"
        mobileFontFamily="secondary"
        textAlign="left"
      />
      <Styled(BodyCopy)
        color="gray.900"
        fontSize="fs10"
        mobileFontFamily="secondary"
        textAlign="right"
      />
    </Styled(View)>
    <Styled(TextInput)
      dataLocator="gift-message"
      id="message"
      maxLength={100}
      multiline={true}
      name="message"
      onChangeText={[Function]}
      type="text"
    />
  </View>
  <GiftServicesDetailsModal
    labels={Object {}}
    onRequestClose={[Function]}
    openState={false}
  />
</Styled(View)>
`;

exports[`GiftServices component should renders correctly props not present 2`] = `
<Styled(View)>
  <Styled(View)>
    <Styled(View)>
      <Field
        component={[Function]}
        dataLocator="hide-show-checkbox"
        enableSuccessCheck={false}
        name="hasGiftWrapping"
        onChange={[Function]}
      />
      <Styled(BodyCopy)
        fontFamily="secondary"
        fontSize="fs14"
        fontWeight="extrabold"
      />
    </Styled(View)>
    <Styled(View)>
      <Styled(Anchor)
        accessibilityLabel=""
        anchorVariation="primary"
        customStyle={Object {}}
        fontFamily="secondary"
        fontSizeVariation="medium"
        locator=""
        onPress={[Function]}
        text=""
        underline={true}
        visible={false}
      />
    </Styled(View)>
  </Styled(View)>
  <Styled(View)>
    <Styled(BodyCopy)
      dataLocator="add-gift-services-details-lbl"
      fontSize="fs14"
      fontWeight="regular"
      mobileFontFamily="secondary"
    />
  </Styled(View)>
  <GiftServicesDetailsModal
    labels={Object {}}
    onRequestClose={[Function]}
    openState={true}
  />
</Styled(View)>
`;
