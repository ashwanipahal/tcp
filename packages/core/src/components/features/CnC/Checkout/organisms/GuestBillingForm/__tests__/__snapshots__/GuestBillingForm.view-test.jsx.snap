// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GuestBillingFormVanilla should render correctly 1`] = `
<form
  name="checkoutBilling"
>
  <Styled(BodyCopy)
    className="elem-mb-XS elem-mt-MED"
    color="text.primary"
    component="p"
    data-locator="billing-details"
    fontFamily="primary"
    fontSize="fs28"
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="left"
  />
  <Styled(PaymentMethods)
    labels={Object {}}
  />
  <div
    className="elem-mt-LRG elem-pb-XL"
  />
  <Styled(CheckoutOrderInfo)
    isGuest={true}
    showAccordian={true}
  />
  <Styled(CheckoutFooter)
    backLinkHandler={[Function]}
    backLinkText=""
    hideBackLink={true}
    nextButtonText=""
    showVenmoSubmit={false}
  />
</form>
`;

exports[`GuestBillingFormVanilla should render correctly when props change 1`] = `
<form
  name="checkoutBilling"
>
  <Styled(BodyCopy)
    className="elem-mb-XS elem-mt-MED"
    color="text.primary"
    component="p"
    data-locator="billing-details"
    fontFamily="primary"
    fontSize="fs28"
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="left"
  />
  <Styled(PaymentMethods)
    labels={Object {}}
  />
  <div
    className="elem-mt-LRG elem-pb-XL"
  >
    <AddNewCCForm
      cardList={null}
      cardType="VISA"
      creditFieldLabels={Object {}}
      cvvError="error"
      cvvInfo={
        <ForwardRef
          aligned="right"
          fontFamily="secondary"
          message={
            <ForwardRef
              className="cvv-code-info"
              dataLocator="cvv-code-info"
              richTextHtml=""
            />
          }
        >
          <ForwardRef
            height="15"
            src="/static/images/info-icon.png"
            width="15"
          />
        </ForwardRef>
      }
      editMode={false}
      formName="checkoutBilling"
      isExpirationRequired={true}
      isGuest={true}
      isSaveToAccountChecked={true}
      labels={Object {}}
      onCardFocus={[Function]}
    />
    <Styled(CheckoutAddress)
      billingData={Object {}}
      dispatch={
        [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "meta": Object {
                  "field": "cardType",
                  "form": "checkoutBilling",
                  "persistentSubmitErrors": undefined,
                  "touch": undefined,
                },
                "payload": "VISA",
                "type": "@@redux-form/CHANGE",
              },
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      formName="checkoutBilling"
      isGuest={true}
      isSameAsShippingChecked={true}
      labels={Object {}}
      orderHasShipping={true}
      shippingAddress={null}
    />
  </div>
  <Styled(CheckoutOrderInfo)
    isGuest={true}
    showAccordian={true}
  />
  <Styled(CheckoutFooter)
    backLinkHandler={[Function]}
    backLinkText=""
    hideBackLink={true}
    nextButtonText=""
    showVenmoSubmit={false}
  />
</form>
`;
