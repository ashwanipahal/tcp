// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Shipping Form should render correctly 1`] = `
<Fragment>
  <Styled(CheckoutSectionTitleDisplay)
    title="lbl_shipping_header"
  />
  <[object Object] />
  <Styled(BodyCopy)
    className="elem-mb-XS elem-mt-MED hide-on-desktop hide-on-tablet"
    color="text.primary"
    component="p"
    data-locator="shipping-details"
    fontFamily="primary"
    fontSize="fs28"
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="left"
  >
    lbl_shipping_sectionHeader
  </Styled(BodyCopy)>
  <form
    className=""
    isEditing={false}
    name="checkoutShipping"
    onSubmit={[Function]}
  >
    <Styled(RegisteredShippingForm)
      ServerErrors={Object {}}
      addressLabels={
        Object {
          "addressFormLabels": Object {},
        }
      }
      addressPhoneNo={null}
      afterAddressUpdate={[Function]}
      className=""
      defaultAddressId={null}
      defaultShipmentId={null}
      editShipmentDetailsError=""
      errorMessageRef={
        Object {
          "current": null,
        }
      }
      getEmailSignUpLabels={Object {}}
      handleShipIntClick={[Function]}
      isAddNewAddress={false}
      isEditing={false}
      isGuest={false}
      isLoading={false}
      isMobile={false}
      isOrderUpdateChecked={false}
      isSaveToAddressBookChecked={false}
      isUsSite={true}
      newUserPhoneNo={null}
      onFileAddressKey={null}
      orderHasPickUp={false}
      saveToAddressBook={false}
      selectedShipmentId={null}
      setAsDefaultShipping={false}
      shipmentMethods={null}
      shippingAddressId={null}
      shippingLabels={Object {}}
      showAccordian={true}
      smsSignUpLabels={Object {}}
      syncErrors={Object {}}
      toggleIsEditing={[Function]}
      userAddresses={Array []}
    />
    <FormSection
      name="smsSignUp"
    >
      <Styled(SMSFormFields)
        addressPhoneNo={null}
        borderBottom={true}
        formName="checkoutShipping"
        formSection="smsSignUp"
        isOrderUpdateChecked={false}
        labels={Object {}}
        showDefaultCheckbox={false}
        variation="secondary"
      />
    </FormSection>
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 6,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <FormSection
          name="shipmentMethods"
        >
          <div
            className="shipment-methods-form"
          >
            <Styled(ShipmentMethods)
              formName="checkoutShipping"
              formSection="shipmentMethods"
              selectedShipmentId={null}
              shipmentHeader="lbl_shipping_shipmentHeader"
              shipmentMethods={null}
            />
          </div>
        </FormSection>
      </Styled(Col)>
      <Styled(Col)
        colSize={
          Object {
            "large": 6,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Connect(GiftServicesContainer)
          formName="checkoutShipping"
          formSection="giftServices"
          showDefaultCheckbox={false}
          variation="secondary"
        />
      </Styled(Col)>
    </Styled(Row)>
    <Styled(CheckoutOrderInfo)
      isGuest={false}
      showAccordian={true}
    />
    <Styled(CheckoutFooter)
      backLinkText="lbl_shipping_backLinkText"
      hideBackLink={false}
      nextButtonText="lbl_shipping_billingText"
    />
  </form>
</Fragment>
`;

exports[`Shipping Form should render correctly with logged in user 1`] = `
<Fragment>
  <Styled(CheckoutSectionTitleDisplay)
    title="lbl_shipping_header"
  />
  <Styled(BodyCopy)
    className="elem-mb-XS elem-mt-MED hide-on-desktop hide-on-tablet"
    color="text.primary"
    component="p"
    data-locator="shipping-details"
    fontFamily="primary"
    fontSize="fs28"
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="left"
  >
    lbl_shipping_sectionHeader
  </Styled(BodyCopy)>
  <form
    className=""
    isEditing={false}
    name="checkoutShipping"
    onSubmit={[Function]}
  >
    <div
      className="address-form"
    >
      <FormSection
        name="address"
      >
        <Styled(AddressFields)
          addressFormLabels={Object {}}
          addressPhoneNo={null}
          formName="checkoutShipping"
          formSection="address"
          handleShipIntClick={[Function]}
          showDefaultCheckbox={false}
          variation="secondary"
        />
      </FormSection>
    </div>
    <Styled(EmailSignUpCheckBox)
      bottomSeparator={true}
      fieldName="emailSignUp"
      labels={Object {}}
    />
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 6,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <FormSection
          name="shipmentMethods"
        >
          <div
            className="shipment-methods-form"
          >
            <Styled(ShipmentMethods)
              formName="checkoutShipping"
              formSection="shipmentMethods"
              selectedShipmentId={null}
              shipmentHeader="lbl_shipping_shipmentHeader"
              shipmentMethods={null}
            />
          </div>
        </FormSection>
      </Styled(Col)>
      <Styled(Col)
        colSize={
          Object {
            "large": 6,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Connect(GiftServicesContainer)
          formName="checkoutShipping"
          formSection="giftServices"
          showDefaultCheckbox={false}
          variation="secondary"
        />
      </Styled(Col)>
    </Styled(Row)>
    <Styled(CheckoutOrderInfo)
      isGuest={true}
      showAccordian={true}
    />
    <Styled(CheckoutFooter)
      backLinkText="lbl_shipping_backLinkText"
      hideBackLink={false}
      nextButtonText="lbl_shipping_billingText"
    />
  </form>
</Fragment>
`;

exports[`Shipping Form should render correctly with logged in user having addresses 1`] = `
<Fragment>
  <Styled(CheckoutSectionTitleDisplay)
    title="lbl_shipping_header"
  />
  <Styled(BodyCopy)
    className="elem-mb-XS elem-mt-MED hide-on-desktop hide-on-tablet"
    color="text.primary"
    component="p"
    data-locator="shipping-details"
    fontFamily="primary"
    fontSize="fs28"
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="left"
  >
    lbl_shipping_sectionHeader
  </Styled(BodyCopy)>
  <form
    className=""
    isEditing={false}
    name="checkoutShipping"
    onSubmit={[Function]}
  >
    <div
      className="address-form"
    >
      <FormSection
        name="address"
      >
        <Styled(AddressFields)
          addressFormLabels={Object {}}
          addressPhoneNo={null}
          dispatch={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "meta": Object {
                      "field": "shipmentMethods.shippingMethodId",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "90113",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          formName="checkoutShipping"
          formSection="address"
          handleShipIntClick={[Function]}
          showDefaultCheckbox={false}
          variation="secondary"
        />
      </FormSection>
    </div>
    <Styled(EmailSignUpCheckBox)
      bottomSeparator={true}
      fieldName="emailSignUp"
      labels={Object {}}
    />
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 6,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <FormSection
          name="shipmentMethods"
        >
          <div
            className="shipment-methods-form"
          >
            <Styled(ShipmentMethods)
              formName="checkoutShipping"
              formSection="shipmentMethods"
              selectedShipmentId={null}
              shipmentHeader="lbl_shipping_shipmentHeader"
              shipmentMethods={
                Array [
                  Object {
                    "id": 123,
                  },
                ]
              }
            />
          </div>
        </FormSection>
      </Styled(Col)>
      <Styled(Col)
        colSize={
          Object {
            "large": 6,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Connect(GiftServicesContainer)
          dispatch={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "meta": Object {
                      "field": "shipmentMethods.shippingMethodId",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "90113",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          formName="checkoutShipping"
          formSection="giftServices"
          showDefaultCheckbox={false}
          variation="secondary"
        />
      </Styled(Col)>
    </Styled(Row)>
    <Styled(CheckoutOrderInfo)
      isGuest={true}
      showAccordian={true}
    />
    <Styled(CheckoutFooter)
      backLinkText="lbl_shipping_backLinkText"
      hideBackLink={false}
      nextButtonText="lbl_shipping_billingText"
    />
  </form>
</Fragment>
`;

exports[`Shipping Form should render correctly with logged in user having addresses with isAddressModalEmptied false 1`] = `
<Fragment>
  <Styled(CheckoutSectionTitleDisplay)
    title="lbl_shipping_header"
  />
  <Styled(BodyCopy)
    className="elem-mb-XS elem-mt-MED hide-on-desktop hide-on-tablet"
    color="text.primary"
    component="p"
    data-locator="shipping-details"
    fontFamily="primary"
    fontSize="fs28"
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="left"
  >
    lbl_shipping_sectionHeader
  </Styled(BodyCopy)>
  <form
    className=""
    isEditing={true}
    name="checkoutShipping"
    onSubmit={[Function]}
  >
    <div
      className="address-form"
    >
      <FormSection
        name="address"
      >
        <Styled(AddressFields)
          addressFormLabels={Object {}}
          addressPhoneNo={null}
          dispatch={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "meta": Object {
                      "field": "shipmentMethods.shippingMethodId",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "90113",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.addressLine1",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "addressline 1 hhh",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.addressLine2",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "addressline 2 mmm",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.firstName",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "test",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.lastName",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "test",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.city",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "test city",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.zipCode",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": undefined,
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.state",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": undefined,
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.phoneNumber",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "1234567890",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "defaultShipping",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": true,
                    "type": "@@redux-form/CHANGE",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          formName="checkoutShipping"
          formSection="address"
          handleShipIntClick={[Function]}
          showDefaultCheckbox={false}
          variation="secondary"
        />
      </FormSection>
    </div>
    <Styled(EmailSignUpCheckBox)
      bottomSeparator={true}
      fieldName="emailSignUp"
      labels={Object {}}
    />
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 6,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <FormSection
          name="shipmentMethods"
        >
          <div
            className="shipment-methods-form"
          >
            <Styled(ShipmentMethods)
              formName="checkoutShipping"
              formSection="shipmentMethods"
              selectedShipmentId={null}
              shipmentHeader="lbl_shipping_shipmentHeader"
              shipmentMethods={
                Array [
                  Object {
                    "id": 123,
                  },
                ]
              }
            />
          </div>
        </FormSection>
      </Styled(Col)>
      <Styled(Col)
        colSize={
          Object {
            "large": 6,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Connect(GiftServicesContainer)
          dispatch={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "meta": Object {
                      "field": "shipmentMethods.shippingMethodId",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "90113",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.addressLine1",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "addressline 1 hhh",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.addressLine2",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "addressline 2 mmm",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.firstName",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "test",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.lastName",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "test",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.city",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "test city",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.zipCode",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": undefined,
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.state",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": undefined,
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "address.phoneNumber",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": "1234567890",
                    "type": "@@redux-form/CHANGE",
                  },
                ],
                Array [
                  Object {
                    "meta": Object {
                      "field": "defaultShipping",
                      "form": "checkoutShipping",
                      "persistentSubmitErrors": undefined,
                      "touch": undefined,
                    },
                    "payload": true,
                    "type": "@@redux-form/CHANGE",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            }
          }
          formName="checkoutShipping"
          formSection="giftServices"
          showDefaultCheckbox={false}
          variation="secondary"
        />
      </Styled(Col)>
    </Styled(Row)>
    <Styled(CheckoutOrderInfo)
      isGuest={true}
      showAccordian={true}
    />
    <Styled(CheckoutFooter)
      backLinkText="lbl_shipping_backLinkText"
      hideBackLink={false}
      nextButtonText="lbl_shipping_billingText"
    />
  </form>
</Fragment>
`;

exports[`Shipping Form should render correctly with logged in user having addresses with modalType add and state true 1`] = `
<Fragment>
  <Styled(CheckoutSectionTitleDisplay)
    title="lbl_shipping_header"
  />
  <Styled(BodyCopy)
    className="elem-mb-XS elem-mt-MED hide-on-desktop hide-on-tablet"
    color="text.primary"
    component="p"
    data-locator="shipping-details"
    fontFamily="primary"
    fontSize="fs28"
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="left"
  >
    lbl_shipping_sectionHeader
  </Styled(BodyCopy)>
  <form
    className=""
    isEditing={false}
    name="checkoutShipping"
    onSubmit={[Function]}
  >
    <div
      className="address-form"
    >
      <FormSection
        name="address"
      >
        <Styled(AddressFields)
          addressFormLabels={Object {}}
          addressPhoneNo={null}
          dispatch={[MockFunction]}
          formName="checkoutShipping"
          formSection="address"
          handleShipIntClick={[Function]}
          showDefaultCheckbox={false}
          variation="secondary"
        />
      </FormSection>
    </div>
    <Styled(EmailSignUpCheckBox)
      bottomSeparator={true}
      fieldName="emailSignUp"
      labels={Object {}}
    />
    <Styled(Row)
      fullBleed={true}
    >
      <Styled(Col)
        colSize={
          Object {
            "large": 6,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <FormSection
          name="shipmentMethods"
        >
          <div
            className="shipment-methods-form"
          >
            <Styled(ShipmentMethods)
              formName="checkoutShipping"
              formSection="shipmentMethods"
              selectedShipmentId={null}
              shipmentHeader="lbl_shipping_shipmentHeader"
              shipmentMethods={
                Array [
                  Object {},
                ]
              }
            />
          </div>
        </FormSection>
      </Styled(Col)>
      <Styled(Col)
        colSize={
          Object {
            "large": 6,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Connect(GiftServicesContainer)
          dispatch={[MockFunction]}
          formName="checkoutShipping"
          formSection="giftServices"
          showDefaultCheckbox={false}
          variation="secondary"
        />
      </Styled(Col)>
    </Styled(Row)>
    <Styled(CheckoutOrderInfo)
      isGuest={true}
      showAccordian={true}
    />
    <Styled(CheckoutFooter)
      backLinkText="lbl_shipping_backLinkText"
      hideBackLink={false}
      nextButtonText="lbl_shipping_billingText"
    />
  </form>
</Fragment>
`;
