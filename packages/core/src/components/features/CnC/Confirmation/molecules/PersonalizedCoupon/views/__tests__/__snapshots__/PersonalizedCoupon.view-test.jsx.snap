// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PersonalizedCoupon View should render correctly for empty state with only mandatory values 1`] = `
<div
  className="className"
>
  <Styled(BodyCopy)
    className="personalized-coupon"
    color="text.primary"
    component="p"
    fontFamily="primary"
    fontSize={12}
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="center"
  >
    <Styled(BodyCopy)
      className="ribbon top-left"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="description"
      color="gray[900]"
      component="p"
      fontFamily="primary"
      fontSize={
        Array [
          "fs22",
          "fs16",
          "fs28",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      description
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="hide-detail"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="print-icon"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(Image)
        className="print-icon-img"
        height="20px"
        onClick={[Function]}
        src="/static/version-not-available/images/icon-printer.png"
        width="20px"
      />
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="ribbon bottom-right"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
  </Styled(BodyCopy)>
</div>
`;

exports[`PersonalizedCoupon View should render correctly for empty state with only mandatory values for smaller viewport 1`] = `
<div
  className="className"
>
  <Styled(BodyCopy)
    className="personalized-coupon"
    color="text.primary"
    component="p"
    fontFamily="primary"
    fontSize={12}
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="center"
  >
    <Styled(BodyCopy)
      className="ribbon top-left"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="description"
      color="gray[900]"
      component="p"
      fontFamily="primary"
      fontSize={
        Array [
          "fs22",
          "fs16",
          "fs28",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      description
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="hide-detail"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="print-icon"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(Image)
        className="print-icon-img"
        height="20px"
        onClick={[Function]}
        src="/static/version-not-available/images/icon-printer.png"
        width="20px"
      />
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="ribbon bottom-right"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
  </Styled(BodyCopy)>
</div>
`;

exports[`PersonalizedCoupon View should render correctly for full filled state 1`] = `
<div
  className="className"
>
  <Styled(BodyCopy)
    className="personalized-coupon"
    color="text.primary"
    component="p"
    fontFamily="primary"
    fontSize={12}
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="center"
  >
    <Styled(BodyCopy)
      className="ribbon top-left"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="description"
      color="gray[900]"
      component="p"
      fontFamily="primary"
      fontSize={
        Array [
          "fs22",
          "fs16",
          "fs28",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      description
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="hide-detail"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(BodyCopy)
        className="code"
        color="text.primary"
        component="div"
        fontFamily="primary"
        fontSize={12}
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        <Styled(BodyCopy)
          className="barcode"
          color="text.primary"
          component="div"
          fontFamily="primary"
          fontSize={12}
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          textAlign="center"
        >
          <Barcode
            background="#ffffff"
            barcodeId="Y16905Y9W1RIWT"
            className="barcode"
            displayValue={false}
            font="Nunito"
            fontOptions=""
            fontSize={20}
            format="CODE128"
            height={100}
            lineColor="#000000"
            margin={0}
            renderer="svg"
            textAlign="center"
            textMargin={2}
            textPosition="bottom"
            value="Y16905Y9W1RIWT"
            width={2}
          />
        </Styled(BodyCopy)>
        <Styled(BodyCopy)
          className={null}
          color="gray[900]"
          component="div"
          fontFamily="secondary"
          fontSize={
            Array [
              "fs16",
              "fs14",
              "fs22",
            ]
          }
          fontWeight="extrabold"
          letterSpacing="1px"
          lineHeight="normal"
          link={null}
          textAlign="center"
        >
          WEB CODE:  Y16905Y9W1RIWT
        </Styled(BodyCopy)>
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className="validity"
        color="gray[900]"
        component="p"
        fontFamily="secondary"
        fontSize={
          Array [
            "fs14",
            "fs12",
            "fs18",
          ]
        }
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="center"
      >
        Now through Oct 15th, 2019
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className="details"
        color="text.primary"
        component="div"
        fontFamily="primary"
        fontSize={12}
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="center"
      >
        <Styled(Anchor)
          className="details-link"
          dataLocator="coupon_details_Y16905Y9W1RIWT"
          fontSizeVariation="medium"
          handleLinkClick={[Function]}
          noLink={true}
          underline={true}
        >
          details
        </Styled(Anchor)>
      </Styled(BodyCopy)>
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="print-icon"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(Image)
        className="print-icon-img"
        height="20px"
        onClick={[Function]}
        src="/static/version-not-available/images/icon-printer.png"
        width="20px"
      />
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="ribbon bottom-right"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(Anchor)
      className="toggle-icon"
      fontSizeVariation="medium"
      handleLinkClick={[Function]}
      noLink={true}
    >
      <Styled(Image)
        className="down-arrow"
        height="10px"
        src="/static/version-not-available/images/carrot-left.png"
        width="7px"
      />
    </Styled(Anchor)>
  </Styled(BodyCopy)>
</div>
`;

exports[`PersonalizedCoupon View should render correctly for full filled state for smaller viewport 1`] = `
<div
  className="className"
>
  <Styled(BodyCopy)
    className="personalized-coupon"
    color="text.primary"
    component="p"
    fontFamily="primary"
    fontSize={12}
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="center"
  >
    <Styled(BodyCopy)
      className="ribbon top-left"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="description"
      color="gray[900]"
      component="p"
      fontFamily="primary"
      fontSize={
        Array [
          "fs22",
          "fs16",
          "fs28",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      description
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="hide-detail"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(BodyCopy)
        className="code"
        color="text.primary"
        component="div"
        fontFamily="primary"
        fontSize={12}
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="left"
      >
        <Styled(BodyCopy)
          className="barcode"
          color="text.primary"
          component="div"
          fontFamily="primary"
          fontSize={12}
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          textAlign="center"
        >
          <Barcode
            background="#ffffff"
            barcodeId="Y16905Y9W1RIWT"
            className="barcode"
            displayValue={false}
            font="Nunito"
            fontOptions=""
            fontSize={20}
            format="CODE128"
            height={100}
            lineColor="#000000"
            margin={0}
            renderer="svg"
            textAlign="center"
            textMargin={2}
            textPosition="bottom"
            value="Y16905Y9W1RIWT"
            width={2}
          />
        </Styled(BodyCopy)>
        <Styled(BodyCopy)
          className={null}
          color="gray[900]"
          component="div"
          fontFamily="secondary"
          fontSize={
            Array [
              "fs16",
              "fs14",
              "fs22",
            ]
          }
          fontWeight="extrabold"
          letterSpacing="1px"
          lineHeight="normal"
          link={null}
          textAlign="center"
        >
          WEB CODE:  Y16905Y9W1RIWT
        </Styled(BodyCopy)>
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className="validity"
        color="gray[900]"
        component="p"
        fontFamily="secondary"
        fontSize={
          Array [
            "fs14",
            "fs12",
            "fs18",
          ]
        }
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="center"
      >
        Now through Oct 15th, 2019
      </Styled(BodyCopy)>
      <Styled(BodyCopy)
        className="details"
        color="text.primary"
        component="div"
        fontFamily="primary"
        fontSize={12}
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="center"
      >
        <Styled(Anchor)
          className="details-link"
          dataLocator="coupon_details_Y16905Y9W1RIWT"
          fontSizeVariation="medium"
          handleLinkClick={[Function]}
          noLink={true}
          underline={true}
        >
          details
        </Styled(Anchor)>
      </Styled(BodyCopy)>
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="print-icon"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(Image)
        className="print-icon-img"
        height="20px"
        onClick={[Function]}
        src="/static/version-not-available/images/icon-printer.png"
        width="20px"
      />
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="ribbon bottom-right"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(Anchor)
      className="toggle-icon"
      fontSizeVariation="medium"
      handleLinkClick={[Function]}
      noLink={true}
    >
      <Styled(Image)
        className="down-arrow"
        height="10px"
        src="/static/version-not-available/images/carrot-left.png"
        width="7px"
      />
    </Styled(Anchor)>
  </Styled(BodyCopy)>
</div>
`;

exports[`PersonalizedCoupon View should render correctly for partial state with end date only 1`] = `
<div
  className="className"
>
  <Styled(BodyCopy)
    className="personalized-coupon"
    color="text.primary"
    component="p"
    fontFamily="primary"
    fontSize={12}
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="center"
  >
    <Styled(BodyCopy)
      className="ribbon top-left"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="description"
      color="gray[900]"
      component="p"
      fontFamily="primary"
      fontSize={
        Array [
          "fs22",
          "fs16",
          "fs28",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      description
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="hide-detail"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(BodyCopy)
        className="validity"
        color="gray[900]"
        component="p"
        fontFamily="secondary"
        fontSize={
          Array [
            "fs14",
            "fs12",
            "fs18",
          ]
        }
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="center"
      >
        Valid undefined - disclaimer
      </Styled(BodyCopy)>
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="print-icon"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(Image)
        className="print-icon-img"
        height="20px"
        onClick={[Function]}
        src="/static/version-not-available/images/icon-printer.png"
        width="20px"
      />
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="ribbon bottom-right"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(Anchor)
      className="toggle-icon"
      fontSizeVariation="medium"
      handleLinkClick={[Function]}
      noLink={true}
    >
      <Styled(Image)
        className="down-arrow"
        height="10px"
        src="/static/version-not-available/images/carrot-left.png"
        width="7px"
      />
    </Styled(Anchor)>
  </Styled(BodyCopy)>
</div>
`;

exports[`PersonalizedCoupon View should render correctly for partial state with end date only for smaller viewport 1`] = `
<div
  className="className"
>
  <Styled(BodyCopy)
    className="personalized-coupon"
    color="text.primary"
    component="p"
    fontFamily="primary"
    fontSize={12}
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="center"
  >
    <Styled(BodyCopy)
      className="ribbon top-left"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="description"
      color="gray[900]"
      component="p"
      fontFamily="primary"
      fontSize={
        Array [
          "fs22",
          "fs16",
          "fs28",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      description
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="hide-detail"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(BodyCopy)
        className="validity"
        color="gray[900]"
        component="p"
        fontFamily="secondary"
        fontSize={
          Array [
            "fs14",
            "fs12",
            "fs18",
          ]
        }
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="center"
      >
        Valid undefined - disclaimer
      </Styled(BodyCopy)>
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="print-icon"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(Image)
        className="print-icon-img"
        height="20px"
        onClick={[Function]}
        src="/static/version-not-available/images/icon-printer.png"
        width="20px"
      />
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="ribbon bottom-right"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(Anchor)
      className="toggle-icon"
      fontSizeVariation="medium"
      handleLinkClick={[Function]}
      noLink={true}
    >
      <Styled(Image)
        className="down-arrow"
        height="10px"
        src="/static/version-not-available/images/carrot-left.png"
        width="7px"
      />
    </Styled(Anchor)>
  </Styled(BodyCopy)>
</div>
`;

exports[`PersonalizedCoupon View should render correctly for partial state with start date only 1`] = `
<div
  className="className"
>
  <Styled(BodyCopy)
    className="personalized-coupon"
    color="text.primary"
    component="p"
    fontFamily="primary"
    fontSize={12}
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="center"
  >
    <Styled(BodyCopy)
      className="ribbon top-left"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="description"
      color="gray[900]"
      component="p"
      fontFamily="primary"
      fontSize={
        Array [
          "fs22",
          "fs16",
          "fs28",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      description
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="hide-detail"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(BodyCopy)
        className="validity"
        color="gray[900]"
        component="p"
        fontFamily="secondary"
        fontSize={
          Array [
            "fs14",
            "fs12",
            "fs18",
          ]
        }
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="center"
      >
        Valid disclaimer - undefined
      </Styled(BodyCopy)>
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="print-icon"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(Image)
        className="print-icon-img"
        height="20px"
        onClick={[Function]}
        src="/static/version-not-available/images/icon-printer.png"
        width="20px"
      />
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="ribbon bottom-right"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(Anchor)
      className="toggle-icon"
      fontSizeVariation="medium"
      handleLinkClick={[Function]}
      noLink={true}
    >
      <Styled(Image)
        className="down-arrow"
        height="10px"
        src="/static/version-not-available/images/carrot-left.png"
        width="7px"
      />
    </Styled(Anchor)>
  </Styled(BodyCopy)>
</div>
`;

exports[`PersonalizedCoupon View should render correctly for partial state with start date only for smaller viewport 1`] = `
<div
  className="className"
>
  <Styled(BodyCopy)
    className="personalized-coupon"
    color="text.primary"
    component="p"
    fontFamily="primary"
    fontSize={12}
    fontWeight="regular"
    letterSpacing="normal"
    lineHeight="normal"
    link={null}
    textAlign="center"
  >
    <Styled(BodyCopy)
      className="ribbon top-left"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(BodyCopy)
      className="description"
      color="gray[900]"
      component="p"
      fontFamily="primary"
      fontSize={
        Array [
          "fs22",
          "fs16",
          "fs28",
        ]
      }
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="center"
    >
      description
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="hide-detail"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(BodyCopy)
        className="validity"
        color="gray[900]"
        component="p"
        fontFamily="secondary"
        fontSize={
          Array [
            "fs14",
            "fs12",
            "fs18",
          ]
        }
        fontWeight="regular"
        letterSpacing="normal"
        lineHeight="normal"
        link={null}
        textAlign="center"
      >
        Valid disclaimer - undefined
      </Styled(BodyCopy)>
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="print-icon"
      color="text.primary"
      component="div"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    >
      <Styled(Image)
        className="print-icon-img"
        height="20px"
        onClick={[Function]}
        src="/static/version-not-available/images/icon-printer.png"
        width="20px"
      />
    </Styled(BodyCopy)>
    <Styled(BodyCopy)
      className="ribbon bottom-right"
      color="text.primary"
      component="span"
      fontFamily="primary"
      fontSize={12}
      fontWeight="regular"
      letterSpacing="normal"
      lineHeight="normal"
      link={null}
      textAlign="left"
    />
    <Styled(Anchor)
      className="toggle-icon"
      fontSizeVariation="medium"
      handleLinkClick={[Function]}
      noLink={true}
    >
      <Styled(Image)
        className="down-arrow"
        height="10px"
        src="/static/version-not-available/images/carrot-left.png"
        width="7px"
      />
    </Styled(Anchor)>
  </Styled(BodyCopy)>
</div>
`;
