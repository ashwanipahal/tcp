// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CouponForm Component AirmilesBanner should render correctly 1`] = `
<Styled(View)>
  <Styled(View)>
    <Styled(BodyCopy)
      accessibilityText=""
      bodySize="one"
      color="gray.800"
      dataLocator=""
      fontFamily="secondary"
      fontSize="fs10"
      margin={null}
      numberOfLines={null}
      text="headerText"
      textAlign="left"
      textDecoration={null}
    />
  </Styled(View)>
  <Styled(View)>
    <Styled(View)>
      <Styled(View)>
        <Field
          autoCapitalize="none"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "ariaLabel": "input",
                "dataLocator": "input-field",
                "enableSuccessCheck": false,
                "id": "input",
                "keyboardType": "default",
                "label": "input",
                "marginBottom": true,
                "meta": Object {
                  "error": "",
                  "touched": "",
                },
                "onChangeText": [Function],
                "secureTextEntry": false,
                "showErrorIcon": true,
                "showSuccessCheck": false,
                "successText": "",
                "type": "text",
              },
              "attrs": Array [],
              "displayName": "Styled(TextBox)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
    ",
                  "
  ",
                  [Function],
                  ";
",
                  ";
  ",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": [Function],
              "withComponent": [Function],
            }
          }
          dataLocator="collectorNumber"
          id="promoId"
          label="13131313222"
          maxLength={11}
          name="promoId"
          onBlur={[MockFunction]}
          type="text"
          value="13131313222"
        />
      </Styled(View)>
      <Styled(View)>
        <ReactTooltip
          backgroundColor="#fff"
          height={96}
          onClose={[Function]}
          onOpen={[Function]}
          overlayColor="rgba(250, 250, 250, 0.80)"
          pointerColor="#fff"
          popover={
            <ForwardRef
              accessibilityText=""
              color="gray.900"
              dataLocator=""
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              margin={null}
              numberOfLines={null}
              text="collectorFlyout"
              textDecoration={null}
            />
          }
          toggleOnPress={true}
          width={240}
          withOverlay={false}
          withPointer={true}
        >
          <Styled(ImageComp)
            alt=""
            height={15}
            host=""
            source={
              Object {
                "testUri": "../../../../core/src/assets/info-icon.png",
              }
            }
            url=""
            width={15}
          />
        </ReactTooltip>
      </Styled(View)>
    </Styled(View)>
    <Styled(View)>
      <Styled(View)>
        <Field
          autoCapitalize="none"
          component={
            Object {
              "$$typeof": Symbol(react.forward_ref),
              "_foldedDefaultProps": Object {
                "ariaLabel": "input",
                "dataLocator": "input-field",
                "enableSuccessCheck": false,
                "id": "input",
                "keyboardType": "default",
                "label": "input",
                "marginBottom": true,
                "meta": Object {
                  "error": "",
                  "touched": "",
                },
                "onChangeText": [Function],
                "secureTextEntry": false,
                "showErrorIcon": true,
                "showSuccessCheck": false,
                "successText": "",
                "type": "text",
              },
              "attrs": Array [],
              "displayName": "Styled(TextBox)",
              "inlineStyle": InlineStyle {
                "rules": Array [
                  "
    ",
                  "
  ",
                  [Function],
                  ";
",
                  ";
  ",
                ],
              },
              "render": [Function],
              "styledComponentId": "StyledNativeComponent",
              "target": [Function],
              "withComponent": [Function],
            }
          }
          dataLocator="collectorNumber"
          id="offerCode"
          label="124e12e"
          maxLength={55}
          name="offerCode"
          onBlur={[MockFunction]}
          type="text"
          value="124e12e"
        />
      </Styled(View)>
      <Styled(View)>
        <ReactTooltip
          backgroundColor="#fff"
          height={96}
          onClose={[Function]}
          onOpen={[Function]}
          overlayColor="rgba(250, 250, 250, 0.80)"
          pointerColor="#fff"
          popover={
            <ForwardRef
              accessibilityText=""
              color="gray.900"
              dataLocator=""
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              margin={null}
              numberOfLines={null}
              text="offerFlyout"
              textDecoration={null}
            />
          }
          toggleOnPress={true}
          width={240}
          withOverlay={false}
          withPointer={true}
        >
          <Styled(ImageComp)
            alt=""
            height={15}
            host=""
            source={
              Object {
                "testUri": "../../../../core/src/assets/info-icon.png",
              }
            }
            url=""
            width={15}
          />
        </ReactTooltip>
      </Styled(View)>
    </Styled(View)>
  </Styled(View)>
  <Styled(View)>
    <Styled(BodyCopy)
      accessibilityText=""
      bodySize="one"
      color="gray.800"
      dataLocator=""
      fontFamily="secondary"
      fontSize="fs10"
      margin={null}
      numberOfLines={null}
      text="footerText"
      textAlign="center"
      textDecoration={null}
    />
  </Styled(View)>
</Styled(View)>
`;
