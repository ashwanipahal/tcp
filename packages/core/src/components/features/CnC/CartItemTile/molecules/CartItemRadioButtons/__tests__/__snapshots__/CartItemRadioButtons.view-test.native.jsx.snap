// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CartItemRadioButtons native Component CartItemRadioButtons native should render correctly in collapse state with BOPIS Order 1`] = `
<Styled(View)>
  <CollapsibleContainer
    arrowPos="20px"
    body={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    defaultOpen={true}
    getExpandedState={[Function]}
    header={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
          <ForwardRef>
            <View>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="store"
                  textDecoration={null}
                />
              </ForwardRef>
            </View>
            <ForwardRef
              accessibilityLabel=""
              anchorVariation=""
              colorName={null}
              customStyle={Object {}}
              fontSizeVariation="small"
              justifyContent=""
              locator=""
              margins={null}
              onPress={[Function]}
              text=""
              visible={false}
            >
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[900]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs12"
                  margin={null}
                  numberOfLines={null}
                  text="undefined"
                  textDecoration={null}
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    height="auto"
    index={0}
    isBag={true}
    openedTile={0}
  />
</Styled(View)>
`;

exports[`CartItemRadioButtons native Component CartItemRadioButtons native should render correctly in collapse state with BOPIS Order and Online only product 1`] = `
<Styled(View)>
  <CollapsibleContainer
    arrowPos="20px"
    body={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    defaultOpen={true}
    getExpandedState={[Function]}
    header={
      <React.Fragment>
        <ForwardRef
          disabled={true}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={true}
              disabledWithAlert={true}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
          <ForwardRef>
            <View>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="store"
                  textDecoration={null}
                />
              </ForwardRef>
            </View>
            <ForwardRef
              accessibilityLabel=""
              anchorVariation=""
              colorName={null}
              customStyle={Object {}}
              fontSizeVariation="small"
              justifyContent=""
              locator=""
              margins={null}
              onPress={[Function]}
              text=""
              visible={false}
            >
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[900]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs12"
                  margin={null}
                  numberOfLines={null}
                  text="undefined"
                  textDecoration={null}
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    height="auto"
    index={0}
    isBag={true}
    openedTile={0}
  />
</Styled(View)>
`;

exports[`CartItemRadioButtons native Component CartItemRadioButtons native should render correctly in collapse state with BOSS Order 1`] = `
<Styled(View)>
  <CollapsibleContainer
    arrowPos="20px"
    body={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    defaultOpen={true}
    getExpandedState={[Function]}
    header={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
            <Connect(PromotionBannerContainer)
              bossBanner={true}
            />
          </ForwardRef>
          <ForwardRef>
            <View>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="store"
                  textDecoration={null}
                />
              </ForwardRef>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="Fri. Oct 16 - Fri. Oct 18"
                  textDecoration={null}
                />
              </ForwardRef>
            </View>
            <ForwardRef
              accessibilityLabel=""
              anchorVariation=""
              colorName={null}
              customStyle={Object {}}
              fontSizeVariation="small"
              justifyContent=""
              locator=""
              margins={null}
              onPress={[Function]}
              text=""
              visible={false}
            >
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[900]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs12"
                  margin={null}
                  numberOfLines={null}
                  text="undefined"
                  textDecoration={null}
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    height="auto"
    index={0}
    isBag={true}
    openedTile={0}
  />
</Styled(View)>
`;

exports[`CartItemRadioButtons native Component CartItemRadioButtons native should render correctly in collapse state with BOSS Order and Boss Global Disabled 1`] = `
<Styled(View)>
  <CollapsibleContainer
    arrowPos="20px"
    body={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    defaultOpen={true}
    getExpandedState={[Function]}
    header={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
            <Connect(PromotionBannerContainer)
              bossBanner={true}
            />
          </ForwardRef>
          <ForwardRef>
            <View>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="store"
                  textDecoration={null}
                />
              </ForwardRef>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="Fri. Oct 16 - Fri. Oct 18"
                  textDecoration={null}
                />
              </ForwardRef>
            </View>
            <ForwardRef
              accessibilityLabel=""
              anchorVariation=""
              colorName={null}
              customStyle={Object {}}
              fontSizeVariation="small"
              justifyContent=""
              locator=""
              margins={null}
              onPress={[Function]}
              text=""
              visible={false}
            >
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[900]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs12"
                  margin={null}
                  numberOfLines={null}
                  text="undefined"
                  textDecoration={null}
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    height="auto"
    index={0}
    isBag={true}
    openedTile={0}
  />
</Styled(View)>
`;

exports[`CartItemRadioButtons native Component CartItemRadioButtons native should render correctly in collapse state with BOSS Order and Boss Product Level Disabled 1`] = `
<Styled(View)>
  <CollapsibleContainer
    arrowPos="20px"
    body={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    defaultOpen={true}
    getExpandedState={[Function]}
    header={
      <React.Fragment>
        <ForwardRef
          disabled={true}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={true}
              disabledWithAlert={true}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
            <Connect(PromotionBannerContainer)
              bossBanner={true}
            />
          </ForwardRef>
          <ForwardRef>
            <View>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="store"
                  textDecoration={null}
                />
              </ForwardRef>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="Fri. Oct 16 - Fri. Oct 18"
                  textDecoration={null}
                />
              </ForwardRef>
            </View>
            <ForwardRef
              accessibilityLabel=""
              anchorVariation=""
              colorName={null}
              customStyle={Object {}}
              fontSizeVariation="small"
              justifyContent=""
              locator=""
              margins={null}
              onPress={[Function]}
              text=""
              visible={false}
            >
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[900]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs12"
                  margin={null}
                  numberOfLines={null}
                  text="undefined"
                  textDecoration={null}
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    height="auto"
    index={0}
    isBag={true}
    openedTile={0}
  />
</Styled(View)>
`;

exports[`CartItemRadioButtons native Component CartItemRadioButtons native should render correctly in collapse state with ECOM Order 1`] = `
<Styled(View)>
  <CollapsibleContainer
    arrowPos="20px"
    body={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    defaultOpen={true}
    getExpandedState={[Function]}
    header={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    height="auto"
    index={0}
    isBag={true}
    openedTile={0}
  />
</Styled(View)>
`;

exports[`CartItemRadioButtons native Component CartItemRadioButtons native should render correctly in collapsed state with BOPIS Order and Bopis Global Disabled 1`] = `
<Styled(View)>
  <CollapsibleContainer
    arrowPos="20px"
    body={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    defaultOpen={true}
    getExpandedState={[Function]}
    header={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
          <ForwardRef>
            <View>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="store"
                  textDecoration={null}
                />
              </ForwardRef>
            </View>
            <ForwardRef
              accessibilityLabel=""
              anchorVariation=""
              colorName={null}
              customStyle={Object {}}
              fontSizeVariation="small"
              justifyContent=""
              locator=""
              margins={null}
              onPress={[Function]}
              text=""
              visible={false}
            >
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[900]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs12"
                  margin={null}
                  numberOfLines={null}
                  text="undefined"
                  textDecoration={null}
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    height="auto"
    index={0}
    isBag={true}
    openedTile={0}
  />
</Styled(View)>
`;

exports[`CartItemRadioButtons native Component CartItemRadioButtons native should render correctly in expanded state with BOPIS Order 1`] = `
<Styled(View)>
  <CollapsibleContainer
    arrowPos="20px"
    body={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
          <ForwardRef>
            <View>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="store"
                  textDecoration={null}
                />
              </ForwardRef>
            </View>
            <ForwardRef
              accessibilityLabel=""
              anchorVariation=""
              colorName={null}
              customStyle={Object {}}
              fontSizeVariation="small"
              justifyContent=""
              locator=""
              margins={null}
              onPress={[Function]}
              text=""
              visible={false}
            >
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[900]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs12"
                  margin={null}
                  numberOfLines={null}
                  text="undefined"
                  textDecoration={null}
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    defaultOpen={true}
    getExpandedState={[Function]}
    header={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
            <Connect(PromotionBannerContainer)
              bossBanner={true}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    height="auto"
    index={0}
    isBag={true}
    openedTile={0}
  />
</Styled(View)>
`;

exports[`CartItemRadioButtons native Component CartItemRadioButtons native should render correctly in expanded state with BOPIS Order and Bopis Global Disabled 1`] = `
<Styled(View)>
  <CollapsibleContainer
    arrowPos="20px"
    body={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
          <ForwardRef>
            <View>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="store"
                  textDecoration={null}
                />
              </ForwardRef>
            </View>
            <ForwardRef
              accessibilityLabel=""
              anchorVariation=""
              colorName={null}
              customStyle={Object {}}
              fontSizeVariation="small"
              justifyContent=""
              locator=""
              margins={null}
              onPress={[Function]}
              text=""
              visible={false}
            >
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[900]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs12"
                  margin={null}
                  numberOfLines={null}
                  text="undefined"
                  textDecoration={null}
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    defaultOpen={true}
    getExpandedState={[Function]}
    header={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
            <Connect(PromotionBannerContainer)
              bossBanner={true}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    height="auto"
    index={0}
    isBag={true}
    openedTile={0}
  />
</Styled(View)>
`;

exports[`CartItemRadioButtons native Component CartItemRadioButtons native should render correctly in expanded state with BOPIS Order and Online only product 1`] = `
<Styled(View)>
  <CollapsibleContainer
    arrowPos="20px"
    body={
      <React.Fragment>
        <ForwardRef
          disabled={true}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={true}
              disabledWithAlert={true}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
          <ForwardRef>
            <View>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="store"
                  textDecoration={null}
                />
              </ForwardRef>
            </View>
            <ForwardRef
              accessibilityLabel=""
              anchorVariation=""
              colorName={null}
              customStyle={Object {}}
              fontSizeVariation="small"
              justifyContent=""
              locator=""
              margins={null}
              onPress={[Function]}
              text=""
              visible={false}
            >
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[900]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs12"
                  margin={null}
                  numberOfLines={null}
                  text="undefined"
                  textDecoration={null}
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    defaultOpen={true}
    getExpandedState={[Function]}
    header={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
            <ForwardRef
              accessibilityText=""
              color="gray[800]"
              dataLocator=""
              fontFamily="secondary"
              fontSize="fs12"
              margin={null}
              numberOfLines={null}
              spacingStyles="padding-left-MED"
              text="Not Available (Online only)"
              textDecoration={null}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    height="auto"
    index={0}
    isBag={true}
    openedTile={0}
  />
</Styled(View)>
`;

exports[`CartItemRadioButtons native Component should open change store popup for bopis 1`] = `
<Styled(View)>
  <CollapsibleContainer
    arrowPos="20px"
    body={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={true}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": true,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
          <ForwardRef>
            <View>
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  margin={null}
                  numberOfLines={null}
                  textDecoration={null}
                />
                <ForwardRef
                  accessibilityText=""
                  color="gray[800]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs10"
                  fontWeight="extrabold"
                  margin={null}
                  numberOfLines={null}
                  spacingStyles="padding-left-XXS"
                  text="store"
                  textDecoration={null}
                />
              </ForwardRef>
            </View>
            <ForwardRef
              accessibilityLabel=""
              anchorVariation=""
              colorName={null}
              customStyle={Object {}}
              fontSizeVariation="small"
              justifyContent=""
              locator=""
              margins={null}
              onPress={[Function]}
              text=""
              visible={false}
            >
              <ForwardRef>
                <ForwardRef
                  accessibilityText=""
                  color="gray[900]"
                  dataLocator=""
                  fontFamily="secondary"
                  fontSize="fs12"
                  margin={null}
                  numberOfLines={null}
                  text="undefined"
                  textDecoration={null}
                />
              </ForwardRef>
            </ForwardRef>
          </ForwardRef>
        </ForwardRef>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    defaultOpen={true}
    getExpandedState={[Function]}
    header={
      <React.Fragment>
        <ForwardRef
          disabled={false}
        >
          <ForwardRef>
            <LabeledRadioButton
              buttonInnerColor="#000"
              buttonOuterColor="#000"
              buttonOuterSize={20}
              buttonSize={10}
              buttonStyle={Object {}}
              checked={false}
              disabled={false}
              disabledWithAlert={false}
              index={0}
              labelStyle={
                Object {
                  "color": "#1a1a1a",
                  "fontSize": 14,
                }
              }
              labelWrapStyle={Object {}}
              obj={
                Object {
                  "label": undefined,
                  "value": false,
                }
              }
              onPress={[Function]}
            />
            <Connect(PromotionBannerContainer)
              bossBanner={true}
            />
          </ForwardRef>
        </ForwardRef>
      </React.Fragment>
    }
    height="auto"
    index={0}
    isBag={true}
    openedTile={0}
  />
</Styled(View)>
`;
