// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for BOPIS Item correctly for clearance item with kill switch 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <Styled(ItemAvailability)
      chooseDiff="bopisUnavailable"
      className="unavailable-error"
    />
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        />
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        />
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for BOPIS Item correctly for online only 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <Styled(ItemAvailability)
      chooseDiff="bopisUnavailable"
      className="unavailable-error"
    />
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        />
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        />
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for BOPIS Item correctly with Country any kill switch 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className="padding-left-10 responsive-edit-css"
            color="text.primary"
            component="div"
            dataLocator="cartItemEditLink"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
            tabIndex="0"
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        />
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for BOSS Item correctly for clearance item with kill switch 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        />
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        />
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for Boss Item correctly with Country any kill switch 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        />
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        />
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for Boss Item correctly with OOS 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className="unavailable-header"
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        />
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        >
          <Styled(BodyCopy)
            className="updateOOSMiniBag"
            color="error"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for Boss Item correctly with Radial Disabled & SOLDOUT 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
        <Styled(BodyCopy)
          className="soldOutLabel"
          color="text.primary"
          component="span"
          fontFamily="secondary"
          fontSize="fs12"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          textAlign="center"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        />
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        >
          <Styled(BodyCopy)
            className="updateOOSMiniBag"
            color="error"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for Boss Item correctly with Radial Disabled & inventory mismatch 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        />
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        >
          <Styled(BodyCopy)
            className="updateOOSMiniBag"
            color="error"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for Boss Item correctly with SOLDOUT 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
        <Styled(BodyCopy)
          className="soldOutLabel"
          color="text.primary"
          component="span"
          fontFamily="secondary"
          fontSize="fs12"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          textAlign="center"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        />
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        >
          <Styled(BodyCopy)
            className="updateOOSMiniBag"
            color="error"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for Boss Item correctly with inventory mismatch 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        />
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        >
          <Styled(BodyCopy)
            className="updateOOSMiniBag"
            color="error"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for Boss Item correctly with store ineligible 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        />
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        />
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for Boss Item correctly without any kill switch 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className="padding-left-10 responsive-edit-css"
            color="text.primary"
            component="div"
            dataLocator="cartItemEditLink"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
            tabIndex="0"
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        />
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for ECOM Item correctly 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className="padding-left-10 responsive-edit-css"
            color="text.primary"
            component="div"
            dataLocator="cartItemEditLink"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
            tabIndex="0"
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        />
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for ECOM Item correctly with OOS 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className="unavailable-header"
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className="padding-left-10 responsive-edit-css"
            color="text.primary"
            component="div"
            dataLocator="cartItemEditLink"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
            tabIndex="0"
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        >
          <Styled(BodyCopy)
            className="updateOOSMiniBag"
            color="error"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile - Boss Bopis Scenarios should render the Tile for ECOM Item correctly with Soldout 1`] = `
<div
  className="undefined tile-header"
>
  <div
    className=""
  >
    <div
      className="crossDeleteIconMiniBag"
    >
      <Styled(Image)
        alt="undefined Boys Basic Skinny Jeans"
        className="close-icon-image"
        onClick={[Function]}
        onKeyDown={[Function]}
        role="button"
        src="/static/images/large.png"
        tabIndex="0"
      />
    </div>
  </div>
  <Styled(Row)
    aria-label="Boys Basic Skinny Jeans. Price 123. undefined 1. Qty 1"
    className="product "
    fullBleed={true}
    tabIndex="0"
  >
    <Styled(Col)
      className="align-product-img product-brand-img-wrapper"
      colSize={
        Object {
          "large": 3,
          "medium": 2,
          "small": 2,
        }
      }
      key="productDetails"
    >
      <div
        className="imageWrapper"
      >
        <Styled(Image)
          className="product-image"
          data-locator="cartItemImage"
          src="https://test4.childrensplace.comundefined"
        />
        <Styled(BodyCopy)
          className="soldOutLabel"
          color="text.primary"
          component="span"
          fontFamily="secondary"
          fontSize="fs12"
          fontWeight="regular"
          letterSpacing="normal"
          lineHeight="normal"
          link={null}
          textAlign="center"
        />
      </div>
    </Styled(Col)>
    <Styled(Col)
      className="bag-product-detail-wrapper"
      colSize={
        Object {
          "large": 9,
          "medium": 6,
          "small": 4,
        }
      }
      key="productDetails"
    >
      <Styled(Row)
        className="product-detail-row"
      >
        <Styled(Col)
          className="productImgBrand"
          colSize={
            Object {
              "large": 12,
              "medium": 8,
              "small": 6,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="h2"
            dataLocator="cartItemTitle"
            fontFamily="secondary"
            fontSize="fs14"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Boys Basic Skinny Jeans
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row padding-top-10 color-map-size-fit"
      >
        <Styled(Col)
          className="product-detail"
          colSize={
            Object {
              "large": 10,
              "medium": 10,
              "small": 10,
            }
          }
        >
          <div>
            <div
              className="color-size-fit-label"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                Design:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemColor"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              undefined
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                undefined:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="cartItemSize"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
               
            </Styled(BodyCopy)>
            <Styled(BodyCopy)
              className="color-fit-size-separator"
              color="gray.600"
              component="span"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              |
            </Styled(BodyCopy)>
          </div>
          <div>
            <div
              className="color-size-fit-label color-fit-size-desktop"
            >
              <Styled(BodyCopy)
                className={null}
                color="text.primary"
                component="span"
                fontFamily="secondary"
                fontSize="fs12"
                fontWeight={
                  Array [
                    "extrabold",
                  ]
                }
                letterSpacing="normal"
                lineHeight="normal"
                link={null}
                textAlign="left"
              >
                 Qty:
              </Styled(BodyCopy)>
            </div>
            <Styled(BodyCopy)
              className="padding-left-10"
              color="gray.800"
              component="span"
              dataLocator="addedtobag-productqty"
              fontFamily="secondary"
              fontSize="fs12"
              fontWeight="regular"
              letterSpacing="normal"
              lineHeight="normal"
              link={null}
              textAlign="left"
            >
              1
            </Styled(BodyCopy)>
          </div>
        </Styled(Col)>
        <Styled(Col)
          colSize={
            Object {
              "large": 2,
              "medium": 2,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className="padding-left-10 responsive-edit-css"
            color="text.primary"
            component="div"
            dataLocator="cartItemEditLink"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            onKeyDown={[Function]}
            role="button"
            tabIndex="0"
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper padding-top-10"
      >
        <Styled(Col)
          className="label-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            Price: 
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 8,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={false}
            color="text.primary"
            component="span"
            dataLocator="cartItemPrice"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined123.00
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="product-detail-row label-responsive-wrapper"
      >
        <Styled(Col)
          className="label-responsive label-responsive-price"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="text.primary"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            undefined:
          </Styled(BodyCopy)>
        </Styled(Col)>
        <Styled(Col)
          className="value-responsive"
          colSize={
            Object {
              "large": 3,
              "medium": 3,
              "small": 2,
            }
          }
        >
          <Styled(BodyCopy)
            className={null}
            color="orange.800"
            component="span"
            dataLocator="cartItemPoints"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight={
              Array [
                "extrabold",
              ]
            }
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            textAlign="left"
          >
            123
          </Styled(BodyCopy)>
        </Styled(Col)>
      </Styled(Row)>
      <Styled(Row)
        className="padding-top-15 padding-bottom-20 parent-"
        fullBleed={true}
      >
        <Styled(Col)
          className="padding-left-13"
          colSize={
            Object {
              "large": 8,
              "medium": 6,
              "small": 4,
            }
          }
        />
        <Styled(Col)
          className="save-for-later-label"
          colSize={
            Object {
              "large": 3,
              "medium": 1,
              "small": 1,
            }
          }
        >
          <Styled(BodyCopy)
            className="updateOOSMiniBag"
            color="error"
            component="span"
            fontFamily="secondary"
            fontSize="fs12"
            fontWeight="regular"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            onClick={[Function]}
            textAlign="left"
          />
        </Styled(Col)>
      </Styled(Row)>
    </Styled(Col)>
  </Styled(Row)>
</div>
`;

exports[`CartItemTile common component renders correctly 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-kGXeez",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  padding: 10px 15px;
  border-bottom: 2px solid ",
          [Function],
          ";
  /*margin-bottom: 20px;*/
  position: relative;
  .product {
    padding-top: 6px;
  }
  .padding-left-10 {
    padding-left: 4px;
    @media ",
          [Function],
          " {
      width: ",
          [Function],
          ";
      display: inline-flex;
    }
  }
  .padding-left-6 {
    padding-left: 6px;
  }
  .padding-left-13 {
    padding-left: 13px;
  }
  .product-details {
    margin-bottom: 5px;
  }
  .product-image {
    text-align: center;
  }
  .brand-image {
    text-align: center;
    width: 55px;
  }
  .edit-button {
    padding-left: 10px;
  }
  .padding-top-15 {
    padding-top: 15px;
  }
  .padding-bottom-20 {
    padding-bottom: 20px;
  }
  .align-product-img {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .color-fit-size-separator {
    padding: 0 5px;
  }
  .color-size-fit-label {
    display: inline-block;
  }
  .responsive-edit-css {
    text-decoration: underline;
    padding-top: 2px;
    cursor: pointer;
    display: flex;
    justify-content: flex-start;
    padding-left: 15px;
  }
  .imageWrapper {
    position: relative;
    width: 100px;
  }
  .logoWrapper {
    position: relative;
    margin-top: 8px;
    display: flex;
    justify-content: center;
  }
  .product-attributes {
    display: inline-flex;
    flex-wrap: wrap;
    width: 75%;
    margin: 0 13px;
  }
  .editLinkWrapper {
    display: inline-block;
  }

  .crossDeleteIconMiniBag {
    float: right;
    cursor: pointer;
    width: 10px;
    height: 10px;
    padding-top: 0px;
    position: absolute;
    top: ",
          [Function],
          ";
    right: ",
          [Function],
          ";
  }

  .crossDeleteIconBag {
    float: right;
    cursor: pointer;
    width: 15px;
    height: 15px;
    padding-top: 0px;
    position: absolute;
    top: ",
          [Function],
          ";
    right: ",
          [Function],
          ";

    img {
      display: block;
    }
  }

  @media ",
          [Function],
          " {
    .crossDeleteIconBag {
      width: 10px;
      height: 10px;
    }
  }

  .product-detail {
    display: flex;
    flex-wrap: wrap;
  }

  .product-detail-row {
    width: 100%;
  }

  .unavailable-header {
    display: flex;
    justify-content: space-between;
  }

  .unavailable-error {
    padding-top: 0px;
    div {
      margin-right: 0px;
      margin-left: 0px;
      display: inline;
      width: 100%;
    }
  }

  .product-detail-bag {
    display: inline-block;
  }

  .label-responsive {
    width: fit-content;
    padding-right: 22px;
  }

  .label-responsive-price {
    margin-right: 0px;
  }

  @media ",
          [Function],
          " {
    .product-detail-bag {
      display: flex;
      flex-wrap: wrap;
      width: fit-content;
    }
  }

  .product-tile-wrapper {
    font-size: 13px;
    flex-wrap: nowrap;
    @media ",
          [Function],
          " {
      position: relative;
    }
    & .product-detail-row {
      margin: 0;
    }
    & .list-price {
      padding-left: 5px;
    }
    & .product-brand-img-wrapper {
      align-items: center;
      width: 103px;
      @media ",
          [Function],
          " {
        width: 105px;
      }
      & .brand-image {
        width: 60px;
      }
    }

    .color-size-fit-label {
      width: 49px;
    }

    .bag-product-detail-wrapper {
      position: relative;
      width: 100%;
      .color-fit-size-separator {
        padding: 0 10px;
      }

      .label-responsive {
        width: 49px;
        margin-right: 0px;
        padding-right: 0px;
      }

      .value-responsive {
        flex: 1;
        padding-left: 4px;
        width: 49px;
        margin-right: 0px;
      }
      .label-responsive-wrapper {
        padding-top: 2px;
        display: flex;
        flex: 1;
        padding-right: 0px;
        /* stylelint-disable */
        span:not(.list-price) {
          font-size: ",
          [Function],
          "px;
        }
        /* stylelint-enable */
      }

      .responsive-edit-css {
        text-decoration: underline;
        padding-top: 4px;
        cursor: pointer;
        display: flex;
        justify-content: flex-start;
        padding-left: 15px;
        left: 155px;
        bottom: 4px;
      }

      /* stylelint-disable */
      .product-detail-bag {
        padding-top: 4px;
        span {
          font-size: 13px;
        }
      }
      /* stylelint-enable */
    }

    @media ",
          [Function],
          " {
      .price-label {
        position: absolute;
        bottom: 0;
        right: 0;
      }
      .save-for-later-label {
        margin: ",
          [Function],
          " 0;
        width: 100%;
      }
      .color-map-size-fit {
        display: inline-grid;
      }
      .responsive-edit-css {
        text-decoration: underline;
        position: absolute;
        bottom: 0;
        right: 50%;
        cursor: pointer;
      }
      .bag-product-detail-wrapper {
        position: static;
      }
      .color-fit-size-separator {
        display: none;
      }
    }

    @media ",
          [Function],
          " {
      .color-fit-size-desktop {
        width: auto;
      }
    }

    .price-label {
      margin-left: 122px;
    }
  }

  .productImgBrand {
    p {
      margin-right: 35px;
    }
  }

  .soldOutLabel {
    width: 89px;
    height: 18px;
    background-color: ",
          [Function],
          ";
    color: white;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  .updateOOSMiniBag {
    /*margin-left: 56px;*/
    cursor: pointer;
    text-decoration: underline;
  }

  .updateOOSBag {
    cursor: pointer;
    text-decoration: underline;
  }

  .parent- {
    padding-bottom: 0px;
    .save-for-later-label {
      float: right;
      cursor: pointer;
    }
  }

  .parent-myBag {
    @media ",
          [Function],
          " {
      padding-bottom: 0px;
    }
  }

  .tile-header {
    position: relative;
  }

  .cart-item-radio-buttons {
    margin-top: 23px;
    @media ",
          [Function],
          " {
      margin-top: 19px;
    }
    @media ",
          [Function],
          " {
      margin-top: 27px;
    }
  }
  .heartIcon {
    margin-top: ",
          [Function],
          ";
  }
  .sflActions {
    text-decoration: underline;
    cursor: pointer;
  }
  .size-and-item-container {
    display: inline-flex;
  }
  .product-detail-review-page {
    display: inline-block;
  }

  .toggle-error {
    display: flex;
    align-items: center;
    background: ",
          [Function],
          ";

    img {
      padding-top: 0px;
      padding-right: ",
          [Function],
          ";
      padding-left: 0;
      padding-bottom: 1px;
    }
  }
  ",
          [Function],
          ";
",
          ";
",
        ],
      },
      "displayName": "Styled(CartItemTile)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-kGXeez",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  labels={
    Object {
      "color": "Color",
      "design": "Design",
      "price": "Price",
      "qty": "Qty",
      "sizeL": "Size",
    }
  }
  productDetail={
    Object {
      "itemInfo": Object {
        "fit": "regular",
        "isGiftItem": true,
        "myPlacePoints": 123,
        "name": "Boys Basic Skinny Jeans 1",
        "price": 123,
        "qty": "1",
        "size": "1",
      },
      "miscInfo": Object {
        "badge": "",
      },
    }
  }
/>
`;

exports[`CartItemTile common component renders correctly with bag page sfl section 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-kGXeez",
        "isStatic": false,
        "rules": Array [
          "
  ",
          "
  padding: 10px 15px;
  border-bottom: 2px solid ",
          [Function],
          ";
  /*margin-bottom: 20px;*/
  position: relative;
  .product {
    padding-top: 6px;
  }
  .padding-left-10 {
    padding-left: 4px;
    @media ",
          [Function],
          " {
      width: ",
          [Function],
          ";
      display: inline-flex;
    }
  }
  .padding-left-6 {
    padding-left: 6px;
  }
  .padding-left-13 {
    padding-left: 13px;
  }
  .product-details {
    margin-bottom: 5px;
  }
  .product-image {
    text-align: center;
  }
  .brand-image {
    text-align: center;
    width: 55px;
  }
  .edit-button {
    padding-left: 10px;
  }
  .padding-top-15 {
    padding-top: 15px;
  }
  .padding-bottom-20 {
    padding-bottom: 20px;
  }
  .align-product-img {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .color-fit-size-separator {
    padding: 0 5px;
  }
  .color-size-fit-label {
    display: inline-block;
  }
  .responsive-edit-css {
    text-decoration: underline;
    padding-top: 2px;
    cursor: pointer;
    display: flex;
    justify-content: flex-start;
    padding-left: 15px;
  }
  .imageWrapper {
    position: relative;
    width: 100px;
  }
  .logoWrapper {
    position: relative;
    margin-top: 8px;
    display: flex;
    justify-content: center;
  }
  .product-attributes {
    display: inline-flex;
    flex-wrap: wrap;
    width: 75%;
    margin: 0 13px;
  }
  .editLinkWrapper {
    display: inline-block;
  }

  .crossDeleteIconMiniBag {
    float: right;
    cursor: pointer;
    width: 10px;
    height: 10px;
    padding-top: 0px;
    position: absolute;
    top: ",
          [Function],
          ";
    right: ",
          [Function],
          ";
  }

  .crossDeleteIconBag {
    float: right;
    cursor: pointer;
    width: 15px;
    height: 15px;
    padding-top: 0px;
    position: absolute;
    top: ",
          [Function],
          ";
    right: ",
          [Function],
          ";

    img {
      display: block;
    }
  }

  @media ",
          [Function],
          " {
    .crossDeleteIconBag {
      width: 10px;
      height: 10px;
    }
  }

  .product-detail {
    display: flex;
    flex-wrap: wrap;
  }

  .product-detail-row {
    width: 100%;
  }

  .unavailable-header {
    display: flex;
    justify-content: space-between;
  }

  .unavailable-error {
    padding-top: 0px;
    div {
      margin-right: 0px;
      margin-left: 0px;
      display: inline;
      width: 100%;
    }
  }

  .product-detail-bag {
    display: inline-block;
  }

  .label-responsive {
    width: fit-content;
    padding-right: 22px;
  }

  .label-responsive-price {
    margin-right: 0px;
  }

  @media ",
          [Function],
          " {
    .product-detail-bag {
      display: flex;
      flex-wrap: wrap;
      width: fit-content;
    }
  }

  .product-tile-wrapper {
    font-size: 13px;
    flex-wrap: nowrap;
    @media ",
          [Function],
          " {
      position: relative;
    }
    & .product-detail-row {
      margin: 0;
    }
    & .list-price {
      padding-left: 5px;
    }
    & .product-brand-img-wrapper {
      align-items: center;
      width: 103px;
      @media ",
          [Function],
          " {
        width: 105px;
      }
      & .brand-image {
        width: 60px;
      }
    }

    .color-size-fit-label {
      width: 49px;
    }

    .bag-product-detail-wrapper {
      position: relative;
      width: 100%;
      .color-fit-size-separator {
        padding: 0 10px;
      }

      .label-responsive {
        width: 49px;
        margin-right: 0px;
        padding-right: 0px;
      }

      .value-responsive {
        flex: 1;
        padding-left: 4px;
        width: 49px;
        margin-right: 0px;
      }
      .label-responsive-wrapper {
        padding-top: 2px;
        display: flex;
        flex: 1;
        padding-right: 0px;
        /* stylelint-disable */
        span:not(.list-price) {
          font-size: ",
          [Function],
          "px;
        }
        /* stylelint-enable */
      }

      .responsive-edit-css {
        text-decoration: underline;
        padding-top: 4px;
        cursor: pointer;
        display: flex;
        justify-content: flex-start;
        padding-left: 15px;
        left: 155px;
        bottom: 4px;
      }

      /* stylelint-disable */
      .product-detail-bag {
        padding-top: 4px;
        span {
          font-size: 13px;
        }
      }
      /* stylelint-enable */
    }

    @media ",
          [Function],
          " {
      .price-label {
        position: absolute;
        bottom: 0;
        right: 0;
      }
      .save-for-later-label {
        margin: ",
          [Function],
          " 0;
        width: 100%;
      }
      .color-map-size-fit {
        display: inline-grid;
      }
      .responsive-edit-css {
        text-decoration: underline;
        position: absolute;
        bottom: 0;
        right: 50%;
        cursor: pointer;
      }
      .bag-product-detail-wrapper {
        position: static;
      }
      .color-fit-size-separator {
        display: none;
      }
    }

    @media ",
          [Function],
          " {
      .color-fit-size-desktop {
        width: auto;
      }
    }

    .price-label {
      margin-left: 122px;
    }
  }

  .productImgBrand {
    p {
      margin-right: 35px;
    }
  }

  .soldOutLabel {
    width: 89px;
    height: 18px;
    background-color: ",
          [Function],
          ";
    color: white;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  .updateOOSMiniBag {
    /*margin-left: 56px;*/
    cursor: pointer;
    text-decoration: underline;
  }

  .updateOOSBag {
    cursor: pointer;
    text-decoration: underline;
  }

  .parent- {
    padding-bottom: 0px;
    .save-for-later-label {
      float: right;
      cursor: pointer;
    }
  }

  .parent-myBag {
    @media ",
          [Function],
          " {
      padding-bottom: 0px;
    }
  }

  .tile-header {
    position: relative;
  }

  .cart-item-radio-buttons {
    margin-top: 23px;
    @media ",
          [Function],
          " {
      margin-top: 19px;
    }
    @media ",
          [Function],
          " {
      margin-top: 27px;
    }
  }
  .heartIcon {
    margin-top: ",
          [Function],
          ";
  }
  .sflActions {
    text-decoration: underline;
    cursor: pointer;
  }
  .size-and-item-container {
    display: inline-flex;
  }
  .product-detail-review-page {
    display: inline-block;
  }

  .toggle-error {
    display: flex;
    align-items: center;
    background: ",
          [Function],
          ";

    img {
      padding-top: 0px;
      padding-right: ",
          [Function],
          ";
      padding-left: 0;
      padding-bottom: 1px;
    }
  }
  ",
          [Function],
          ";
",
          ";
",
        ],
      },
      "displayName": "Styled(CartItemTile)",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-kGXeez",
      "target": [Function],
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  isBagPageSflSection={true}
  labels={
    Object {
      "color": "Color",
      "design": "Design",
      "price": "Price",
      "qty": "Qty",
      "sizeL": "Size",
    }
  }
  productDetail={
    Object {
      "itemInfo": Object {
        "fit": "regular",
        "isGiftItem": true,
        "myPlacePoints": 123,
        "name": "Boys Basic Skinny",
        "price": 123,
        "qty": "1",
        "size": "1",
      },
      "miscInfo": Object {
        "badge": "",
      },
    }
  }
/>
`;
