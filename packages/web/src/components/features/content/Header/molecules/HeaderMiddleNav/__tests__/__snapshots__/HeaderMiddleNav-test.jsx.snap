// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderMiddleNav component renders correctly 1`] = `
<Fragment>
  <Styled(Row)
    className="content-wrapper"
    fullBleed={true}
  >
    <Styled(Row)
      className="undefined header-middle-nav"
    >
      <Styled(Col)
        className="header-middle-nav-storelocator"
        colSize={
          Object {
            "large": 5,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Styled(StoreLocatorLink)
          labels={Object {}}
          store={
            Object {
              "basicInfo": Object {
                "address": Object {},
                "coordinates": Object {},
                "id": "",
                "phone": "",
                "storeName": "",
              },
              "features": Object {},
              "hours": Object {
                "holidayHours": Array [],
                "regularAndHolidayHours": Array [],
                "regularHours": Array [],
              },
            }
          }
        />
      </Styled(Col)>
      <Styled(Col)
        className="header-middle-nav-search"
        colSize={
          Object {
            "large": 2,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Styled(Image)
          alt="hamburger menu"
          className="hamburger-menu"
          data-locator="menu_bar_icon"
          onClick={[Function]}
          onKeyDown={[Function]}
          role="button"
          src="/static/version-not-available"
          tabIndex="0"
        />
        <Styled(StoreLocatorLink)
          labels={Object {}}
          store={
            Object {
              "basicInfo": Object {
                "address": Object {},
                "coordinates": Object {},
                "id": "",
                "phone": "",
                "storeName": "",
              },
              "features": Object {},
              "hours": Object {
                "holidayHours": Array [],
                "regularAndHolidayHours": Array [],
                "regularHours": Array [],
              },
            }
          }
        />
        <Styled(BrandLogo)
          alt="The Children's Place"
          className="header-brand__home-logo--brand"
          dataLocator="global_TCPlink"
          imgSrc="/static/version-not-available/images/tcp-logo.svg"
        />
      </Styled(Col)>
      <Styled(Col)
        className="textRight header-middle-login-section false"
        colSize={
          Object {
            "large": 5,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Connect(Styled(SearchBar))
          className="headerSearchBox"
          isFullSizeSearchModalOpen={false}
          isSearchOpen={false}
          onCloseClick={[Function]}
          setSearchState={[Function]}
        />
        <GuestUserInfo
          createAccount="createAccount"
          isDrawer={false}
          isRememberedUser={false}
          login="login"
          onLinkClick={[Function]}
          triggerLoginCreateAccount={true}
          userName={null}
        />
        <Styled(Anchor)
          anchorVariation="primary"
          aria-label="undefined undefined item"
          className=""
          fontSizeVariation="large"
          id="cartIcon"
          noLink={true}
          onClick={[Function]}
          to=""
        >
          <Styled(Image)
            alt="Product"
            className="product-image"
            data-locator="addedtobag-bag-icon"
            src="/static/version-not-available/images/bag.svg"
          />
          <Styled(BodyCopy)
            aria-hidden="true"
            className="cartCount"
            color="text.primary"
            component="span"
            fontFamily="primary"
            fontSize="fs10"
            fontWeight="semibold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            tabIndex="-1"
            textAlign="left"
          >
            0
          </Styled(BodyCopy)>
        </Styled(Anchor)>
      </Styled(Col)>
    </Styled(Row)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={
      Object {
        "large": true,
        "medium": true,
        "small": true,
      }
    }
  >
    <Styled(Col)
      className="header-middle-nav-bar"
      colSize={
        Object {
          "large": 12,
          "medium": 8,
          "small": 6,
        }
      }
      id="header-middle-nav"
    >
      <Connect(Styled(Navigation))
        closeNavigationDrawer={true}
        onLinkClick={[Function]}
        openNavigationDrawer={false}
        triggerLoginCreateAccount={true}
        userNameClick={true}
      />
    </Styled(Col)>
  </Styled(Row)>
  <Connect(MiniBagContainer)
    updateCartItemCount={[Function]}
  />
</Fragment>
`;

exports[`HeaderMiddleNav component renders correctly when props dont change 1`] = `
<Fragment>
  <Styled(Row)
    className="content-wrapper"
    fullBleed={true}
  >
    <Styled(Row)
      className="undefined header-middle-nav"
    >
      <Styled(Col)
        className="header-middle-nav-storelocator"
        colSize={
          Object {
            "large": 5,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Styled(StoreLocatorLink)
          labels={Object {}}
          store={
            Object {
              "basicInfo": Object {
                "address": Object {},
                "coordinates": Object {},
                "id": "",
                "phone": "",
                "storeName": "",
              },
              "features": Object {},
              "hours": Object {
                "holidayHours": Array [],
                "regularAndHolidayHours": Array [],
                "regularHours": Array [],
              },
            }
          }
        />
      </Styled(Col)>
      <Styled(Col)
        className="header-middle-nav-search"
        colSize={
          Object {
            "large": 2,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Styled(Image)
          alt="hamburger menu"
          className="hamburger-menu"
          data-locator="menu_bar_icon"
          onClick={[Function]}
          onKeyDown={[Function]}
          role="button"
          src="/static/version-not-available"
          tabIndex="0"
        />
        <Styled(StoreLocatorLink)
          labels={Object {}}
          store={
            Object {
              "basicInfo": Object {
                "address": Object {},
                "coordinates": Object {},
                "id": "",
                "phone": "",
                "storeName": "",
              },
              "features": Object {},
              "hours": Object {
                "holidayHours": Array [],
                "regularAndHolidayHours": Array [],
                "regularHours": Array [],
              },
            }
          }
        />
        <Styled(BrandLogo)
          alt="The Children's Place"
          className="header-brand__home-logo--brand"
          dataLocator="global_TCPlink"
          imgSrc="/static/version-not-available/images/tcp-logo.svg"
        />
      </Styled(Col)>
      <Styled(Col)
        className="textRight header-middle-login-section false"
        colSize={
          Object {
            "large": 5,
            "medium": 8,
            "small": 6,
          }
        }
      >
        <Connect(Styled(SearchBar))
          className="headerSearchBox"
          isFullSizeSearchModalOpen={false}
          isSearchOpen={false}
          onCloseClick={[Function]}
          setSearchState={[Function]}
        />
        <GuestUserInfo
          createAccount="createAccount"
          isDrawer={false}
          isRememberedUser={false}
          login="login"
          onLinkClick={[Function]}
          triggerLoginCreateAccount={true}
          userName={null}
        />
        <Styled(Anchor)
          anchorVariation="primary"
          aria-label="undefined undefined item"
          className=""
          fontSizeVariation="large"
          id="cartIcon"
          noLink={true}
          onClick={[Function]}
          to=""
        >
          <Styled(Image)
            alt="Product"
            className="product-image"
            data-locator="addedtobag-bag-icon"
            src="/static/version-not-available/images/bag.svg"
          />
          <Styled(BodyCopy)
            aria-hidden="true"
            className="cartCount"
            color="text.primary"
            component="span"
            fontFamily="primary"
            fontSize="fs10"
            fontWeight="semibold"
            letterSpacing="normal"
            lineHeight="normal"
            link={null}
            tabIndex="-1"
            textAlign="left"
          >
            0
          </Styled(BodyCopy)>
        </Styled(Anchor)>
      </Styled(Col)>
    </Styled(Row)>
  </Styled(Row)>
  <Styled(Row)
    fullBleed={
      Object {
        "large": true,
        "medium": true,
        "small": true,
      }
    }
  >
    <Styled(Col)
      className="header-middle-nav-bar"
      colSize={
        Object {
          "large": 12,
          "medium": 8,
          "small": 6,
        }
      }
      id="header-middle-nav"
    >
      <Connect(Styled(Navigation))
        closeNavigationDrawer={true}
        onLinkClick={[Function]}
        openNavigationDrawer={false}
        triggerLoginCreateAccount={true}
        userNameClick={true}
      />
    </Styled(Col)>
  </Styled(Row)>
  <Connect(MiniBagContainer)
    updateCartItemCount={[Function]}
  />
</Fragment>
`;
